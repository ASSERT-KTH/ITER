bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
2	[BUG]  [BUGGY]  ||  readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
3	[BUG]  [BUGGY]  ||  readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
4	[BUG]  [BUGGY]  ||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
5	[BUG]  [BUGGY]  ||  readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
6	[BUG]  [BUGGY]  ||  readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
7	[BUG]  [BUGGY]  ||  readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
8	[BUG]  [BUGGY]  ||  readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [CE]  ';'  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
9	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	271	None	replace
10	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	271	None	replace
11	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	271	None	replace
12	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	271	None	replace
13	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readP  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readP	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	271	None	replace
14	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	271	None	replace
15	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	271	None	replace
16	[BUG]  [BUGGY]  if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	199	None	replace
17	[BUG]  [BUGGY]  if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	199	None	replace
18	[BUG]  [BUGGY]  if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	199	None	replace
19	[BUG]  [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	199	None	replace
20	[BUG]  [BUGGY]  if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	199	None	replace
21	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
22	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
23	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
24	[BUG]  [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
25	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
26	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
27	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
28	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  5];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  5];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  5];	  byte[]    b    =    new    byte[buffer.length    *    2    +    3];    	non-compiled	[CE]  ';'  expected	41	None	replace
29	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  7];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  7];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  7];	  byte[]    b    =    new    byte[buffer.length    *    2    +    3];    	non-compiled	[CE]  ';'  expected	41	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  2);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  2);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  2);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    +    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos  +  1);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  readPos  +  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    +    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  3);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  3);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  3);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    +    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  +  1);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  +  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    +    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  4);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  4);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  4);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    +    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1,  buffer.length);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    +    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
36	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2];	  byte[]    b    =    new    byte[1];    	non-compiled	[CE]  ';'  expected	117	None	replace
37	[BUG]  [BUGGY]  byte[]  b  =  new  byte[DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1];    	non-compiled	[CE]  ';'  expected	117	None	replace
38	[BUG]  [BUGGY]  byte[]  b  =  new  byte[0];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[0];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[0];	  byte[]    b    =    new    byte[1];    	non-compiled	[CE]  ';'  expected	117	None	replace
39	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3];	  byte[]    b    =    new    byte[1];    	non-compiled	[CE]  ';'  expected	117	None	replace
40	[BUG]  [BUGGY]  byte[]  b  =  new  byte[16];  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[16];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[16];	  byte[]    b    =    new    byte[1];    	non-compiled	[CE]  ';'  expected	117	None	replace
41	[BUG]  [BUGGY]  byte[]  b  =  new  byte[6];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[6];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[6];	  byte[]    b    =    new    byte[1];    	non-compiled	[CE]  ';'  expected	117	None	replace
42	[BUG]  [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  DEFAULT_BUFFER_RESIZE_FACTOR.length;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
43	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length  +  1;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length  +  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length  +  1;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
44	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length  -  1;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length  -  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length  -  1;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
45	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE_FACTOR.length;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE_FACTOR.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE_FACTOR.length;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
46	[BUG]  [BUGGY]  pos  =  0,  readPos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
47	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  5];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  5];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  5];	  byte[]    b    =    new    byte[buffer.length    +    3];    	non-compiled	[CE]  ';'  expected	140	None	replace
48	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
49	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
50	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
51	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  readPos];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  readPos];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  readPos];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
52	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  readPos);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  0,  readPos);	  System.arraycopy(buffer,    0,    p,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	188	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  readPos);  pos  =  1;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  readPos);  pos  =  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  0,  readPos);  pos  =  1;	  System.arraycopy(buffer,    0,    p,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	188	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  1,  readPos);  pos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  1,  readPos);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  1,  readPos);  pos  =  0;	  System.arraycopy(buffer,    0,    p,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	188	None	replace
56	[BUG]  [BUGGY]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    3];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	230	None	replace
57	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  24  +  1];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  24  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  24  +  1];	  byte[]    b    =    new    byte[buffer.length    *    24];    	non-compiled	[CE]  ';'  expected	46	None	replace
58	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  +  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  +  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  +  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	166	None	replace
59	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  *  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  2];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	166	None	replace
60	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  4];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  *  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  4];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	166	None	replace
61	[BUG]  [BUGGY]  byte[]  b  =  new  byte[length  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[length  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[length  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	166	None	replace
62	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  +  1];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  +  1];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	166	None	replace
63	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  3];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  *  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  3];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	166	None	replace
64	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  2  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
65	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  4  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  4  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  4  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
66	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE  +  1];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
67	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  2];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
68	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  3  +  1];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  3  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  3  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
69	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  10  +  1];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  10  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  10  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
70	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  8  +  1];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  8  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  8  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
71	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  3];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  3];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
72	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	76	None	replace
73	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	76	None	replace
74	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	76	None	replace
75	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	76	None	replace
76	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	76	None	replace
77	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	76	None	replace
78	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	204	None	replace
79	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	204	None	replace
80	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	204	None	replace
81	[BUG]  [BUGGY]  ||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	204	None	replace
82	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_SIZE];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_SIZE];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_SIZE];	  byte[]    buffer    =    new    byte[buffer.length    *    1];    	non-compiled	[CE]  ';'  expected	100	None	replace
83	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  10];  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  10];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  10];	  byte[]    buffer    =    new    byte[buffer.length    *    1];    	non-compiled	[CE]  ';'  expected	100	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  0,  readPos);	  System.arraycopy(buffer,    0,    readPos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	172	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  pos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  pos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  pos);	  System.arraycopy(buffer,    0,    readPos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	172	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readBuffer,  0,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readBuffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readBuffer,  0,  readPos);	  System.arraycopy(buffer,    0,    readPos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	172	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  readPos  +  1);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  readPos  +  1);	  System.arraycopy(buffer,    0,    readPos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	172	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  1,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  1,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  1,  readPos);	  System.arraycopy(buffer,    0,    readPos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	172	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  pos  =  0;	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    pos    =    0;    	non-compiled	[CE]  ';'  expected	155	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  buffer.length);	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    pos    =    0;    	non-compiled	[CE]  ';'  expected	155	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  pos  =  1;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  pos  =  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  pos  =  1;	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    pos    =    0;    	non-compiled	[CE]  ';'  expected	155	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  ch,  0,  buffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  ch,  0,  buffer.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  ch,  0,  buffer.length);  pos  =  0;	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    pos    =    0;    	non-compiled	[CE]  ';'  expected	155	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  l,  0,  buffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  l,  0,  buffer.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  l,  0,  buffer.length);  pos  =  0;	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    pos    =    0;    	non-compiled	[CE]  ';'  expected	155	None	replace
94	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
95	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
96	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
97	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
98	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
99	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
100	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
101	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
102	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    1];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
103	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  32];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  32];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  32];	  byte[]    b    =    new    byte[readPos    *    16];    	non-compiled	[CE]  ';'  expected	247	None	replace
104	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  16  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  16  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  16  +  1];	  byte[]    b    =    new    byte[readPos    *    16];    	non-compiled	[CE]  ';'  expected	247	None	replace
105	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	180	None	replace
106	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	180	None	replace
107	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	180	None	replace
108	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	180	None	replace
109	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  4];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  3  +  4];	  byte[]    b    =    new    byte[buffer.length    *    3    +    2];    	non-compiled	[CE]  ';'  expected	182	None	replace
110	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  10  +  2];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  10  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  10  +  2];	  byte[]    b    =    new    byte[buffer.length    *    3    +    2];    	non-compiled	[CE]  ';'  expected	182	None	replace
111	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  2];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  6  +  2];	  byte[]    b    =    new    byte[buffer.length    *    3    +    2];    	non-compiled	[CE]  ';'  expected	182	None	replace
112	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  2];	  byte[]    b    =    new    byte[buffer.length    *    3    +    2];    	non-compiled	[CE]  ';'  expected	182	None	replace
113	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
114	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
115	[BUG]  [BUGGY]  if(pos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
116	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
117	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
118	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
119	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	57	None	replace
120	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
121	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
122	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
123	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
124	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	24	None	replace
125	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  pos  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2];  pos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	159	None	replace
126	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  readPos  =  0;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  2];  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	159	None	replace
127	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	159	None	replace
128	[BUG]  [BUGGY]  pos  =  readPos  +  3;  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  3;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  3;	  pos    =    readPos    +    2;    	non-compiled	[CE]  	8	None	replace
129	[BUG]  [BUGGY]  pos  =  readPos  +  4;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  4;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  4;	  pos    =    readPos    +    2;    	non-compiled	[CE]  ';'  expected	8	None	replace
130	[BUG]  [BUGGY]  pos  =  readPos  *  2;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  *  2;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  *  2;	  pos    =    readPos    +    2;    	non-compiled	[CE]  ';'  expected	8	None	replace
131	[BUG]  [BUGGY]  pos  =  readPos  +  5;  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  5;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  5;	  pos    =    readPos    +    2;    	non-compiled	[CE]  ';'  expected	8	None	replace
132	[BUG]  [BUGGY]  pos  =  readPos  +  6;  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  6;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  6;	  pos    =    readPos    +    2;    	non-compiled	[CE]  ';'  expected	8	None	replace
133	[BUG]  [BUGGY]  pos  =  readPos  +  8;  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  8;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  8;	  pos    =    readPos    +    2;    	non-compiled	[CE]  ';'  expected	8	None	replace
134	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  2];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	105	None	replace
135	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	274	None	replace
136	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	274	None	replace
137	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	274	None	replace
138	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	274	None	replace
139	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length    	non-compiled	[CE]  ';'  expected	298	None	replace
140	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length    	non-compiled	[CE]  ';'  expected	298	None	replace
141	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length    	non-compiled	[CE]  ';'  expected	298	None	replace
142	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length    	non-compiled	[CE]  ';'  expected	298	None	replace
143	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	216	None	replace
144	[BUG]  [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	216	None	replace
145	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	216	None	replace
146	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	216	None	replace
147	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  	216	None	replace
148	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  	216	None	replace
149	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    1];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  	58	None	replace
150	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    1];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  	58	None	replace
151	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[Buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[Buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[Buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  	193	None	replace
152	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  	193	None	replace
153	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[4  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[4  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[4  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  	193	None	replace
154	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  readPos];  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  readPos];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  	262	None	replace
155	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_SIZE];  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  	262	None	replace
156	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  4];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  4];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  	262	None	replace
157	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  8];  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  8];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  8];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  	262	None	replace
158	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE  +  1];  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE  +  1];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  	262	None	replace
159	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  16];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  16];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  16];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	262	None	replace
160	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  12];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  12];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  12];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	262	None	replace
161	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1);  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  1);	  byte[]    buffer    =    new    byte[buffer.length    *    2);    	non-compiled	[CE]  ';'  expected	103	None	replace
162	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  byte[]    buffer    =    new    byte[buffer.length    *    2);    	non-compiled	[CE]  ';'  expected	103	None	replace
163	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  readPos);  [CE]  ';'  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    2);    	non-compiled	[CE]  ';'  expected	103	None	replace
164	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4);  [CE]  ';'  expected  [FE]                                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4);	  byte[]    buffer    =    new    byte[buffer.length    *    2);    	non-compiled	[CE]  ';'  expected	103	None	replace
165	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR);  [CE]  ';'  expected  [FE]                                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR);	  byte[]    buffer    =    new    byte[buffer.length    *    2);    	non-compiled	[CE]  ';'  expected	103	None	replace
166	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  4);  [CE]  ';'  expected  [FE]                                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  4);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  4);	  byte[]    buffer    =    new    byte[buffer.length    *    2);    	non-compiled	[CE]  ';'  expected	103	None	replace
167	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [CE]  ';'  expected  [FE]                                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);	  byte[]    buffer    =    new    byte[buffer.length    *    2);    	non-compiled	[CE]  ';'  expected	103	None	replace
168	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	92	None	replace
169	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	92	None	replace
170	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	92	None	replace
171	[BUG]  [BUGGY]  byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	92	None	replace
172	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	92	None	replace
173	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  10  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  10  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  10  +  1];	  byte[]    b    =    new    byte[buffer.length    *    3    +    1];    	non-compiled	[CE]  ';'  expected	107	None	replace
174	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	53	None	replace
175	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	53	None	replace
176	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	260	None	replace
177	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	260	None	replace
178	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	260	None	replace
179	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	260	None	replace
180	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	260	None	replace
181	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	260	None	replace
182	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
183	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
184	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
185	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  3  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
186	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
187	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  1  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  1  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  1  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
188	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
189	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  6  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
190	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
193	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  /  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  /  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  /  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
194	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  pos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  pos  =  0;	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
195	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  2];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  2];	  byte[]    b    =    new    byte[readPos    *    2];    	non-compiled	[CE]  ';'  expected	118	None	replace
196	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  4];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  2  +  4];	  byte[]    b    =    new    byte[readPos    *    2];    	non-compiled	[CE]  ';'  expected	118	None	replace
197	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	240	None	replace
198	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	240	None	replace
199	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	240	None	replace
200	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	240	None	replace
201	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	276	None	replace
202	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	276	None	replace
203	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	276	None	replace
204	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	276	None	replace
205	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	276	None	replace
206	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	276	None	replace
207	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	276	None	replace
208	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	82	None	replace
209	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	82	None	replace
210	[BUG]  [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	82	None	replace
211	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  1000];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  1000];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  1000];	  byte[]    b    =    new    byte[buffer.length    *    10];    	non-compiled	[CE]  ';'  expected	13	None	replace
212	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,	  System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	147	None	replace
213	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(bu  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(bu	  System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	147	None	replace
214	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  /  2];	  byte[]    b    =    new    byte[buffer.length    /    4];    	non-compiled	[CE]  ';'  expected	237	None	replace
215	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  4];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  -  4];	  byte[]    b    =    new    byte[buffer.length    /    4];    	non-compiled	[CE]  ';'  expected	237	None	replace
216	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  4  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  4  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  /  4  +  1];	  byte[]    b    =    new    byte[buffer.length    /    4];    	non-compiled	[CE]  ';'  expected	237	None	replace
217	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  3];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  /  3];	  byte[]    b    =    new    byte[buffer.length    /    4];    	non-compiled	[CE]  ';'  expected	237	None	replace
218	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
219	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
220	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
221	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
222	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
223	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
224	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	239	None	replace
225	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length);	  System.arraycopy(buffer,    0,    b,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	326	None	replace
226	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  2);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  2);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  2);	  System.arraycopy(buffer,    0,    b,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	326	None	replace
227	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR);	  System.arraycopy(buffer,    0,    b,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	326	None	replace
228	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  1,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  1,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  1,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    b,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	326	None	replace
229	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);	  System.arraycopy(buffer,    0,    b,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	326	None	replace
230	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  4);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  4);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  4);	  System.arraycopy(buffer,    0,    b,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	326	None	replace
231	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  pos);  readPos  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  pos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  pos);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	60	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	60	None	replace
233	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  readPos);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	60	None	replace
234	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	60	None	replace
235	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  pos);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  pos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  pos);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	60	None	replace
236	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  offset,  readPos);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	60	None	replace
237	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  pos,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  pos,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  pos,  readPos);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	60	None	replace
238	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  this.readPos,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  this.readPos,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  this.readPos,  readPos);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	60	None	replace
239	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  2];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
240	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
241	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
242	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  4];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
243	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  1];  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  1];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
244	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  3];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
245	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  1];  [CE]  ';'  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  1];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
246	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  10];  [CE]  ';'  expected  [FE]                                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  10];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  10];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
247	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	241	None	replace
248	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	241	None	replace
249	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	241	None	replace
250	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
251	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
252	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
253	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
254	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
255	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	293	None	replace
256	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	293	None	replace
257	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	293	None	replace
258	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	293	None	replace
259	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	293	None	replace
260	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	293	None	replace
261	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	293	None	replace
262	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    4];    	non-compiled	[CE]  ';'  expected	310	None	replace
263	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  8];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  8];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  8];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    4];    	non-compiled	[CE]  ';'  expected	310	None	replace
264	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  6];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  6];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  6];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    4];    	non-compiled	[CE]  ';'  expected	310	None	replace
265	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
266	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
267	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
268	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
269	[BUG]  [BUGGY]  char[]  b  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  b  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  b  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
270	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
271	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
272	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
273	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
274	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
275	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
276	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
277	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
278	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  System.arra  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  System.arra	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	169	None	replace
279	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	169	None	replace
280	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	252	None	replace
281	[BUG]  [BUGGY]  if(pos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	252	None	replace
282	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	252	None	replace
283	[BUG]  [BUGGY]  if(pos  >=  0)  {  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	252	None	replace
284	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	252	None	replace
285	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	252	None	replace
286	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	252	None	replace
287	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	34	None	replace
288	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	34	None	replace
289	[BUG]  [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	77	None	replace
290	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	77	None	replace
291	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	77	None	replace
292	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR]  =  System.arraycopy(buffer,  0,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR]  =  System.arraycopy(buffer,  0,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR]  =  System.arraycopy(buffer,  0,  readPos,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	77	None	replace
293	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	77	None	replace
294	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
295	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
296	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
297	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
298	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arra  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arra	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
299	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
300	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	111	None	replace
301	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	111	None	replace
302	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	111	None	replace
303	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  +  readPos];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  +  readPos];	  byte[]    b    =    new    byte[1    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	111	None	replace
304	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  buffer.length];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  +  buffer.length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  buffer.length];	  byte[]    b    =    new    byte[buffer.length    +    readPos];    	non-compiled	[CE]  ';'  expected	226	None	replace
305	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  readPos];	  byte[]    b    =    new    byte[buffer.length    +    readPos];    	non-compiled	[CE]  ';'  expected	226	None	replace
306	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  readPos  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  readPos  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  readPos  +  1];	  byte[]    b    =    new    byte[buffer.length    +    readPos];    	non-compiled	[CE]  ';'  expected	226	None	replace
307	[BUG]  [BUGGY]  if(readPos  <  pos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  pos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  pos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    <    readPos)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
308	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(pos  <  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(pos  <  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(pos  <  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    <    readPos)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
309	[BUG]  [BUGGY]  if(pos  <  readPos)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  readPos)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  readPos)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    <    readPos)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
310	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(pos  <  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(pos  <  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(pos  <  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    <    readPos)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
311	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	209	None	replace
312	[BUG]  [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	209	None	replace
313	[BUG]  [BUGGY]  if(pos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	209	None	replace
314	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	209	None	replace
315	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
316	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
317	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
318	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
319	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
320	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
321	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	175	None	replace
322	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	175	None	replace
323	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	86	None	replace
324	[BUG]  [BUGGY]  if(pos  <  =  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    =    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
325	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }	  if(readPos    <    =    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
326	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }	  if(readPos    <    =    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
327	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  2];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  2];	  byte[]    b    =    new    byte[buffer.length    *    16    +    1];    	non-compiled	[CE]  ';'  expected	44	None	replace
328	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  1];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  32  +  1];	  byte[]    b    =    new    byte[buffer.length    *    16    +    1];    	non-compiled	[CE]  ';'  expected	44	None	replace
329	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  1;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  +  1;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
330	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  2;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  2;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  *  2;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
331	[BUG]  [BUGGY]  pos  =(int)Math.pow(10,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(int)Math.pow(10,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(int)Math.pow(10,  readPos);	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
332	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  4;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  4;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  *  4;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
333	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
334	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
335	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
336	[BUG]  [BUGGY]  ||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
337	[BUG]  [BUGGY]  byte[]  b  =  new  byte[256];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[256];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[256];	  byte[]    b    =    new    byte[128];    	non-compiled	[CE]  ';'  expected	116	None	replace
338	[BUG]  [BUGGY]  byte[]  b  =  new  byte[228];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[228];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[228];	  byte[]    b    =    new    byte[128];    	non-compiled	[CE]  ';'  expected	116	None	replace
339	[BUG]  [BUGGY]  byte[]  b  =  new  byte[64];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[64];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[64];	  byte[]    b    =    new    byte[128];    	non-compiled	[CE]  ';'  expected	116	None	replace
340	[BUG]  [BUGGY]  byte[]  b  =  new  byte[32];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[32];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[32];	  byte[]    b    =    new    byte[128];    	non-compiled	[CE]  ';'  expected	116	None	replace
341	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1024];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1024];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1024];	  byte[]    b    =    new    byte[128];    	non-compiled	[CE]  ';'  expected	116	None	replace
342	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	261	None	replace
343	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	261	None	replace
344	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	261	None	replace
345	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	261	None	replace
346	[BUG]  [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	269	None	replace
347	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	269	None	replace
348	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	269	None	replace
349	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	269	None	replace
350	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readP  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readP	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	269	None	replace
351	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	200	None	replace
352	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	200	None	replace
353	[BUG]  [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	200	None	replace
354	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	200	None	replace
355	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	129	None	replace
356	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	129	None	replace
357	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	129	None	replace
358	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	129	None	replace
359	[BUG]  [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	250	None	replace
360	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	250	None	replace
361	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	250	None	replace
362	[BUG]  [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	250	None	replace
363	[BUG]  [BUGGY]  if(pos  >  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	312	None	replace
364	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	312	None	replace
365	[BUG]  [BUGGY]  if(pos  <  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	312	None	replace
366	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  3];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  3];	  byte[]    b    =    new    byte[readPos    *    3];    	non-compiled	[CE]  ';'  expected	122	None	replace
367	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  /  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[size  /  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  /  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[size    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	318	None	replace
368	[BUG]  [BUGGY]  byte[]  b  =  new  byte[length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[length  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[size    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	318	None	replace
369	[BUG]  [BUGGY]  byte[]  b  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[size    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	318	None	replace
370	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  *  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[size  *  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  *  2];	  byte[]    b    =    new    byte[size    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	318	None	replace
371	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	281	None	replace
372	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	281	None	replace
373	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
374	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
375	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
376	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
377	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
378	[BUG]  [BUGGY]  byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
379	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
380	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  readPos  +  1];  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  *  readPos  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  readPos  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
381	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
382	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
383	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
384	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
385	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
386	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	246	None	replace
387	[BUG]  [BUGGY]  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	246	None	replace
388	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arra    	non-compiled	[CE]  ';'  expected	36	None	replace
389	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
390	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
391	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
392	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
393	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
394	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
395	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
396	[BUG]  [BUGGY]  byte[]  b  =  new  byte[0  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[0  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[0  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
397	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  1];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
398	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
399	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  3];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  3];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  3];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
400	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  4];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  4];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  4];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
401	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  2];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  2];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  2];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
402	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
403	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  6];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  6];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  6];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
404	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5];	  byte[]    b    =    new    byte[4    *    2];    	non-compiled	[CE]  ';'  expected	93	None	replace
405	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  2  +  1];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  *  2  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  2  +  1];	  byte[]    b    =    new    byte[4    *    2];    	non-compiled	[CE]  ';'  expected	93	None	replace
406	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4  +  1];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4  +  1];	  byte[]    buffer    =    new    byte[buffer.length    *    4];    	non-compiled	[CE]  ';'  expected	97	None	replace
407	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_READ_FACTOR];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_READ_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_READ_FACTOR];	  byte[]    buffer    =    new    byte[buffer.length    *    4];    	non-compiled	[CE]  ';'  expected	97	None	replace
408	[BUG]  [BUGGY]  pos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
409	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
410	[BUG]  [BUGGY]  readPos  =  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
411	[BUG]  [BUGGY]  readPos  =  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
412	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
413	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
414	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
415	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
416	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
417	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
418	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[Buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[Buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[Buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	266	None	replace
419	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[4  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[4  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[4  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	266	None	replace
420	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	266	None	replace
421	[BUG]  [BUGGY]  byte[]  b  =  new  byte[8];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[8];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[8];	  byte[]    b    =    new    byte[4];    	non-compiled	[CE]  ';'  expected	284	None	replace
422	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
423	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR  ||  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR  ||  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR  ||  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
424	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
425	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR  ||  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR  ||  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR  ||  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
426	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	135	None	replace
427	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	135	None	replace
428	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  0,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	135	None	replace
429	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  buffer,  0,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	135	None	replace
430	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  ch,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  ch,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  ch,  0,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	135	None	replace
431	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  1000];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  1000];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  1000];	  byte[]    b    =    new    byte[readPos    *    10];    	non-compiled	[CE]  ';'  expected	126	None	replace
432	[BUG]  [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
433	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
434	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
435	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
436	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
437	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[buffer.length]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[buffer.length]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[buffer.length]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
438	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
439	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
440	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR]  =  0;  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR]  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR]  =  0;  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	161	None	replace
441	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  readPos  +  1];	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
442	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos  +  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  readPos  +  2];	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
443	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos  +  3];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  readPos  +  3];	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
444	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  4  +  buffer.length];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  4  +  buffer.length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  4  +  buffer.length];	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
445	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  readPos];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  8  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
446	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  9];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  9];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  9];	  byte[]    b    =    new    byte[buffer.length    *    2    +    8];    	non-compiled	[CE]  ';'  expected	43	None	replace
447	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  bytes,  0,  readPos);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  bytes,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  bytes,  0,  readPos);	  System.arraycopy(buffer,    0,    bytes,    0,    readPos);    	non-compiled	[CE]  ';'  expected	212	None	replace
448	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  bytes.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  bytes.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  bytes.length);	  System.arraycopy(buffer,    0,    bytes,    0,    readPos);    	non-compiled	[CE]  ';'  expected	212	None	replace
449	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  bytes);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  bytes);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  bytes);	  System.arraycopy(buffer,    0,    bytes,    0,    readPos);    	non-compiled	[CE]  ';'  expected	212	None	replace
450	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  0,  readPos);	  System.arraycopy(buffer,    0,    bytes,    0,    readPos);    	non-compiled	[CE]  ';'  expected	212	None	replace
451	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  6];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  6];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  6];	  byte[]    b    =    new    byte[buffer.length    *    4    +    1];    	non-compiled	[CE]  ';'  expected	104	None	replace
452	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	178	None	replace
453	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	178	None	replace
454	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	178	None	replace
455	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  readPos.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  readPos.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  readPos.length);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	178	None	replace
456	[BUG]  [BUGGY]  char[]  buffer  =  new  char[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	178	None	replace
457	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	178	None	replace
458	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	178	None	replace
459	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	112	None	replace
460	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    DEFAULT_BUFFER_RESIZE_FACTOR,    readPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
461	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    DEFAULT_BUFFER_RESIZE_FACTOR,    readPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
462	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    DEFAULT_BUFFER_RESIZE_FACTOR,    readPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
463	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    DEFAULT_BUFFER_RESIZE_FACTOR,    readPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
464	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
465	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
466	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
467	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
468	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
469	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
470	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	163	None	replace
471	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	163	None	replace
472	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	163	None	replace
473	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	163	None	replace
474	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	163	None	replace
475	[BUG]  [BUGGY]  File[]  buffer  =  new  File[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  File[]  buffer  =  new  File[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	File[]  buffer  =  new  File[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	163	None	replace
476	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
477	[BUG]  [BUGGY]  char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
478	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
479	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	196	None	replace
480	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	196	None	replace
481	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	196	None	replace
482	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	196	None	replace
483	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  10  +  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  *  10  +  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  10  +  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	196	None	replace
484	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  4  +  1];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  *  4  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  4  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	196	None	replace
485	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	35	None	replace
486	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  bytes.length);  pos  =  0;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  bytes.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  bytes.length);  pos  =  0;	  System.arraycopy(buffer,    0,    bytes,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	156	None	replace
487	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  pos  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  readPos);  pos  =  0;	  System.arraycopy(buffer,    0,    bytes,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	156	None	replace
488	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  bytes);  pos  =  0;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  bytes);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  bytes);  pos  =  0;	  System.arraycopy(buffer,    0,    bytes,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	156	None	replace
489	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	319	None	replace
490	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	319	None	replace
491	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	319	None	replace
492	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	319	None	replace
493	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
494	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
495	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
496	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
497	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
498	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	120	None	replace
499	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  readPos];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  readPos];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	120	None	replace
500	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	81	None	replace
501	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  /  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[size  /  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  /  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[size    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	308	None	replace
502	[BUG]  [BUGGY]  byte[]  b  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[size    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	308	None	replace
503	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	187	None	replace
504	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  +  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  +  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  +  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	187	None	replace
505	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	187	None	replace
506	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  *  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  *  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  *  2];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	187	None	replace
507	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  -  1);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  -  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  -  1);	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
508	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  -  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  -  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  -  readPos);	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
509	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  2);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  2);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  2);	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
510	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  -  2);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  -  2);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  -  2);	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
511	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	181	None	replace
512	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	181	None	replace
513	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	181	None	replace
514	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  5];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  5];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  5];	  byte[]    b    =    new    byte[buffer.length    *    4    +    3];    	non-compiled	[CE]  ';'  expected	145	None	replace
515	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  4];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  4];	  byte[]    b    =    new    byte[buffer.length    *    4    +    3];    	non-compiled	[CE]  ';'  expected	145	None	replace
516	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  8];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  8];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  8];	  byte[]    b    =    new    byte[buffer.length    *    4    +    3];    	non-compiled	[CE]  ';'  expected	145	None	replace
517	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  2];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	106	None	replace
518	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  3];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  3];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	106	None	replace
519	[BUG]  [BUGGY]  pos  =  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    buffer.length;    	non-compiled	[CE]  ';'  expected	7	None	replace
520	[BUG]  [BUGGY]  pos  =  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;	  pos    =    buffer.length;    	non-compiled	[CE]  ';'  expected	7	None	replace
521	[BUG]  [BUGGY]  pos  =  buffer.length  -  readPos;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  buffer.length  -  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  buffer.length  -  readPos;	  pos    =    buffer.length;    	non-compiled	[CE]  ';'  expected	7	None	replace
522	[BUG]  [BUGGY]  pos  =  buffer.length  -  1;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  buffer.length  -  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  buffer.length  -  1;	  pos    =    buffer.length;    	non-compiled	[CE]  ';'  expected	7	None	replace
523	[BUG]  [BUGGY]  pos  =  buffer.length  *  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  buffer.length  *  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  buffer.length  *  DEFAULT_BUFFER_SIZE;	  pos    =    buffer.length;    	non-compiled	[CE]  ';'  expected	7	None	replace
524	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE_FACTOR;  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE_FACTOR;	  pos    =    buffer.length;    	non-compiled	[CE]  ';'  expected	7	None	replace
525	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	191	None	replace
526	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  8];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  8];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  8];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	191	None	replace
527	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
528	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
529	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
530	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
531	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
532	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
533	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	56	None	replace
534	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
535	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
536	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
537	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
538	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
539	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  4];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  *  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  4];	  byte[]    b    =    new    byte[2    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	88	None	replace
540	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  2  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  *  2  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  2  +  1];	  byte[]    b    =    new    byte[2    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	88	None	replace
541	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  10  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  *  10  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  10  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[2    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	88	None	replace
542	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  readPos];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  readPos];	  byte[]    b    =    new    byte[2    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	88	None	replace
543	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos,  readPos);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
544	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  1,  pos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  1,  pos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  1,  pos);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
545	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1,  pos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1,  pos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1,  pos);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
546	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  pos  +  1);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  pos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos,  pos  +  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
547	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    	non-compiled	[CE]  ';'  expected	71	None	replace
548	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	231	None	replace
549	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	231	None	replace
550	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	231	None	replace
551	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	231	None	replace
552	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    	non-compiled	[CE]  ';'  expected	307	None	replace
553	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	272	None	replace
554	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	272	None	replace
555	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	272	None	replace
556	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	272	None	replace
557	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	272	None	replace
558	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readP  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readP	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	272	None	replace
559	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	244	None	replace
560	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	244	None	replace
561	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  bytes,  0,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  bytes,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  bytes,  0,  buffer.length);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
562	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  byteBuffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  byteBuffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  byteBuffer,  0,  buffer.length);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
563	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  c,  0,  buffer.length);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
564	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  ch,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  ch,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  ch,  0,  buffer.length);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
565	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	186	None	replace
566	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	287	None	replace
567	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  6  +  1];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  6  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  6  +  1];	  byte[]    b    =    new    byte[buffer.length    *    2    +    6];    	non-compiled	[CE]  ';'  expected	184	None	replace
568	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos  -  1);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos  -  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  readPos  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    1);    	non-compiled	[CE]  ';'  expected	52	None	replace
569	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  2);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  2);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  2);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    1);    	non-compiled	[CE]  ';'  expected	52	None	replace
570	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos  -  1);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos  -  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  1,  readPos  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    1);    	non-compiled	[CE]  ';'  expected	52	None	replace
571	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  3];  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  3];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  3];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	99	None	replace
572	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  4];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  4];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  4];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	99	None	replace
573	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  6];  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  6];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  6];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	99	None	replace
574	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  8];  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  8];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  8];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	99	None	replace
575	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  16];  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  16];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  16];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	99	None	replace
576	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  *  2  +  1];	  byte[]    b    =    new    byte[Buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	254	None	replace
577	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  4];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  *  4];	  byte[]    b    =    new    byte[Buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	254	None	replace
578	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  readPos];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  *  2  +  readPos];	  byte[]    b    =    new    byte[Buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	254	None	replace
579	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  4];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  *  2  +  4];	  byte[]    b    =    new    byte[Buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	254	None	replace
580	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  3];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  *  3];	  byte[]    b    =    new    byte[Buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	254	None	replace
581	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  16];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  16];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  *  2  +  16];	  byte[]    b    =    new    byte[Buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	254	None	replace
582	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  3];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  *  2  +  3];	  byte[]    b    =    new    byte[Buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	254	None	replace
583	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
584	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos  +  1];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos  +  1];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  readPos  +  1];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
585	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  0,  readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  0,  readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  0,  readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
586	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos  +  1,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos  +  1,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  readPos  +  1,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
587	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
588	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
589	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
590	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  readPos,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
591	[BUG]  [BUGGY]  pos  =  readPos  -  2;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  -  2;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  -  2;	  pos    =    readPos    -    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
592	[BUG]  [BUGGY]  pos  =  readPos  /  1;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  /  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  /  1;	  pos    =    readPos    -    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
593	[BUG]  [BUGGY]  pos  =  readPos  -  3;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  -  3;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  -  3;	  pos    =    readPos    -    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
594	[BUG]  [BUGGY]  pos  =  readPos  *  1;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  *  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  *  1;	  pos    =    readPos    -    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
595	[BUG]  [BUGGY]  pos  =  readPos  -  4;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  -  4;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  -  4;	  pos    =    readPos    -    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
596	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  pos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  pos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  pos);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    	non-compiled	[CE]  ';'  expected	15	None	replace
597	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  offset,  readPos);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    	non-compiled	[CE]  ';'  expected	15	None	replace
598	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos,  pos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos,  pos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  readPos,  pos);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    	non-compiled	[CE]  ';'  expected	15	None	replace
599	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  pos,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  pos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  pos,  readPos);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    	non-compiled	[CE]  ';'  expected	15	None	replace
600	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  buffer);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  buffer);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  buffer);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    	non-compiled	[CE]  ';'  expected	15	None	replace
601	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  1);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  1);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    	non-compiled	[CE]  ';'  expected	15	None	replace
602	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  2];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  -  2];	  byte[]    b    =    new    byte[buffer.length    -    1];    	non-compiled	[CE]  ';'  expected	10	None	replace
603	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  1  +  1];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  1  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  -  1  +  1];	  byte[]    b    =    new    byte[buffer.length    -    1];    	non-compiled	[CE]  ';'  expected	10	None	replace
604	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  3];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  -  3];	  byte[]    b    =    new    byte[buffer.length    -    1];    	non-compiled	[CE]  ';'  expected	10	None	replace
605	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	215	None	replace
606	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	215	None	replace
607	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	215	None	replace
608	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPo  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPo  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPo	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	215	None	replace
609	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  1;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  1;	  System.arraycopy(buffer,    0,    buffer,    0,    readPos);    pos    =    1;    	non-compiled	[CE]  ';'  expected	154	None	replace
610	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  pos  =  1;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  pos  =  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  readPos);  pos  =  1;	  System.arraycopy(buffer,    0,    buffer,    0,    readPos);    pos    =    1;    	non-compiled	[CE]  ';'  expected	154	None	replace
611	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  12];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  12];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  12];	  byte[]    b    =    new    byte[buffer.length    *    2    +    16];    	non-compiled	[CE]  ';'  expected	42	None	replace
612	[BUG]  [BUGGY]  readPos  =  1;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  1;	  readPos    =    0;    	non-compiled	[CE]  ';'  expected	19	None	replace
613	[BUG]  [BUGGY]  readPos  =  pos;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  pos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  pos;	  readPos    =    0;    	non-compiled	[CE]  ';'  expected	19	None	replace
614	[BUG]  [BUGGY]  readPos  =  2;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  2;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  2;	  readPos    =    0;    	non-compiled	[CE]  ';'  expected	19	None	replace
615	[BUG]  [BUGGY]  readPos  =  3;  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  3;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  3;	  readPos    =    0;    	non-compiled	[CE]  ';'  expected	19	None	replace
616	[BUG]  [BUGGY]  ||  readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
617	[BUG]  [BUGGY]  ||  readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
618	[BUG]  [BUGGY]  ||  readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
619	[BUG]  [BUGGY]  ||  readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
620	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
621	[BUG]  [BUGGY]  ||  readPos  >  1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >  1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
622	[BUG]  [BUGGY]  ||  readPos  >>  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >>  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >>  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
623	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	245	None	replace
624	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	245	None	replace
625	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	290	None	replace
626	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  -1)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  -1)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	290	None	replace
627	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
628	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
629	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
630	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
631	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arra  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arra	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
632	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  <  <  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  <  <  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  <  <  1];	  byte[]    b    =    new    byte[1    <    <    1];    	non-compiled	[CE]  ';'  expected	264	None	replace
633	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  +  1];	  byte[]    b    =    new    byte[1    <    <    1];    	non-compiled	[CE]  ';'  expected	264	None	replace
634	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1B];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1B];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1B];	  byte[]    b    =    new    byte[1    <    <    1];    	non-compiled	[CE]  ';'  expected	264	None	replace
635	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	256	None	replace
636	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  +  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  +  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  +  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[readPos    +    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	228	None	replace
637	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  4];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  4];	  byte[]    b    =    new    byte[readPos    +    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	228	None	replace
638	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  10];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  +  10];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  10];	  byte[]    b    =    new    byte[readPos    +    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	228	None	replace
639	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  8];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  +  8];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  8];	  byte[]    b    =    new    byte[readPos    +    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	228	None	replace
640	[BUG]  [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	320	None	replace
641	[BUG]  [BUGGY]  if(buffer.length!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	320	None	replace
642	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	320	None	replace
643	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	320	None	replace
644	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  readPos  +  2];	  byte[]    b    =    new    byte[buffer.length    *    readPos    +    1];    	non-compiled	[CE]  ';'  expected	242	None	replace
645	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  3];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  readPos  +  3];	  byte[]    b    =    new    byte[buffer.length    *    readPos    +    1];    	non-compiled	[CE]  ';'  expected	242	None	replace
646	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  buffer.length  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  buffer.length  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  buffer.length  +  1];	  byte[]    b    =    new    byte[buffer.length    *    readPos    +    1];    	non-compiled	[CE]  ';'  expected	242	None	replace
647	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  4];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  readPos  +  4];	  byte[]    b    =    new    byte[buffer.length    *    readPos    +    1];    	non-compiled	[CE]  ';'  expected	242	None	replace
648	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	222	None	replace
649	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	222	None	replace
650	[BUG]  [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	222	None	replace
651	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	222	None	replace
652	[BUG]  [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	222	None	replace
653	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	222	None	replace
654	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  1  +  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  1  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  1  +  2];	  byte[]    b    =    new    byte[buffer.length    *    1    +    1];    	non-compiled	[CE]  ';'  expected	109	None	replace
655	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  19];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  19];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  19];	  byte[]    b    =    new    byte[buffer.length    +    16];    	non-compiled	[CE]  ';'  expected	141	None	replace
656	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  buffer.length);  readPos  =  0;  }	  System.arraycopy(buffer,    0,    pos,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
657	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  readPos,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  readPos,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  readPos,  buffer.length);  readPos  =  0;  }	  System.arraycopy(buffer,    0,    pos,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
658	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  readPos,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  readPos,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  readPos,  readPos);  readPos  =  0;	  System.arraycopy(buffer,    0,    pos,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
659	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  buffer,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  buffer,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  buffer,  readPos);  readPos  =  0;	  System.arraycopy(buffer,    0,    pos,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
660	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  12];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  12];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  12];	  byte[]    b    =    new    byte[buffer.length    *    4    +    16];    	non-compiled	[CE]  ';'  expected	146	None	replace
661	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  4  +  2];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  4  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  4  +  2];	  byte[]    b    =    new    byte[readPos    *    4];    	non-compiled	[CE]  ';'  expected	119	None	replace
662	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
663	[BUG]  [BUGGY]  if(pos!=  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
664	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
665	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  3];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  6  +  3];	  byte[]    b    =    new    byte[buffer.length    *    6    +    1];    	non-compiled	[CE]  ';'  expected	12	None	replace
666	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  7  +  1];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  7  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  7  +  1];	  byte[]    b    =    new    byte[buffer.length    *    6    +    1];    	non-compiled	[CE]  ';'  expected	12	None	replace
667	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	265	None	replace
668	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	265	None	replace
669	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
670	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
671	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
672	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  *  readPos];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  *  readPos];	  byte[]    b    =    new    byte[4    *    readPos];    	non-compiled	[CE]  ';'  expected	257	None	replace
673	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  *  readPos];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  *  readPos];	  byte[]    b    =    new    byte[4    *    readPos];    	non-compiled	[CE]  ';'  expected	257	None	replace
674	[BUG]  [BUGGY]  byte[]  b  =  new  byte[6  *  readPos];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[6  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[6  *  readPos];	  byte[]    b    =    new    byte[4    *    readPos];    	non-compiled	[CE]  ';'  expected	257	None	replace
675	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  readPos  +  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  *  readPos  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  readPos  +  2];	  byte[]    b    =    new    byte[4    *    readPos];    	non-compiled	[CE]  ';'  expected	257	None	replace
676	[BUG]  [BUGGY]  byte[]  b  =  new  byte[8  *  readPos];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[8  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[8  *  readPos];	  byte[]    b    =    new    byte[4    *    readPos];    	non-compiled	[CE]  ';'  expected	257	None	replace
677	[BUG]  [BUGGY]  if(pos  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
678	[BUG]  [BUGGY]  if(pos  >  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
679	[BUG]  [BUGGY]  if(pos  <  =  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
680	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
681	[BUG]  [BUGGY]  if(pos  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
682	[BUG]  [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
683	[BUG]  [BUGGY]  if(pos  <  0)  {  if(buffer.length  <  2)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  if(buffer.length  <  2)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  if(buffer.length  <  2)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
684	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1L  *  2];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1L  *  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1L  *  2];	  byte[]    b    =    new    byte[1L    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	114	None	replace
685	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1L  *  readPos];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1L  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1L  *  readPos];	  byte[]    b    =    new    byte[1L    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	114	None	replace
686	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128L  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128L  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128L  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1L    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	114	None	replace
687	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1L  *  4];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1L  *  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1L  *  4];	  byte[]    b    =    new    byte[1L    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	114	None	replace
688	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2L  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2L  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2L  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1L    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	114	None	replace
689	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[1L    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	114	None	replace
690	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1L  *  1024];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1L  *  1024];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1L  *  1024];	  byte[]    b    =    new    byte[1L    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	114	None	replace
691	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  6];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  +  6];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  6];	  byte[]    b    =    new    byte[readPos    +    1];    	non-compiled	[CE]  ';'  expected	124	None	replace
692	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
693	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
694	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	132	None	replace
695	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	132	None	replace
696	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  	132	None	replace
697	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	255	None	replace
698	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	255	None	replace
699	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_ReZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_ReZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_ReZE_FACTOR];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_ReZE_FACTOR];    	non-compiled	[CE]  ';'  expected	268	None	replace
700	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_ReZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_ReZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_ReZE_FACTOR];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_ReZE_FACTOR];    	non-compiled	[CE]  ';'  expected	268	None	replace
701	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_REZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_REZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_REZE_FACTOR];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_ReZE_FACTOR];    	non-compiled	[CE]  ';'  expected	268	None	replace
702	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  +  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  +  2];	  byte[]    b    =    new    byte[1    <    <    2];    	non-compiled	[CE]  ';'  expected	263	None	replace
703	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1],  readPos  =  2;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1],  readPos  =  2;  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1],  readPos  =  2;	  byte[]    b    =    new    byte[1    <    <    2];    	non-compiled	[CE]  ';'  expected	263	None	replace
704	[BUG]  [BUGGY]  pos  =(int)Math.rint(readPos,  readPos);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(int)Math.rint(readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(int)Math.rint(readPos,  readPos);	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
705	[BUG]  [BUGGY]  pos  =(int)Math.rint(readPos);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(int)Math.rint(readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(int)Math.rint(readPos);	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
706	[BUG]  [BUGGY]  pos  =(int)Math.floor(readPos);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(int)Math.floor(readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(int)Math.floor(readPos);	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
707	[BUG]  [BUGGY]  pos  =(int)Math.ceil(readPos,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(int)Math.ceil(readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(int)Math.ceil(readPos,  readPos);	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
708	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	64	None	replace
709	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	64	None	replace
710	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  offset,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	64	None	replace
711	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  pos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  pos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  pos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	64	None	replace
712	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
713	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	234	None	replace
714	[BUG]  [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	234	None	replace
715	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	234	None	replace
716	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	234	None	replace
717	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
718	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
719	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
720	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
721	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  0;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  0;	  System.arraycopy(buffer,    0,    b,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	153	None	replace
722	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  1,  readPos);  pos  =  0;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  1,  readPos);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  1,  readPos);  pos  =  0;	  System.arraycopy(buffer,    0,    b,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	153	None	replace
723	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readBuffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readBuffer.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readBuffer.length);  pos  =  0;	  System.arraycopy(buffer,    0,    b,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	153	None	replace
724	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	158	None	replace
725	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	158	None	replace
726	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	158	None	replace
727	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	158	None	replace
728	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	87	None	replace
729	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  buffer,  0,  buffer.length);	  System.arraycopy(buffer,    0,    pos,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	299	None	replace
730	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  buffer,  0,  pos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  buffer,  0,  pos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  buffer,  0,  pos);	  System.arraycopy(buffer,    0,    pos,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	299	None	replace
731	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  0,  readPos  +  1);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  0,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  buffer,  0,  readPos  +  1);	  System.arraycopy(buffer,    0,    pos,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	299	None	replace
732	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  buffer,  0,  readPos);	  System.arraycopy(buffer,    0,    pos,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	299	None	replace
733	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  0,  buffer.length);	  System.arraycopy(buffer,    0,    pos,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	299	None	replace
734	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	28	None	replace
735	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	28	None	replace
736	[BUG]  [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	28	None	replace
737	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
738	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
739	[BUG]  [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
740	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	174	None	replace
741	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	174	None	replace
742	[BUG]  [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	174	None	replace
743	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	174	None	replace
744	[BUG]  [BUGGY]  pos  =  0;  readPos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0;  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0;  readPos  =  0;	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
745	[BUG]  [BUGGY]  pos  =  1;  readPos  =  0;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  1;  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  1;  readPos  =  0;	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
746	[BUG]  [BUGGY]  int  pos  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  int  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	int  pos  =  0;	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
747	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos  -  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos  -  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  readPos  -  readPos);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    readPos);    	non-compiled	[CE]  ';'  expected	49	None	replace
748	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  readPos);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    readPos);    	non-compiled	[CE]  ';'  expected	49	None	replace
749	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  4);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  4);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  4);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    readPos);    	non-compiled	[CE]  ';'  expected	49	None	replace
750	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  readPos);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  readPos);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    readPos);    	non-compiled	[CE]  ';'  expected	49	None	replace
751	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  10);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  10);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  10);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    readPos);    	non-compiled	[CE]  ';'  expected	49	None	replace
752	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	55	None	replace
753	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
754	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
755	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
756	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
757	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  DEFAULT_BUFFER_SIZE);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
758	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
759	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  buffer.length];  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  buffer.length];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  buffer.length];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
760	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  readPos];  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  readPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  readPos];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
761	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos],  0,  readPos];  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos],  0,  readPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos],  0,  readPos];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
762	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos  [0];  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos  [0];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos  [0];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
763	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos],  2;  [CE]  ';'  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos],  2;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos],  2;	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
764	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4  +  readPos];  [CE]  ';'  expected  [FE]                                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4  +  readPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4  +  readPos];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
765	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readBufferPos];  [CE]  ';'  expected  [FE]                                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readBufferPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readBufferPos];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
766	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	291	None	replace
767	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	291	None	replace
768	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	291	None	replace
769	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	291	None	replace
770	[BUG]  [BUGGY]  byte[]  b  =  new  byte[10];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[10];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[10];	  byte[]    b    =    new    byte[10    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	259	None	replace
771	[BUG]  [BUGGY]  byte[]  b  =  new  byte[10  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[10  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[10  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[10    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	259	None	replace
772	[BUG]  [BUGGY]  byte[]  b  =  new  byte[10  *  readPos];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[10  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[10  *  readPos];	  byte[]    b    =    new    byte[10    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	259	None	replace
773	[BUG]  [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
774	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
775	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
776	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
777	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	217	None	replace
778	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	217	None	replace
779	[BUG]  [BUGGY]  byte[]  b  =  new  byte[256  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[256  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[256  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	110	None	replace
780	[BUG]  [BUGGY]  byte[]  b  =  new  byte[228  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[228  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[228  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	110	None	replace
781	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  *  readPos];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  *  readPos];	  byte[]    b    =    new    byte[128    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	110	None	replace
782	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1024  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1024  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1024  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	110	None	replace
783	[BUG]  [BUGGY]  byte[]  b  =  new  byte[328  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[328  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[328  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	110	None	replace
784	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  *  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  *  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  *  2];	  byte[]    b    =    new    byte[128    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	110	None	replace
785	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  buffer.length);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  buffer.length);	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	47	None	replace
786	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	302	None	replace
787	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	302	None	replace
788	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	302	None	replace
789	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	321	None	replace
790	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	321	None	replace
791	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	321	None	replace
792	[BUG]  [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	321	None	replace
793	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	133	None	replace
794	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	133	None	replace
795	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	133	None	replace
796	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  5  +  1];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  5  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  5  +  1];	  byte[]    b    =    new    byte[buffer.length    *    5];    	non-compiled	[CE]  ';'  expected	14	None	replace
797	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	67	None	replace
798	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	67	None	replace
799	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	67	None	replace
800	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >=  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >=  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >=  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	67	None	replace
801	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	221	None	replace
802	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	221	None	replace
803	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	148	None	replace
804	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	148	None	replace
805	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	148	None	replace
806	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }	  if(readPos!=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	210	None	replace
807	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  16];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  +  16];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  16];	  byte[]    b    =    new    byte[readPos    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	121	None	replace
808	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    	non-compiled	[CE]  ';'  expected	137	None	replace
809	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    	non-compiled	[CE]  ';'  expected	137	None	replace
810	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
811	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
812	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
813	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
814	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
815	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
816	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
817	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	219	None	replace
818	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	219	None	replace
819	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	195	None	replace
820	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  +  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  +  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  +  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	195	None	replace
821	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	195	None	replace
822	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  +  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  +  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  +  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	195	None	replace
823	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  +  readPos];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  +  readPos];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
824	[BUG]  [BUGGY]  byte[]  b  =  new  byte[256  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[256  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[256  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
825	[BUG]  [BUGGY]  byte[]  b  =  new  byte[228  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[228  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[228  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
826	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  +  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  +  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  +  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
827	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1024  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1024  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1024  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
828	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  +  1];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  +  1];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
829	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  +  length];  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  +  length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  +  length];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
830	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  +  16];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  +  16];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  +  16];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
831	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos  +  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  readPos  +  1];	  byte[]    b    =    new    byte[buffer.length    *    2    +    readPos];    	non-compiled	[CE]  ';'  expected	40	None	replace
832	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  buffer.length];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  buffer.length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  2  +  buffer.length];	  byte[]    b    =    new    byte[buffer.length    *    2    +    readPos];    	non-compiled	[CE]  ';'  expected	40	None	replace
833	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos  +  3];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  readPos  +  3];	  byte[]    b    =    new    byte[buffer.length    *    2    +    readPos];    	non-compiled	[CE]  ';'  expected	40	None	replace
834	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos  +  4];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  readPos  +  4];	  byte[]    b    =    new    byte[buffer.length    *    2    +    readPos];    	non-compiled	[CE]  ';'  expected	40	None	replace
835	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos],  0,  readPos;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos],  0,  readPos;  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  readPos],  0,  readPos;	  byte[]    b    =    new    byte[buffer.length    *    2    +    readPos];    	non-compiled	[CE]  ';'  expected	40	None	replace
836	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	297	None	replace
837	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
838	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
839	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
840	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  read  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  read  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  read	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
841	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
842	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
843	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos  +  1);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos  +  1);	  System.arraycopy(buffer,    0,    b,    0,    readPos);    	non-compiled	[CE]  ';'  expected	51	None	replace
844	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  1,  readPos);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  1,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  1,  readPos);	  System.arraycopy(buffer,    0,    b,    0,    readPos);    	non-compiled	[CE]  ';'  expected	51	None	replace
845	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[buffer.length]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[buffer.length]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  >=  0)  {  buffer[buffer.length]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	160	None	replace
846	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos,  pos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos,  pos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  1,  readPos,  pos);	  System.arraycopy(buffer,    0,    buffer,    1,    readPos);    	non-compiled	[CE]  ';'  expected	300	None	replace
847	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  1,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  1,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  1,  readPos);	  System.arraycopy(buffer,    0,    buffer,    1,    readPos);    	non-compiled	[CE]  ';'  expected	300	None	replace
848	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos  +  1);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  1,  readPos  +  1);	  System.arraycopy(buffer,    0,    buffer,    1,    readPos);    	non-compiled	[CE]  ';'  expected	300	None	replace
849	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos  -  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos  -  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  1,  readPos  -  readPos);	  System.arraycopy(buffer,    0,    buffer,    1,    readPos);    	non-compiled	[CE]  ';'  expected	300	None	replace
850	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos,  1);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos,  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  1,  readPos,  1);	  System.arraycopy(buffer,    0,    buffer,    1,    readPos);    	non-compiled	[CE]  ';'  expected	300	None	replace
851	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  2,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  2,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  2,  readPos);	  System.arraycopy(buffer,    0,    buffer,    1,    readPos);    	non-compiled	[CE]  ';'  expected	300	None	replace
852	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
853	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
854	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
855	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
856	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	238	None	replace
857	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	238	None	replace
858	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	238	None	replace
859	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	238	None	replace
860	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	238	None	replace
861	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	253	None	replace
862	[BUG]  [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	253	None	replace
863	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  System.arra	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	253	None	replace
864	[BUG]  [BUGGY]  if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
865	[BUG]  [BUGGY]  if(readPos  <  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
866	[BUG]  [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
867	[BUG]  [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
868	[BUG]  [BUGGY]  char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
869	[BUG]  [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  DEFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR    +    readPos;    	non-compiled	[CE]  ';'  expected	322	None	replace
870	[BUG]  [BUGGY]  pos  =  writePos  +  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  writePos  +  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  writePos  +  DEFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR    +    readPos;    	non-compiled	[CE]  ';'  expected	322	None	replace
871	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos  +  1;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos  +  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos  +  1;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR    +    readPos;    	non-compiled	[CE]  ';'  expected	322	None	replace
872	[BUG]  [BUGGY]  pos  =  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR    +    readPos;    	non-compiled	[CE]  ';'  expected	322	None	replace
873	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR    +    readPos;    	non-compiled	[CE]  ';'  expected	322	None	replace
874	[BUG]  [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_SIZE_FACTOR;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_SIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  DEFAULT_BUFFER_SIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR    +    readPos;    	non-compiled	[CE]  ';'  expected	322	None	replace
875	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  +  1;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  +  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  +  1;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
876	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  *  readPos;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  *  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  *  readPos;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
877	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	280	None	replace
878	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	280	None	replace
879	[BUG]  [BUGGY]  if(pos  <  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	280	None	replace
880	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	280	None	replace
881	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	280	None	replace
882	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	280	None	replace
883	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    ==    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	201	None	replace
884	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	79	None	replace
885	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	79	None	replace
886	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	79	None	replace
887	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	79	None	replace
888	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	79	None	replace
889	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	79	None	replace
890	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	79	None	replace
891	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
892	[BUG]  [BUGGY]  if(pos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
893	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
894	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
895	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
896	[BUG]  [BUGGY]  if(pos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
897	[BUG]  [BUGGY]  byte[]  b  =  new  byte[16  *  readPos];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[16  *  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[16  *  readPos];	  byte[]    b    =    new    byte[16    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	258	None	replace
898	[BUG]  [BUGGY]  byte[]  b  =  new  byte[64  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[64  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[64  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[16    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	258	None	replace
899	[BUG]  [BUGGY]  byte[]  b  =  new  byte[32  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[32  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[32  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[16    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	258	None	replace
900	[BUG]  [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[16    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	258	None	replace
901	[BUG]  [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[16    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	258	None	replace
902	[BUG]  [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos];	  byte[]    b    =    new    byte[16    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	258	None	replace
903	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  bytes,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  bytes,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  bytes,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
904	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
905	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
906	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
907	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
908	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
909	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
910	[BUG]  [BUGGY]  pos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
911	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[128  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[128  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[128  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	192	None	replace
912	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[2  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[2  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[2  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	192	None	replace
913	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1L  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1L  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1L  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	192	None	replace
914	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  +  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1  +  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  +  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	192	None	replace
915	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	192	None	replace
916	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos];  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	192	None	replace
917	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  *  4];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  *  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  *  4];	  byte[]    b    =    new    byte[3    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	89	None	replace
918	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  4];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  4];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  4];	  byte[]    buffer    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	96	None	replace
919	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
920	[BUG]  [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
921	[BUG]  [BUGGY]  char[]  buffer  =  new  char[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
922	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
923	[BUG]  [BUGGY]  char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
924	[BUG]  [BUGGY]  char[]  buffer  =  new  char[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize.length);  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize.length);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
925	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
926	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	282	None	replace
927	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	282	None	replace
928	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	282	None	replace
929	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	282	None	replace
930	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RES  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RES  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RES	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
931	[BUG]  [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
932	[BUG]  [BUGGY]  if(pos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	198	None	replace
933	[BUG]  [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	198	None	replace
934	[BUG]  [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	198	None	replace
935	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
936	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
937	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
938	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
939	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
940	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
941	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  <  =  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
942	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  readPos  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  readPos  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  3  +  readPos  +  1];	  byte[]    b    =    new    byte[buffer.length    *    3    +    readPos];    	non-compiled	[CE]  ';'  expected	183	None	replace
943	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  readPos];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  6  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    3    +    readPos];    	non-compiled	[CE]  ';'  expected	183	None	replace
944	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  readPos  +  2];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  readPos  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  3  +  readPos  +  2];	  byte[]    b    =    new    byte[buffer.length    *    3    +    readPos];    	non-compiled	[CE]  ';'  expected	183	None	replace
945	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  10  +  readPos];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  10  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  10  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    3    +    readPos];    	non-compiled	[CE]  ';'  expected	183	None	replace
946	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  5  +  readPos];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  5  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  5  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    3    +    readPos];    	non-compiled	[CE]  ';'  expected	183	None	replace
947	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
948	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
949	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
950	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
951	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	270	None	replace
952	[BUG]  [BUGGY]  if(pos!=  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	270	None	replace
953	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	232	None	replace
954	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	232	None	replace
955	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	232	None	replace
956	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	232	None	replace
957	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  *  4];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  *  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  *  4];	  byte[]    b    =    new    byte[5    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	90	None	replace
958	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  *  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  *  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  *  2];	  byte[]    b    =    new    byte[5    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	90	None	replace
959	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	289	None	replace
960	[BUG]  [BUGGY]  if(pos  <  =  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	289	None	replace
961	[BUG]  [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	289	None	replace
962	[BUG]  [BUGGY]  if(pos  <  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	289	None	replace
963	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	289	None	replace
964	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	289	None	replace
965	[BUG]  [BUGGY]  readPos  =  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  DEFAULT_BUFFER_SIZE;	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
966	[BUG]  [BUGGY]  readPos  =  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  DEFAULT_BUFFER_RESIZE_FACTOR;	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
967	[BUG]  [BUGGY]  readPos  =  DEFAULT_BUFFER_SIZE_FACTOR;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  DEFAULT_BUFFER_SIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  DEFAULT_BUFFER_SIZE_FACTOR;	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
968	[BUG]  [BUGGY]  readPos  =  buffer.length;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  buffer.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  buffer.length;	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
969	[BUG]  [BUGGY]  if(pos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	33	None	replace
970	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	33	None	replace
971	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	33	None	replace
972	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	283	None	replace
973	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	283	None	replace
974	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	283	None	replace
975	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  readPos);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  c,  0,  readPos);	  System.arraycopy(buffer,    0,    c,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	189	None	replace
976	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  ch,  0,  readPos);  pos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  ch,  0,  readPos);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  ch,  0,  readPos);  pos  =  0;	  System.arraycopy(buffer,    0,    c,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	189	None	replace
977	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  readPos);  pos  =  1;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  readPos);  pos  =  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  c,  0,  readPos);  pos  =  1;	  System.arraycopy(buffer,    0,    c,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	189	None	replace
978	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer  ==  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer  ==  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer  ==  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer    ==    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	313	None	replace
979	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer  ==  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer  ==  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer  ==  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer    ==    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	313	None	replace
980	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(buffer  ==  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(buffer  ==  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(buffer  ==  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer    ==    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	313	None	replace
981	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
982	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize.length);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize.length);	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
983	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
984	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize.length);  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize.length);	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
985	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
986	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  DEFAULT_BUFFER_SIZE.length);  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  DEFAULT_BUFFER_SIZE.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  DEFAULT_BUFFER_SIZE.length);	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
987	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  6  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  6  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  6  +  1];	  byte[]    b    =    new    byte[readPos    *    6];    	non-compiled	[CE]  ';'  expected	167	None	replace
988	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  5];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  5];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  5];	  byte[]    b    =    new    byte[readPos    *    6];    	non-compiled	[CE]  ';'  expected	167	None	replace
989	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[128  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[128  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[128  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	267	None	replace
990	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[2  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[2  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[2  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	267	None	replace
991	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1L  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1L  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1L  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	267	None	replace
992	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	267	None	replace
993	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	267	None	replace
994	[BUG]  [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  DEFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
995	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  readPos  +  1;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  readPos  +  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  +  readPos  +  1;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
996	[BUG]  [BUGGY]  pos  =  writePos  +  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  writePos  +  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  writePos  +  DEFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
997	[BUG]  [BUGGY]  pos  =  readPos  *  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  *  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  *  DEFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
998	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  readPos  *  2;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  readPos  *  2;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  +  readPos  *  2;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
999	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  readPos  *  4;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  readPos  *  4;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  +  readPos  *  4;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
1000	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  readPos;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  *  readPos;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
1001	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	73	None	replace
1002	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[0]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	73	None	replace
1003	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	73	None	replace
1004	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos    +    1);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1005	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos    +    1);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1006	[BUG]  [BUGGY]  readPos  =  readPos  +  1;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  +  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  +  1;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos    +    1);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1007	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos    +    1);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1008	[BUG]  [BUGGY]  readPos  =  readPos  >  0?  readPos  :  readPos  +  1;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0?  readPos  :  readPos  +  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0?  readPos  :  readPos  +  1;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos    +    1);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1009	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >=  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1010	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1011	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  1];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  1];	  byte[]    b    =    new    byte[buffer.length    *    16    +    readPos];    	non-compiled	[CE]  ';'  expected	190	None	replace
1012	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  2];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  2];	  byte[]    b    =    new    byte[buffer.length    *    16    +    readPos];    	non-compiled	[CE]  ';'  expected	190	None	replace
1013	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  readPos];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  32  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    16    +    readPos];    	non-compiled	[CE]  ';'  expected	190	None	replace
1014	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  16  +  buffer.length];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  16  +  buffer.length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  16  +  buffer.length];	  byte[]    b    =    new    byte[buffer.length    *    16    +    readPos];    	non-compiled	[CE]  ';'  expected	190	None	replace
1015	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  3];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  3];	  byte[]    b    =    new    byte[buffer.length    *    16    +    readPos];    	non-compiled	[CE]  ';'  expected	190	None	replace
1016	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	127	None	replace
1017	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	127	None	replace
1018	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
1019	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  if(readPos  ==  0)  {  buffer[buffer.length]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  if(readPos  ==  0)  {  buffer[buffer.length]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  if(readPos  ==  0)  {  buffer[buffer.length]  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	157	None	replace
1020	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	78	None	replace
1021	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	78	None	replace
1022	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	78	None	replace
1023	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	78	None	replace
1024	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	78	None	replace
1025	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	78	None	replace
1026	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  <  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	78	None	replace
1027	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	220	None	replace
1028	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPo  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPo  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPo	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	220	None	replace
1029	[BUG]  [BUGGY]  if(pos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	296	None	replace
1030	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1031	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1032	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  1];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[pos  *  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  1];	  byte[]    b    =    new    byte[readPos    *    1];    	non-compiled	[CE]  ';'  expected	123	None	replace
1033	[BUG]  [BUGGY]  byte[]  b  =  new  byte[7  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[7  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[7  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[6    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	91	None	replace
1034	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1035	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1036	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1037	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  readPos  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  4];  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    4];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	229	None	replace
1038	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  *  readPos  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  *  readPos  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  *  readPos  +  1];	  byte[]    b    =    new    byte[1    *    readPos];    	non-compiled	[CE]  ';'  expected	113	None	replace
1039	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  *  readPos  +  2];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  *  readPos  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  *  readPos  +  2];	  byte[]    b    =    new    byte[1    *    readPos];    	non-compiled	[CE]  ';'  expected	113	None	replace
1040	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  *  readPos],  buffer.length;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  *  readPos],  buffer.length;  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  *  readPos],  buffer.length;	  byte[]    b    =    new    byte[1    *    readPos];    	non-compiled	[CE]  ';'  expected	113	None	replace
1041	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  2];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  8  +  2];	  byte[]    b    =    new    byte[buffer.length    *    8    +    1];    	non-compiled	[CE]  ';'  expected	23	None	replace
1042	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  3];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  8  +  3];	  byte[]    b    =    new    byte[buffer.length    *    8    +    1];    	non-compiled	[CE]  ';'  expected	23	None	replace
1043	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  4];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  8  +  4];	  byte[]    b    =    new    byte[buffer.length    *    8    +    1];    	non-compiled	[CE]  ';'  expected	23	None	replace
1044	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	134	None	replace
1045	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	134	None	replace
1046	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	134	None	replace
1047	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  2);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  2);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  2);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	151	None	replace
1048	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  -  1);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  -  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	151	None	replace
1049	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  byteBuffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  byteBuffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  byteBuffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	151	None	replace
1050	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	151	None	replace
1051	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	151	None	replace
1052	[BUG]  [BUGGY]  pos  =  0,  readPos  =  1;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =  1;	  pos    =    0,    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
1053	[BUG]  [BUGGY]  pos  =  0,  readPos  =  2;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =  2;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =  2;	  pos    =    0,    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
1054	[BUG]  [BUGGY]  pos  =  0,  readPos  =  3;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =  3;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =  3;	  pos    =    0,    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
1055	[BUG]  [BUGGY]  pos  =  0,  readPos  =  4;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =  4;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =  4;	  pos    =    0,    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
1056	[BUG]  [BUGGY]  pos  =  0,  readPos  =  10;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =  10;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =  10;	  pos    =    0,    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
1057	[BUG]  [BUGGY]  pos  =  0,  readPos  =  -1;  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =  -1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =  -1;	  pos    =    0,    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
1058	[BUG]  [BUGGY]  pos  =  0,  readPos  =  0L;  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =  0L;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =  0L;	  pos    =    0,    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
1059	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1060	[BUG]  [BUGGY]  if(pos  <  =  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1061	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1062	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1063	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1064	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  4];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  32  +  4];	  byte[]    b    =    new    byte[buffer.length    *    32];    	non-compiled	[CE]  ';'  expected	45	None	replace
1065	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  2];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  32  +  2];	  byte[]    b    =    new    byte[buffer.length    *    32];    	non-compiled	[CE]  ';'  expected	45	None	replace
1066	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  3];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  32  +  3];	  byte[]    b    =    new    byte[buffer.length    *    32];    	non-compiled	[CE]  ';'  expected	45	None	replace
1067	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1068	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1069	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1070	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1071	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1072	[BUG]  [BUGGY]  char[]  buffer  =  new  char[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1073	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1074	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  readPos,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1075	[BUG]  [BUGGY]  if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	179	None	replace
1076	[BUG]  [BUGGY]  char[]  buffer  =  new  char[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	179	None	replace
1077	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	179	None	replace
1078	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
1079	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACT  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACT  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACT	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
1080	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACT  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACT  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACT	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
1081	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	220	None	replace
1082	[BUG]  [BUGGY]  byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
1083	[BUG]  [BUGGY]  byte[]  b  =  new  byte[256  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[256  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[256  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
1084	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[5    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	90	None	replace
1085	[BUG]  [BUGGY]  byte[]  b  =  new  byte[0  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[0  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[0  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[5    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	90	None	replace
1086	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  1);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  1);	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	47	None	replace
1087	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
1088	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
1089	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
1090	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
1091	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	312	None	replace
1092	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	312	None	replace
1093	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	312	None	replace
1094	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	312	None	replace
1095	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
1096	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  readPos);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
1097	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
1098	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
1099	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
1100	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
1101	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	53	None	replace
1102	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	265	None	replace
1103	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	265	None	replace
1104	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	265	None	replace
1105	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  7];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  7];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  7];	  byte[]    b    =    new    byte[readPos    *    6];    	non-compiled	[CE]  ';'  expected	167	None	replace
1106	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	289	None	replace
1107	[BUG]  [BUGGY]  if(readPos!=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
1108	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
1109	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
1110	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
1111	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
1112	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
1113	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
1114	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
1115	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
1116	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
1117	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    1];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
1118	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  -1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  -1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  -1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	296	None	replace
1119	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(readPos!=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	296	None	replace
1120	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }	  if(readPos!=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	296	None	replace
1121	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(readPos!=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	296	None	replace
1122	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1L  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1L  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1L  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1L    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	114	None	replace
1123	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	270	None	replace
1124	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	270	None	replace
1125	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	270	None	replace
1126	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
1127	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
1128	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
1129	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
1130	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  +  1];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[Buffer.length  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  +  1];	  byte[]    b    =    new    byte[buffer.length    +    1];    	non-compiled	[CE]  ';'  expected	11	None	replace
1131	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	245	None	replace
1132	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	245	None	replace
1133	[BUG]  [BUGGY]  pos  =  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR;	  pos    =    buffer.length;    	non-compiled	[CE]  ';'  expected	7	None	replace
1134	[BUG]  [BUGGY]  pos  =  readPos  +  buffer.length;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  buffer.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  buffer.length;	  pos    =    buffer.length;    	non-compiled	[CE]  ';'  expected	7	None	replace
1135	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	291	None	replace
1136	[BUG]  [BUGGY]  byte[]  b  =  new  byte[12  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[12  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[12  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[10    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	259	None	replace
1137	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1138	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1139	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1140	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  System.  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1141	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1142	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1143	[BUG]  [BUGGY]  byte[]  b  =  new  byte[ReadPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[ReadPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[ReadPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	120	None	replace
1144	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[len  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[len  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	120	None	replace
1145	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[len  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[len  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	120	None	replace
1146	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[length  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	266	None	replace
1147	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[writePos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[writePos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[writePos  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	266	None	replace
1148	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[arraySize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[arraySize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[arraySize  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	266	None	replace
1149	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  ];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  ];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  ];	  byte[]    b    =    new    byte[1    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	111	None	replace
1150	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  4];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  readPos  +  4];	  byte[]    b    =    new    byte[buffer.length    *    16    +    readPos];    	non-compiled	[CE]  ';'  expected	190	None	replace
1151	[BUG]  [BUGGY]  byte[]  b  =  new  byte[ReadPos  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[ReadPos  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[ReadPos  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[size    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	308	None	replace
1152	[BUG]  [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  readPos,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  System.arraycopy(buffer,  0,  readPos,  readPos);	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
1153	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1154	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    	non-compiled	[CE]  ';'  expected	68	None	replace
1155	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    	non-compiled	[CE]  ';'  expected	68	None	replace
1156	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    	non-compiled	[CE]  ';'  expected	68	None	replace
1157	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	133	None	replace
1158	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    1];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	58	None	replace
1159	[BUG]  [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  System.arraycopy(buffer,  0,  readPos,  0,  readPos);	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
1160	[BUG]  [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
1161	[BUG]  [BUGGY]  readPos  =  System.arraycopy(CHUNK_SEPARATOR,  0,  buffer,  readPos);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  System.arraycopy(CHUNK_SEPARATOR,  0,  buffer,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  System.arraycopy(CHUNK_SEPARATOR,  0,  buffer,  readPos);	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
1162	[BUG]  [BUGGY]  readPos  =  System.arraycopy(CHUNK_SEPARATOR,  pos,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  System.arraycopy(CHUNK_SEPARATOR,  pos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  System.arraycopy(CHUNK_SEPARATOR,  pos,  readPos);	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
1163	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  -1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  if(readPos  >  -1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  -1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	33	None	replace
1164	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  readPos];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  2  +  readPos];	  byte[]    b    =    new    byte[readPos    *    2];    	non-compiled	[CE]  ';'  expected	118	None	replace
1165	[BUG]  [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1166	[BUG]  [BUGGY]  if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1167	[BUG]  [BUGGY]  if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1168	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  32  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  32  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  32  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
1169	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1170	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(bu  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(bu	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	303	None	replace
1171	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  System.arraycopy(bu  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  System.arraycopy(bu	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	303	None	replace
1172	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(bu  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(bu	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	303	None	replace
1173	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1  -  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1  -  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1  -  readPos);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    +    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
1174	[BUG]  [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
1175	[BUG]  [BUGGY]  if(readPos!=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
1176	[BUG]  [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
1177	[BUG]  [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
1178	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	112	None	replace
1179	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	112	None	replace
1180	[BUG]  [BUGGY]  byte[]  b  =  new  byte[0  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[0  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[0  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	112	None	replace
1181	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  {  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  {  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  {  <  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	112	None	replace
1182	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	112	None	replace
1183	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  readingPos];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  readingPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  readingPos];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	112	None	replace
1184	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1185	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1186	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1187	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1188	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1189	[BUG]  [BUGGY]  byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	196	None	replace
1190	[BUG]  [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	196	None	replace
1191	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	246	None	replace
1192	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	246	None	replace
1193	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	246	None	replace
1194	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	246	None	replace
1195	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  readPos,  readPos);  readPos  =  0;	  System.arraycopy(buffer,    0,    pos,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
1196	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  x,  readPos,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  x,  readPos,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  x,  readPos,  readPos);  readPos  =  0;	  System.arraycopy(buffer,    0,    pos,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
1197	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    	non-compiled	[CE]  ';'  expected	71	None	replace
1198	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    	non-compiled	[CE]  ';'  expected	71	None	replace
1199	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  1000  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  1000  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  1000  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	241	None	replace
1200	[BUG]  [BUGGY]  if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	293	None	replace
1201	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  return;  }  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  return;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  return;  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  	288	None	replace
1202	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	288	None	replace
1203	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
1204	[BUG]  [BUGGY]  arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  	61	None	replace
1205	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  bu	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	35	None	replace
1206	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  	320	None	replace
1207	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  if(buffer.length  ==  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  	320	None	replace
1208	[BUG]  [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  	320	None	replace
1209	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	178	None	replace
1210	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  10];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  10];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  10];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  	178	None	replace
1211	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  	178	None	replace
1212	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  1];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  1];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  1];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  	178	None	replace
1213	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  [CE]  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  	178	None	replace
1214	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  	178	None	replace
1215	[BUG]  [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  	179	None	replace
1216	[BUG]  [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  	179	None	replace
1217	[BUG]  [BUGGY]  if(readPos  <  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	179	None	replace
1218	[BUG]  [BUGGY]  if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  System.arra	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	179	None	replace
1219	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  3  +  buffer.length];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  3  +  buffer.length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  3  +  buffer.length];	  byte[]    b    =    new    byte[buffer.length    *    3    +    readPos];    	non-compiled	[CE]  ';'  expected	183	None	replace
1220	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  16];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  *  16];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  16];	  byte[]    b    =    new    byte[2    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	88	None	replace
1221	[BUG]  [BUGGY]  if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	198	None	replace
1222	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  x,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  x,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  x,  0,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	135	None	replace
1223	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  buffer.length);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  c,  0,  buffer.length);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	135	None	replace
1224	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  3];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2  +  3];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2  +  3];	  byte[]    buffer    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	96	None	replace
1225	[BUG]  [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
1226	[BUG]  [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
1227	[BUG]  [BUGGY]  pos  =(readPos  ==  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  ==  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  ==  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
1228	[BUG]  [BUGGY]  pos  =(readPos  <  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  <  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  <  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
1229	[BUG]  [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE  -  1;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE  -  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE  -  1;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
1230	[BUG]  [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_SIZE  +  readPos;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_SIZE  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_SIZE  +  readPos;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
1231	[BUG]  [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE  +  readPos;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_SIZE  +  readPos;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
1232	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	64	None	replace
1233	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	64	None	replace
1234	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	64	None	replace
1235	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length    	non-compiled	[CE]  ';'  expected	298	None	replace
1236	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  16];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  16];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  8  +  16];	  byte[]    b    =    new    byte[buffer.length    *    4    +    16];    	non-compiled	[CE]  ';'  expected	146	None	replace
1237	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  DEFAULT_BUFFER_SIZE_FACTOR);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  DEFAULT_BUFFER_SIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  DEFAULT_BUFFER_SIZE_FACTOR);	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	149	None	replace
1238	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	181	None	replace
1239	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	181	None	replace
1240	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	181	None	replace
1241	[BUG]  [BUGGY]  pos  =  readPos  +  deFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  deFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  deFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR    +    readPos;    	non-compiled	[CE]  ';'  expected	322	None	replace
1242	[BUG]  [BUGGY]  pos  =  readPos  +  defULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  defULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  defULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR    +    readPos;    	non-compiled	[CE]  ';'  expected	322	None	replace
1243	[BUG]  [BUGGY]  readPos  =  -1;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  -1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  -1;	  readPos    =    0;    	non-compiled	[CE]  ';'  expected	19	None	replace
1244	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  b  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  b  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  b	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	232	None	replace
1245	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  buffer,  0,  readPos);	  System.arraycopy(buffer,    0,    pos,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	299	None	replace
1246	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  bytes,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  bytes,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  bytes,  buffer,  0,  readPos);	  System.arraycopy(buffer,    0,    pos,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	299	None	replace
1247	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  16];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  16];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  16];	  byte[]    b    =    new    byte[buffer.length    *    2    +    16];    	non-compiled	[CE]  ';'  expected	42	None	replace
1248	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	174	None	replace
1249	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	174	None	replace
1250	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  else  {  System.arra	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	174	None	replace
1251	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	252	None	replace
1252	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	148	None	replace
1253	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	148	None	replace
1254	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  return;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  return;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  return;  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	148	None	replace
1255	[BUG]  [BUGGY]  if(readPos  >  -1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  -1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  -1)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	205	None	replace
1256	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  1  +  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  1  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  readPos  +  1  +  1];	  byte[]    b    =    new    byte[buffer.length    *    readPos    +    1];    	non-compiled	[CE]  ';'  expected	242	None	replace
1257	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  readPos  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  readPos  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  readPos  +  1];	  byte[]    b    =    new    byte[buffer.length    *    readPos    +    1];    	non-compiled	[CE]  ';'  expected	242	None	replace
1258	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	271	None	replace
1259	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  bytes);  pos  =  0;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  bytes);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  bytes);  pos  =  0;	  System.arraycopy(buffer,    0,    bytes,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	156	None	replace
1260	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	28	None	replace
1261	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  10];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  10];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  10];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	28	None	replace
1262	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  readPos  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  readPos  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  readPos  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
1263	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  <  <  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
1264	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    	non-compiled	[CE]  ';'  expected	137	None	replace
1265	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    	non-compiled	[CE]  ';'  expected	137	None	replace
1266	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  readPos  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  readPos  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  readPos	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    	non-compiled	[CE]  ';'  expected	137	None	replace
1267	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    	non-compiled	[CE]  ';'  expected	137	None	replace
1268	[BUG]  [BUGGY]  if(readPos  >  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	199	None	replace
1269	[BUG]  [BUGGY]  if(readPos  <  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    ==    -1)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	199	None	replace
1270	[BUG]  [BUGGY]  byte[]  b  =  new  byte[428  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[428  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[428  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	110	None	replace
1271	[BUG]  [BUGGY]  byte[]  b  =  new  byte[512  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[512  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[512  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	110	None	replace
1272	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  buffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  buffer.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  0,  buffer.length);  pos  =  0;	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    pos    =    0;    	non-compiled	[CE]  ';'  expected	155	None	replace
1273	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  x,  0,  buffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  x,  0,  buffer.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  x,  0,  buffer.length);  pos  =  0;	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    pos    =    0;    	non-compiled	[CE]  ';'  expected	155	None	replace
1274	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	81	None	replace
1275	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	81	None	replace
1276	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	81	None	replace
1277	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	81	None	replace
1278	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  encodeSize);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  encodeSize);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  encodeSize);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	81	None	replace
1279	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	147	None	replace
1280	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
1281	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	169	None	replace
1282	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  System.arra  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  System.arra	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	169	None	replace
1283	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	169	None	replace
1284	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  12];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  12];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  12];	  byte[]    b    =    new    byte[readPos    *    16];    	non-compiled	[CE]  ';'  expected	247	None	replace
1285	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	302	None	replace
1286	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	302	None	replace
1287	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
1288	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
1289	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
1290	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR;  System.arra  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR;  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR;  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
1291	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
1292	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  5];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  +  5];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  5];	  byte[]    b    =    new    byte[readPos    +    1];    	non-compiled	[CE]  ';'  expected	124	None	replace
1293	[BUG]  [BUGGY]  if(readPos  ==  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1294	[BUG]  [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1295	[BUG]  [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1296	[BUG]  [BUGGY]  if(readPos  ==  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1297	[BUG]  [BUGGY]  if(readPos!=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1298	[BUG]  [BUGGY]  if(readPos!=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1299	[BUG]  [BUGGY]  if(readPos  ==  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1300	[BUG]  [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1301	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  readPos);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  readPos,  readPos);	  System.arraycopy(buffer,    0,    p,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	188	None	replace
1302	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  readPos);  pos  =  0;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  readPos);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  readPos,  readPos);  pos  =  0;	  System.arraycopy(buffer,    0,    p,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	188	None	replace
1303	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  buffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  readPos,  buffer.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  readPos,  buffer.length);  pos  =  0;	  System.arraycopy(buffer,    0,    p,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	188	None	replace
1304	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1305	[BUG]  [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	274	None	replace
1306	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
1307	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
1308	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
1309	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
1310	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
1311	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  read  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  read  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  read	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
1312	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
1313	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  1];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
1314	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3  +  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  3  +  1];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
1315	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  readPos  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  readPos  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  readPos  +  1];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	164	None	replace
1316	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	180	None	replace
1317	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	180	None	replace
1318	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  6  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  6  +  1];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  6  +  1];	  byte[]    buffer    =    new    byte[buffer.length    *    6];    	non-compiled	[CE]  ';'  expected	165	None	replace
1319	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	280	None	replace
1320	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	175	None	replace
1321	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  buffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  buffer.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  c,  0,  buffer.length);  pos  =  0;	  System.arraycopy(buffer,    0,    c,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	189	None	replace
1322	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  bytes,  1,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  bytes,  1,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  bytes,  1,  readPos);	  System.arraycopy(buffer,    0,    buffer,    1,    readPos);    	non-compiled	[CE]  ';'  expected	300	None	replace
1323	[BUG]  [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1324	[BUG]  [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1325	[BUG]  [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1326	[BUG]  [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_RESIZE_FACTOR  :  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_RESIZE_FACTOR  :  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >=  0)?  DEFAULT_BUFFER_RESIZE_FACTOR  :  DEFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1327	[BUG]  [BUGGY]  pos  =(readPos  >=  0)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >=  0)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >=  0)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1328	[BUG]  [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >  0)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1329	[BUG]  [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(readPos  >=  0)?  DEFAULT_BUFFER_SIZE  :  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1330	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	253	None	replace
1331	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	253	None	replace
1332	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos];	  byte[]    b    =    new    byte[1];    	non-compiled	[CE]  ';'  expected	117	None	replace
1333	[BUG]  [BUGGY]  arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  if(readPos    ==    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	201	None	replace
1334	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	319	None	replace
1335	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    	non-compiled	[CE]  ';'  expected	306	None	replace
1336	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
1337	[BUG]  [BUGGY]  ||  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
1338	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  bytes);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  bytes);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  bytes);	  System.arraycopy(buffer,    0,    bytes,    0,    readPos);    	non-compiled	[CE]  ';'  expected	212	None	replace
1339	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1340	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1341	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1342	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1343	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1344	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1345	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1346	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1347	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arra  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	168	None	replace
1348	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  4  +  readPos];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  4  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  /  4  +  readPos];	  byte[]    b    =    new    byte[buffer.length    /    4];    	non-compiled	[CE]  ';'  expected	237	None	replace
1349	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  /  4];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  /  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  /  4];	  byte[]    b    =    new    byte[buffer.length    /    4];    	non-compiled	[CE]  ';'  expected	237	None	replace
1350	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  readPos  +  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  readPos  +  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  readPos  +  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
1351	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3  +  readPos];  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3  +  readPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  3  +  readPos];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
1352	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1  +  readPos];  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1  +  readPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  1  +  readPos];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
1353	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  buffer];  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  buffer];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR  +  buffer];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
1354	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  readPos];  [CE]  ';'  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  readPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  readPos];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
1355	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	76	None	replace
1356	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	76	None	replace
1357	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	295	None	replace
1358	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	295	None	replace
1359	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	29	None	replace
1360	[BUG]  [BUGGY]  byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	92	None	replace
1361	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  buffer,  readPos);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    	non-compiled	[CE]  ';'  expected	15	None	replace
1362	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  readPos,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  readPos,  readPos);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    	non-compiled	[CE]  ';'  expected	15	None	replace
1363	[BUG]  [BUGGY]  byte[]  b  =  new  byte[328];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[328];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[328];	  byte[]    b    =    new    byte[128];    	non-compiled	[CE]  ';'  expected	116	None	replace
1364	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  *  readPos];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1  *  readPos];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  *  readPos];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	267	None	replace
1365	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	267	None	replace
1366	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[3  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[3  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[3  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	267	None	replace
1367	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	267	None	replace
1368	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    DEFAULT_BUFFER_RESIZE_FACTOR,    readPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
1369	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    DEFAULT_BUFFER_RESIZE_FACTOR,    readPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
1370	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  readPos  *  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  readPos  *  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  readPos  *  2];	  byte[]    b    =    new    byte[buffer.length    +    readPos];    	non-compiled	[CE]  ';'  expected	226	None	replace
1371	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  <  <  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
1372	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  <  <  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
1373	[BUG]  [BUGGY]  byte[]  b  =  new  byte[0  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[0  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[0  <  <  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
1374	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  <  <  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
1375	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  {  <  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  {  <  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  {  <  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
1376	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  {  <  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  {  <  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  {  <  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	316	None	replace
1377	[BUG]  [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
1378	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
1379	[BUG]  [BUGGY]  arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
1380	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	134	None	replace
1381	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	134	None	replace
1382	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  decodeSize];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  decodeSize];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  decodeSize];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	195	None	replace
1383	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer    	non-compiled	[CE]  ';'  expected	305	None	replace
1384	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  b  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  b  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  b	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	86	None	replace
1385	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  b  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  b  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  b	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	86	None	replace
1386	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  1],  readPos  =  0);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  1],  readPos  =  0);  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  1],  readPos  =  0);	  byte[]    b    =    new    byte[buffer.length    *    2    +    1];    	non-compiled	[CE]  ';'  expected	38	None	replace
1387	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  1],  readPos  =  0;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  1],  readPos  =  0;  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  1],  readPos  =  0;	  byte[]    b    =    new    byte[buffer.length    *    2    +    1];    	non-compiled	[CE]  ';'  expected	38	None	replace
1388	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  1].readBytes();  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  1].readBytes();  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  1].readBytes();	  byte[]    b    =    new    byte[buffer.length    *    2    +    1];    	non-compiled	[CE]  ';'  expected	38	None	replace
1389	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos  +  1);  pos  =  0;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos  +  1);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos  +  1);  pos  =  0;	  System.arraycopy(buffer,    0,    b,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	153	None	replace
1390	[BUG]  [BUGGY]  pos  =  readPos  -  1  +  1;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  -  1  +  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  -  1  +  1;	  pos    =    readPos    -    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
1391	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arra    	non-compiled	[CE]  ';'  expected	36	None	replace
1392	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arra    	non-compiled	[CE]  ';'  expected	36	None	replace
1393	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[3  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[3  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[3  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	192	None	replace
1394	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  pos  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4];  pos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    4];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	229	None	replace
1395	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  readPos  =  0;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  1];  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    4];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	229	None	replace
1396	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos    +    1);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1397	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos    +    1);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1398	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  readPos  +  1);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  readPos  +  1);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos    +    1);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1399	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  2  +  readPos];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  *  2  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  2  +  readPos];	  byte[]    b    =    new    byte[4    *    2];    	non-compiled	[CE]  ';'  expected	93	None	replace
1400	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
1401	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
1402	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  s,  0,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  s,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  s,  0,  buffer.length);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
1403	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  l,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  l,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  l,  0,  buffer.length);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
1404	[BUG]  [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	79	None	replace
1405	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	200	None	replace
1406	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	240	None	replace
1407	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  readPos);  }  else  {  System.arra	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	240	None	replace
1408	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
1409	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
1410	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
1411	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1412	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1413	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  6];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  6];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  3  +  6];	  byte[]    b    =    new    byte[buffer.length    *    3    +    2];    	non-compiled	[CE]  ';'  expected	182	None	replace
1414	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  1],  readPos  =  0);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  1],  readPos  =  0);  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  1],  readPos  =  0);	  byte[]    b    =    new    byte[buffer.length    *    4    +    1];    	non-compiled	[CE]  ';'  expected	104	None	replace
1415	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  1],  readPos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  1],  readPos  =  0;  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  1],  readPos  =  0;	  byte[]    b    =    new    byte[buffer.length    *    4    +    1];    	non-compiled	[CE]  ';'  expected	104	None	replace
1416	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	204	None	replace
1417	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  12];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  12];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  12];	  byte[]    b    =    new    byte[buffer.length    +    16];    	non-compiled	[CE]  ';'  expected	141	None	replace
1418	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
1419	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
1420	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
1421	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
1422	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
1423	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
1424	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
1425	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
1426	[BUG]  [BUGGY]  byte[]  b  =  new  byte[328  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[328  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[328  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
1427	[BUG]  [BUGGY]  byte[]  b  =  new  byte[16  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[16  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[16  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
1428	[BUG]  [BUGGY]  byte[]  b  =  new  byte[428  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[428  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[428  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
1429	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
1430	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
1431	[BUG]  [BUGGY]  if(readPos  >=  pos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  pos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  pos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    <    readPos)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1432	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  readPos  -  1);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  readPos  -  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  readPos  -  1);	  System.arraycopy(buffer,    0,    readPos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	172	None	replace
1433	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3);  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  3);	  byte[]    buffer    =    new    byte[buffer.length    *    2);    	non-compiled	[CE]  ';'  expected	103	None	replace
1434	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  4],  readPos  =  0);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  4],  readPos  =  0);  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  4],  readPos  =  0);	  byte[]    b    =    new    byte[buffer.length    *    2    +    4];    	non-compiled	[CE]  ';'  expected	39	None	replace
1435	[BUG]  [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
1436	[BUG]  [BUGGY]  if(readPos!=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
1437	[BUG]  [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
1438	[BUG]  [BUGGY]  if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
1439	[BUG]  [BUGGY]  if(buffer  ==  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
1440	[BUG]  [BUGGY]  if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
1441	[BUG]  [BUGGY]  if(buffer  ==  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
1442	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	127	None	replace
1443	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	132	None	replace
1444	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	132	None	replace
1445	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	132	None	replace
1446	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
1447	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
1448	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  encodeSize.length);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  encodeSize.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  encodeSize.length);	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
1449	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
1450	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  }	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
1451	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	70	None	replace
1452	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	82	None	replace
1453	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	82	None	replace
1454	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
1455	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
1456	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos  +  2);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos  +  2);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos  +  2);	  System.arraycopy(buffer,    0,    b,    0,    readPos);    	non-compiled	[CE]  ';'  expected	51	None	replace
1457	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	55	None	replace
1458	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	55	None	replace
1459	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
1460	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
1461	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
1462	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos],  encodeTable;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos],  encodeTable;  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  readPos],  encodeTable;	  byte[]    b    =    new    byte[buffer.length    *    2    +    readPos];    	non-compiled	[CE]  ';'  expected	40	None	replace
1463	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  3];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  3];	  byte[]    b    =    new    byte[buffer.length    *    16    +    1];    	non-compiled	[CE]  ';'  expected	44	None	replace
1464	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
1465	[BUG]  [BUGGY]  arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
1466	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
1467	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
1468	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
1469	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
1470	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
1471	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
1472	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	260	None	replace
1473	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(readPos    <    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	260	None	replace
1474	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  -  1);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  -  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length  -  1);	  System.arraycopy(buffer,    0,    b,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	326	None	replace
1475	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE);	  System.arraycopy(buffer,    0,    b,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	326	None	replace
1476	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.array  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.array  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.array	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	287	None	replace
1477	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
1478	[BUG]  [BUGGY]  pos  =  1,  readPos  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  1,  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  1,  readPos  =  0;	  pos    =    0,    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
1479	[BUG]  [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	290	None	replace
1480	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  10];  readPos  =  0;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  10];  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  10];  readPos  =  0;	  byte[]    buffer    =    new    byte[buffer.length    *    3];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	230	None	replace
1481	[BUG]  [BUGGY]  pos  =  readPos  +  deFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  deFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  deFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
1482	[BUG]  [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_SIZE.length;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +  DEFAULT_BUFFER_SIZE.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  DEFAULT_BUFFER_SIZE.length;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
1483	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
1484	[BUG]  [BUGGY]  readPos  =  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
1485	[BUG]  [BUGGY]  if(readPos  ==  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1486	[BUG]  [BUGGY]  if(readPos  >=  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1487	[BUG]  [BUGGY]  if(readPos  <  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1488	[BUG]  [BUGGY]  if(readPos  >  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1489	[BUG]  [BUGGY]  if(readPos  ==  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  readPos  =  0;  }	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1490	[BUG]  [BUGGY]  if(readPos  >=  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  readPos  =  0;  }	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1491	[BUG]  [BUGGY]  if(readPos  ==  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1492	[BUG]  [BUGGY]  if(readPos  >=  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  pos  =  1;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1493	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  1);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos,  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
1494	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  readPos  +  1);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  readPos  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos,  readPos  +  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
1495	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  readPos  -  1);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  readPos  -  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos,  readPos  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
1496	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  -  1];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  -  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  -  1];	  byte[]    b    =    new    byte[buffer.length    -    1];    	non-compiled	[CE]  ';'  expected	10	None	replace
1497	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  1  +  readPos];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  1  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  -  1  +  readPos];	  byte[]    b    =    new    byte[buffer.length    -    1];    	non-compiled	[CE]  ';'  expected	10	None	replace
1498	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
1499	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
1500	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
1501	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
1502	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
1503	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
1504	[BUG]  [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	281	None	replace
1505	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  buffer,  readPos);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	60	None	replace
1506	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	24	None	replace
1507	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
1508	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
1509	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
1510	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
1511	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
1512	[BUG]  [BUGGY]  arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
1513	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	261	None	replace
1514	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  /  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  /  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  /  1];	  byte[]    b    =    new    byte[buffer.length    /    1];    	non-compiled	[CE]  ';'  expected	9	None	replace
1515	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  1  +  readPos];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  1  +  readPos];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  /  1  +  readPos];	  byte[]    b    =    new    byte[buffer.length    /    1];    	non-compiled	[CE]  ';'  expected	9	None	replace
1516	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  /  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[Buffer.length  /  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  /  2];	  byte[]    b    =    new    byte[buffer.length    /    1];    	non-compiled	[CE]  ';'  expected	9	None	replace
1517	[BUG]  [BUGGY]  pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR.length;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
1518	[BUG]  [BUGGY]  pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
1519	[BUG]  [BUGGY]  pos  =  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR.length;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
1520	[BUG]  [BUGGY]  pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_SIZE_FACTOR.length;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_SIZE_FACTOR.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_SIZE_FACTOR.length;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
1521	[BUG]  [BUGGY]  pos  =  readPos  +(int)(DEFAULT_BUFFER_RESIZE_FACTOR.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +(int)(DEFAULT_BUFFER_RESIZE_FACTOR.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +(int)(DEFAULT_BUFFER_RESIZE_FACTOR.length);	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
1522	[BUG]  [BUGGY]  pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_SIZE_FACTOR;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_SIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +(deFAULT_BUFFER_RESIZE_FACTOR  <  <  1)?  readPos  :  DEFAULT_BUFFER_SIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
1523	[BUG]  [BUGGY]  pos  =  readPos  +(int)DEFAULT_BUFFER_RESIZE_FACTOR.length;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  +(int)DEFAULT_BUFFER_RESIZE_FACTOR.length;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +(int)DEFAULT_BUFFER_RESIZE_FACTOR.length;	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
1524	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  System.array  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  System.array  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos,  readPos);  System.array	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.array    	non-compiled	[CE]  ';'  expected	304	None	replace
1525	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.array  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.array  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.array	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.array    	non-compiled	[CE]  ';'  expected	304	None	replace
1526	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  <  <  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  <  <  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  <  <  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	262	None	replace
1527	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  <  <  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[3  <  <  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  <  <  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	262	None	replace
1528	[BUG]  [BUGGY]  byte[]  b  =  new  byte[0  <  <  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[0  <  <  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[0  <  <  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	262	None	replace
1529	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  <  <  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[5  <  <  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  <  <  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	262	None	replace
1530	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  len];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  len];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  len];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	262	None	replace
1531	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos  -  1);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos  -  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    1);    	non-compiled	[CE]  ';'  expected	52	None	replace
1532	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  1);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  *  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    1);    	non-compiled	[CE]  ';'  expected	52	None	replace
1533	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	56	None	replace
1534	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	234	None	replace
1535	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	234	None	replace
1536	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
1537	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
1538	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
1539	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
1540	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  3];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  3];	  byte[]    b    =    new    byte[1    <    <    2];    	non-compiled	[CE]  ';'  expected	263	None	replace
1541	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	282	None	replace
1542	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1543	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1544	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	283	None	replace
1545	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[length  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[length  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[length  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	193	None	replace
1546	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[writePos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[writePos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[writePos  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	193	None	replace
1547	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[arraySize  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[arraySize  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[arraySize  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	193	None	replace
1548	[BUG]  [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  pos  =  0;  }  else  {  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1549	[BUG]  [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  pos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1550	[BUG]  [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  pos  =  0;  }  else  {  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1551	[BUG]  [BUGGY]  if(readPos  <  0)  {  pos  =  0;  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  pos  =  0;  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  pos  =  0;  }  else  {  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1552	[BUG]  [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  else  {  buffer.length  +=  readPos;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  else  {  buffer.length  +=  readPos;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  pos  =  0;  }  else  {  buffer.length  +=  readPos;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1553	[BUG]  [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  else  {  buffer.length  =  0;  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  else  {  buffer.length  =  0;  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  pos  =  0;  }  else  {  buffer.length  =  0;  readPos  =  0;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1554	[BUG]  [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  pos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  pos  =  0;  }  else  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1555	[BUG]  [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer.length  +=  readPos;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer.length  +=  readPos;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  pos  =  0;  }  else  {  buffer.length  +=  readPos;  }	  pos    =    0;    	non-compiled	[CE]  ';'  expected	2	None	replace
1556	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
1557	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
1558	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	214	None	replace
1559	[BUG]  [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1560	[BUG]  [BUGGY]  if(pos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1561	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1562	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  <  2)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  <  2)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  <  2)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1563	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  <  2)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  <  2)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  if(buffer.length  <  2)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    <    2)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	315	None	replace
1564	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	293	None	replace
1565	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  deFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  deFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  deFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	187	None	replace
1566	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	187	None	replace
1567	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  6];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  6];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  6];	  byte[]    b    =    new    byte[1    <    <    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	262	None	replace
1568	[BUG]  [BUGGY]  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	127	None	replace
1569	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	180	None	replace
1570	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	180	None	replace
1571	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.size  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.size  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.size  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	266	None	replace
1572	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	266	None	replace
1573	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	96	None	replace
1574	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_REIZE_FACTOR];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_REIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_REIZE_FACTOR];	  byte[]    buffer    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	96	None	replace
1575	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RECIZE_FACTOR];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RECIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RECIZE_FACTOR];	  byte[]    buffer    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	96	None	replace
1576	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    1];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
1577	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    1];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
1578	[BUG]  [BUGGY]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	  byte[]    buffer    =    new    byte[buffer.length    *    1];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	30	None	replace
1579	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	76	None	replace
1580	[BUG]  [BUGGY]  if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	250	None	replace
1581	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	34	None	replace
1582	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	34	None	replace
1583	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos    +    1);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1584	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(bu  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(bu	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	303	None	replace
1585	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(bu  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(bu	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	303	None	replace
1586	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
1587	[BUG]  [BUGGY]  pos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
1588	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  this.readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  this.readPos,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  this.readPos,  0,  readPos);	  System.arraycopy(buffer,    0,    readPos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	172	None	replace
1589	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  1,  buffer.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  readPos,  1,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  1,  buffer.length);	  System.arraycopy(buffer,    0,    readPos,    0,    readPos);    	non-compiled	[CE]  ';'  expected	172	None	replace
1590	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_SIZE,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_SIZE,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_SIZE,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_SIZE);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	211	None	replace
1591	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.size  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.size  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.size  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	193	None	replace
1592	[BUG]  [BUGGY]  if(pos  <  =  readPos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  readPos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  readPos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    <    readPos)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1593	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  <  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  <  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  <  readPos)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    <    readPos)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
1594	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	231	None	replace
1595	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	231	None	replace
1596	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	291	None	replace
1597	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	291	None	replace
1598	[BUG]  [BUGGY]  if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
1599	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
1600	[BUG]  [BUGGY]  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	54	None	replace
1601	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	186	None	replace
1602	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	232	None	replace
1603	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    =    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
1604	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  3];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  3];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    3];    	non-compiled	[CE]  ';'  expected	309	None	replace
1605	[BUG]  [BUGGY]  if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
1606	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
1607	[BUG]  [BUGGY]  if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	84	None	replace
1608	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	29	None	replace
1609	[BUG]  [BUGGY]  byte[]  b  =  new  byte[DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1];    	non-compiled	[CE]  ';'  expected	117	None	replace
1610	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b    	non-compiled	[CE]  ';'  expected	297	None	replace
1611	[BUG]  [BUGGY]  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	256	None	replace
1612	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[readPos    +    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	228	None	replace
1613	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  +  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[size  +  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  +  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[readPos    +    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	228	None	replace
1614	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    	non-compiled	[CE]  ';'  expected	306	None	replace
1615	[BUG]  [BUGGY]  byte[]  b  =  new  byte[8  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[8  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[8  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[6    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	91	None	replace
1616	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer    	non-compiled	[CE]  ';'  expected	72	None	replace
1617	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
1618	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  +  1);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
1619	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
1620	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	279	None	replace
1621	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1622	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
1623	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  pos  -  1);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  pos  -  1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  pos  -  1);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    1);    	non-compiled	[CE]  ';'  expected	52	None	replace
1624	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.array  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.array  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.array	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.array    	non-compiled	[CE]  ';'  expected	304	None	replace
1625	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.array  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.array  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.array	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.array    	non-compiled	[CE]  ';'  expected	304	None	replace
1626	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
1627	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	177	None	replace
1628	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  return;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  return;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  return;  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	200	None	replace
1629	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
1630	[BUG]  [BUGGY]  if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
1631	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	273	None	replace
1632	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
1633	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
1634	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
1635	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_	  System.arraycopy(buffer,    0,    b,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	203	None	replace
1636	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	244	None	replace
1637	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    DEFAULT_BUFFER_RESIZE_FACTOR,    readPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
1638	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    DEFAULT_BUFFER_RESIZE_FACTOR,    readPos);    }    	non-compiled	[CE]  ';'  expected	311	None	replace
1639	[BUG]  [BUGGY]  if(ReadPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(ReadPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(ReadPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	287	None	replace
1640	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    	non-compiled	[CE]  ';'  expected	71	None	replace
1641	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readPos	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    readP    	non-compiled	[CE]  ';'  expected	208	None	replace
1642	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
1643	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
1644	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
1645	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR;  }	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
1646	[BUG]  [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  if(readPos    >=    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	150	None	replace
1647	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	314	None	replace
1648	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
1649	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
1650	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
1651	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
1652	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
1653	[BUG]  [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	277	None	replace
1654	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	179	None	replace
1655	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	179	None	replace
1656	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	324	None	replace
1657	[BUG]  [BUGGY]  if(pos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	280	None	replace
1658	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[2  *  2];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  2];	  byte[]    b    =    new    byte[2    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	88	None	replace
1659	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	174	None	replace
1660	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  1,  readPos);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  1,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  1,  readPos);	  System.arraycopy(buffer,    0,    p,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	188	None	replace
1661	[BUG]  [BUGGY]  &&  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  &&  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	&&  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
1662	[BUG]  [BUGGY]  ||  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
1663	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos-1);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos-1);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos-1);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	173	None	replace
1664	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	159	None	replace
1665	[BUG]  [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	159	None	replace
1666	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }	  System.arraycopy(buffer,    0,    b,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	153	None	replace
1667	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }	  System.arraycopy(buffer,    0,    b,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	153	None	replace
1668	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  pos  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  pos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  pos  =  0;  }	  System.arraycopy(buffer,    0,    b,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	153	None	replace
1669	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	197	None	replace
1670	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[p  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[p  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[p  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	197	None	replace
1671	[BUG]  [BUGGY]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	53	None	replace
1672	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	53	None	replace
1673	[BUG]  [BUGGY]  pos  =  1  +  readPos;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  1  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  1  +  readPos;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
1674	[BUG]  [BUGGY]  pos  =  buffer.length  +  readPos;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  buffer.length  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  buffer.length  +  readPos;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
1675	[BUG]  [BUGGY]  pos  =  decodeSize  +  readPos;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  decodeSize  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  decodeSize  +  readPos;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
1676	[BUG]  [BUGGY]  pos  =  pos  +  readPos;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  pos  +  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  pos  +  readPos;	  pos    =    DEFAULT_BUFFER_SIZE    +    readPos;    	non-compiled	[CE]  ';'  expected	225	None	replace
1677	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[size  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[readPos    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	121	None	replace
1678	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  length  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
1679	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
1680	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  readingPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  readingPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  readingPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
1681	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  len  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[1  <  <  len  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  len  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    <    <    decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	317	None	replace
1682	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	28	None	replace
1683	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	28	None	replace
1684	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	132	None	replace
1685	[BUG]  [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	132	None	replace
1686	[BUG]  [BUGGY]  if(buffer.length  <  =  DEFAULT_BUFFER_SIZE_FACTOR)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  <  =  DEFAULT_BUFFER_SIZE_FACTOR)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  <  =  DEFAULT_BUFFER_SIZE_FACTOR)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	132	None	replace
1687	[BUG]  [BUGGY]  if(decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
1688	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
1689	[BUG]  [BUGGY]  char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	128	None	replace
1690	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  buffer.length);	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	50	None	replace
1691	[BUG]  [BUGGY]  pos  =  0,  len  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  len  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  len  =  0;	  pos    =    0,    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
1692	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	175	None	replace
1693	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	312	None	replace
1694	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	312	None	replace
1695	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR]  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR]  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR]  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
1696	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
1697	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    	non-compiled	[CE]  ';'  expected	294	None	replace
1698	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	178	None	replace
1699	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	241	None	replace
1700	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  3];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  3];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	241	None	replace
1701	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arra    	non-compiled	[CE]  ';'  expected	36	None	replace
1702	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arra    	non-compiled	[CE]  ';'  expected	36	None	replace
1703	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	79	None	replace
1704	[BUG]  [BUGGY]  if(buffer.length  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	  if(buffer.length    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	320	None	replace
1705	[BUG]  [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	281	None	replace
1706	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR].getBytes();  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR].getBytes();  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR].getBytes();	  byte[]    buffer    =    new    byte[buffer.length    *    2);    	non-compiled	[CE]  ';'  expected	103	None	replace
1707	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	131	None	replace
1708	[BUG]  [BUGGY]  pos  =  this.readPos  -  1;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  this.readPos  -  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  this.readPos  -  1;	  pos    =    readPos    -    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
1709	[BUG]  [BUGGY]  pos  =  inputPos  -  1;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  inputPos  -  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  inputPos  -  1;	  pos    =    readPos    -    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
1710	[BUG]  [BUGGY]  pos  =  decodeSize  -  1;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  decodeSize  -  1;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  decodeSize  -  1;	  pos    =    readPos    -    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
1711	[BUG]  [BUGGY]  readPos  -=  readPos;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  -=  readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  -=  readPos;	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
1712	[BUG]  [BUGGY]  readPos  =  -readPos;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  -readPos;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  -readPos;	  readPos    =    readPos;    	non-compiled	[CE]  ';'  expected	17	None	replace
1713	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	229	None	replace
1714	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1715	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1716	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1717	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1718	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1719	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1720	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	26	None	replace
1721	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	129	None	replace
1722	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	129	None	replace
1723	[BUG]  [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	129	None	replace
1724	[BUG]  [BUGGY]  if(buffer.length!=  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length!=  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length!=  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	129	None	replace
1725	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1726	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_SIZE  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_SIZE  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_SIZE  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
1727	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  4];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  4];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE    +    1];    	non-compiled	[CE]  ';'  expected	243	None	replace
1728	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  11];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  11];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  11];	  byte[]    b    =    new    byte[buffer.length    +    16];    	non-compiled	[CE]  ';'  expected	141	None	replace
1729	[BUG]  [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	290	None	replace
1730	[BUG]  [BUGGY]  if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	290	None	replace
1731	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
1732	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
1733	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
1734	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  +  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	95	None	replace
1735	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  12];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  12];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  12];	  byte[]    b    =    new    byte[buffer.length    *    24];    	non-compiled	[CE]  ';'  expected	46	None	replace
1736	[BUG]  [BUGGY]  byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	196	None	replace
1737	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
1738	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
1739	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  decodeSize);	  byte[]    buffer    =    new    byte[decodeSize.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	83	None	replace
1740	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	133	None	replace
1741	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	133	None	replace
1742	[BUG]  [BUGGY]  if(buffer.length  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	133	None	replace
1743	[BUG]  [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	133	None	replace
1744	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  4];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  4];	  byte[]    b    =    new    byte[buffer.length    *    16    +    1];    	non-compiled	[CE]  ';'  expected	44	None	replace
1745	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_SIZE];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
1746	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[length  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[length  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[length  *  DEFAULT_BUFFER_SIZE];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
1747	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[p  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[p  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[p  *  DEFAULT_BUFFER_SIZE];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
1748	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[4  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[4  *  DEFAULT_BUFFER_SIZE];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[4  *  DEFAULT_BUFFER_SIZE];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	194	None	replace
1749	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  len];  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  len];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  len];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
1750	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  decodeSize];  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  decodeSize];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  decodeSize];	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR    +    readPos];    	non-compiled	[CE]  ';'  expected	101	None	replace
1751	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
1752	[BUG]  [BUGGY]  if(buffer.length  <  =  DEFAULT_BUFFER_SIZE_FACTOR)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  <  =  DEFAULT_BUFFER_SIZE_FACTOR)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  <  =  DEFAULT_BUFFER_SIZE_FACTOR)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
1753	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
1754	[BUG]  [BUGGY]  if(buffer.length  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	162	None	replace
1755	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  ch,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  ch,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  ch,  buffer,  0,  readPos);	  System.arraycopy(buffer,    0,    pos,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	299	None	replace
1756	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  c,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  c,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  c,  buffer,  0,  readPos);	  System.arraycopy(buffer,    0,    pos,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	299	None	replace
1757	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
1758	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
1759	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
1760	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	253	None	replace
1761	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	295	None	replace
1762	[BUG]  [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	295	None	replace
1763	[BUG]  [BUGGY]  if(pos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	295	None	replace
1764	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	295	None	replace
1765	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    	non-compiled	[CE]  ';'  expected	295	None	replace
1766	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,	  System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	147	None	replace
1767	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  else  {  System.arraycopy(buffer,  0,	  System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	147	None	replace
1768	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
1769	[BUG]  [BUGGY]  readPos  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
1770	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  len,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  len,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  len,  readPos);	  System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    	non-compiled	[CE]  ';'  expected	15	None	replace
1771	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
1772	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
1773	[BUG]  [BUGGY]  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
1774	[BUG]  [BUGGY]  ||  buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  ||  buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  buffer.length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  ||    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
1775	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  d,  0,  buffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  d,  0,  buffer.length);  pos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  d,  0,  buffer.length);  pos  =  0;	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    pos    =    0;    	non-compiled	[CE]  ';'  expected	155	None	replace
1776	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  buffer.length];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  buffer.length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  buffer.length];	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
1777	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  length];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  length];	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
1778	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos],  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos],  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  readPos],  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
1779	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  offset];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  offset];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  offset];	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
1780	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos],  DEFAULT_BUFFER_SIZE);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos],  DEFAULT_BUFFER_SIZE);  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  readPos],  DEFAULT_BUFFER_SIZE);	  byte[]    b    =    new    byte[buffer.length    *    4    +    readPos];    	non-compiled	[CE]  ';'  expected	236	None	replace
1781	[BUG]  [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos!=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
1782	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	282	None	replace
1783	[BUG]  [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  readPos  =  0;  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    else    {    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	282	None	replace
1784	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_RESIZE_FACTOR;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
1785	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_SIZE;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  *  DEFAULT_BUFFER_SIZE;	  pos    =    DEFAULT_BUFFER_SIZE;    	non-compiled	[CE]  ';'  expected	3	None	replace
1786	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  +  getPos()];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[128  +  getPos()];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  +  getPos()];	  byte[]    b    =    new    byte[128    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	115	None	replace
1787	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	77	None	replace
1788	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
1789	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
1790	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  -1)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  -1)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	301	None	replace
1791	[BUG]  [BUGGY]  pos  =(int)(readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(int)(readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(int)(readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1792	[BUG]  [BUGGY]  pos  =  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1793	[BUG]  [BUGGY]  pos  =(int)(readPos  *  DEFAULT_BUFFER_SIZE);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(int)(readPos  *  DEFAULT_BUFFER_SIZE);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(int)(readPos  *  DEFAULT_BUFFER_SIZE);	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1794	[BUG]  [BUGGY]  pos  =  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR,  readPos);	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1795	[BUG]  [BUGGY]  pos  =(int)(readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =(int)(readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =(int)(readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos);	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1796	[BUG]  [BUGGY]  pos  =  System.identityHashCode(DEFAULT_BUFFER_SIZE);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  System.identityHashCode(DEFAULT_BUFFER_SIZE);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  System.identityHashCode(DEFAULT_BUFFER_SIZE);	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR;    	non-compiled	[CE]  ';'  expected	4	None	replace
1797	[BUG]  [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1798	[BUG]  [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1799	[BUG]  [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1800	[BUG]  [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1801	[BUG]  [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1802	[BUG]  [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1803	[BUG]  [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1804	[BUG]  [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =(int)Math.rint((  int)DEFAULT_BUFFER_RESIZE_FACTOR);  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,	  pos    =    1;    	non-compiled	[CE]  ';'  expected	224	None	replace
1805	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  -1)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  -1)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	327	None	replace
1806	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	82	None	replace
1807	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	82	None	replace
1808	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(buffer.length    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	283	None	replace
1809	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
1810	[BUG]  [BUGGY]  pos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
1811	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
1812	[BUG]  [BUGGY]  readPos  =  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  readPos  =  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  readPos    =    readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
1813	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	218	None	replace
1814	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	  byte[]    buffer    =    new    byte[readPos,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	176	None	replace
1815	[BUG]  [BUGGY]  if(decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	55	None	replace
1816	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	55	None	replace
1817	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  3];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[readPos  *  2  +  3];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  2  +  3];	  byte[]    b    =    new    byte[readPos    *    2];    	non-compiled	[CE]  ';'  expected	118	None	replace
1818	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	57	None	replace
1819	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[readPos.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	80	None	replace
1820	[BUG]  [BUGGY]  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
1821	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  10];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  10];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  10];	  byte[]    b    =    new    byte[buffer.length    *    2    +    16];    	non-compiled	[CE]  ';'  expected	42	None	replace
1822	[BUG]  [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	302	None	replace
1823	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	  if(readPos    ==    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	269	None	replace
1824	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	261	None	replace
1825	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	261	None	replace
1826	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    4];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	56	None	replace
1827	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	64	None	replace
1828	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	64	None	replace
1829	[BUG]  [BUGGY]  if(ReadPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(ReadPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(ReadPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	169	None	replace
1830	[BUG]  [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
1831	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
1832	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }	  if(readPos    >=    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	278	None	replace
1833	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	286	None	replace
1834	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	286	None	replace
1835	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	134	None	replace
1836	[BUG]  [BUGGY]  if(buffer.length!=  DEFAULT_BUFFER_RESIZE_FACTOR)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length!=  DEFAULT_BUFFER_RESIZE_FACTOR)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length!=  DEFAULT_BUFFER_RESIZE_FACTOR)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	134	None	replace
1837	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  b,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
1838	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  pos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  pos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  1,  pos);	  System.arraycopy(buffer,    0,    buffer,    1,    readPos);    	non-compiled	[CE]  ';'  expected	300	None	replace
1839	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  -1)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  -1)  {  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1840	[BUG]  [BUGGY]  if(pos  ==  -1)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  -1)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  -1)  {  if(readPos  >  0)  {  buffer[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1841	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  buffer.length];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  buffer.length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  buffer.length];	  byte[]    b    =    new    byte[buffer.length    *    16    +    readPos];    	non-compiled	[CE]  ';'  expected	190	None	replace
1842	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  length];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  length];	  byte[]    b    =    new    byte[buffer.length    *    16    +    readPos];    	non-compiled	[CE]  ';'  expected	190	None	replace
1843	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  offset];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  offset];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  offset];	  byte[]    b    =    new    byte[buffer.length    *    16    +    readPos];    	non-compiled	[CE]  ';'  expected	190	None	replace
1844	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  byte[]    buffer    =    new    byte[buffer.length    *    1];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	58	None	replace
1845	[BUG]  [BUGGY]  if(pos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	289	None	replace
1846	[BUG]  [BUGGY]  pos  =  decodeSize(buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  pos  =  decodeSize(buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  decodeSize(buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  pos    =    DEFAULT_BUFFER_RESIZE_FACTOR.length;    	non-compiled	[CE]  ';'  expected	323	None	replace
1847	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;	  if(buffer!=    null)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	272	None	replace
1848	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  buffer.length);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  buffer.length);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  0,  buffer.length);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	135	None	replace
1849	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  -  2);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  -  2);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  -  2);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	151	None	replace
1850	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  1,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	151	None	replace
1851	[BUG]  [BUGGY]  if(pos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
1852	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	  char[]    buffer    =    new    char[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	130	None	replace
1853	[BUG]  [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	  if(readPos    >=    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1854	[BUG]  [BUGGY]  byte[]  b  =  new  byte[p  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[p  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[p  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[pos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	120	None	replace
1855	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	148	None	replace
1856	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RES	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	148	None	replace
1857	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	148	None	replace
1858	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  *  4];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[size  *  4];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  *  4];	  byte[]    b    =    new    byte[size    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	308	None	replace
1859	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	81	None	replace
1860	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	81	None	replace
1861	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[decodeSize    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	81	None	replace
1862	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
1863	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
1864	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_S  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_S  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_S	  System.arraycopy(buffer,    0,    pos,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	202	None	replace
1865	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	  byte[]    buffer    =    new    byte[buffer.length    *    2];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	24	None	replace
1866	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
1867	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  len,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  len,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  len,  DEFAULT_BUFFER_RESIZE_FACTOR);  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
1868	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
1869	[BUG]  [BUGGY]  if(readPos  <  0  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    <    0)    {    if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	33	None	replace
1870	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.    	non-compiled	[CE]  ';'  expected	170	None	replace
1871	[BUG]  [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
1872	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
1873	[BUG]  [BUGGY]  if(readPos  <  0  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
1874	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(bu    	non-compiled	[CE]  ';'  expected	233	None	replace
1875	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	276	None	replace
1876	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	276	None	replace
1877	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  readPos  =  0;  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  3];  readPos  =  0;  }	  byte[]    buffer    =    new    byte[buffer.length    *    3];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	230	None	replace
1878	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[size  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	191	None	replace
1879	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[p  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  buffer  =  new  byte[p  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[p  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    buffer    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	191	None	replace
1880	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  3);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  3);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  3);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    readPos);    	non-compiled	[CE]  ';'  expected	49	None	replace
1881	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  pos  -  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  pos  -  readPos);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  pos  -  readPos);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos    -    readPos);    	non-compiled	[CE]  ';'  expected	49	None	replace
1882	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  0);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  0);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos,  0);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
1883	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  4);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  4);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos,  4);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
1884	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  2);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  2);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos,  2);	  System.arraycopy(buffer,    0,    buffer,    0,    readPos,    pos);    	non-compiled	[CE]  ';'  expected	213	None	replace
1885	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  buffer[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(readPos    >    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arra    	non-compiled	[CE]  ';'  expected	240	None	replace
1886	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer    	non-compiled	[CE]  ';'  expected	305	None	replace
1887	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  1,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  1,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  1,  readPos);  }	  if(readPos    <    =    0)    {    byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	292	None	replace
1888	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  /  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  /  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  /  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arra    	non-compiled	[CE]  ';'  expected	275	None	replace
1889	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  8  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
1890	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  DEFAULT_BUFFER_SIZE];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	227	None	replace
1891	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  length];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  length];	  byte[]    b    =    new    byte[buffer.length    *    2    +    readPos];    	non-compiled	[CE]  ';'  expected	40	None	replace
1892	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  buffer.length];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  buffer.length];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  buffer.length];	  byte[]    b    =    new    byte[buffer.length    *    2    +    readPos];    	non-compiled	[CE]  ';'  expected	40	None	replace
1893	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  offset];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  offset];  [BUGGY]      System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  offset];	  byte[]    b    =    new    byte[buffer.length    *    2    +    readPos];    	non-compiled	[CE]  ';'  expected	40	None	replace
1894	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  /  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  /  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  /  DEFAULT_BUFFER_RESIZE_FACTOR);	  System.arraycopy(buffer,    0,    readPos,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    	non-compiled	[CE]  ';'  expected	149	None	replace
1895	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  }	  if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    readPos    +    1);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	207	None	replace
1896	[BUG]  [BUGGY]  if(readPos  <  0  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(readPos  <  0  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	  if(readPos    <    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	255	None	replace
1897	[BUG]  [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	288	None	replace
1898	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {      [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }  [BUGGY]      byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  }	  if(pos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    	non-compiled	[CE]  ';'  expected	288	None	replace
