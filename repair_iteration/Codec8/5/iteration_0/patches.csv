bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    System.arraycopy(buffer,  0,  b,  0,  buffer.length);		non-compiled	[CE]  ';'  expected	10	None	add
2	[BUG]  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];		non-compiled	[CE]  ';'  expected	10	None	add
3	[BUG]  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);		non-compiled	[CE]  ';'  expected	10	None	add
4	[BUG]  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;		non-compiled	[CE]  ';'  expected	10	None	add
5	[BUG]  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);		non-compiled	[CE]  ';'  expected	10	None	add
6	[BUG]  [BUGGY]    System.arraycopy(b,  0,  b,  0,  buffer.length);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(b,  0,  b,  0,  buffer.length);  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    System.arraycopy(b,  0,  b,  0,  buffer.length);		non-compiled	[CE]  ';'  expected	10	None	add
7	[BUG]  [BUGGY]    System.arraycopy(b,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(b,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    System.arraycopy(b,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);		non-compiled	[CE]  ';'  expected	10	None	add
8	[BUG]  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;		non-compiled	[CE]  ';'  expected	10	None	add
9	[BUG]  [BUGGY]    if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }		non-compiled	[CE]  ';'  expected	10	None	add
10	[BUG]  [BUGGY]    if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  else  {  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  else  {  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(buffer.length  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  else  {  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  }		non-compiled	[CE]  ';'  expected	10	None	add
11	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(b,  0,  buffer,  0,  buffer.length);  [BUGGY]  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	System.arraycopy(b,  0,  buffer,  0,  buffer.length);	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  	non-compiled	[CE]  ';'  expected	9	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  1,  buffer.length);  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(buffer,  0,  b,  1,  buffer.length);  [BUGGY]  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	System.arraycopy(buffer,  0,  b,  1,  buffer.length);	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  	non-compiled	[CE]  ';'  expected	9	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  +  1);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  +  1);  [BUGGY]  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length  +  1);	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  	non-compiled	[CE]  ';'  expected	9	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  [BUGGY]  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos);	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  	non-compiled	[CE]  ';'  expected	9	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(chunks,  0,  b,  0,  buffer.length);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(chunks,  0,  b,  0,  buffer.length);  [BUGGY]  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	System.arraycopy(chunks,  0,  b,  0,  buffer.length);	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  	non-compiled	[CE]  ';'  expected	9	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(base64,  0,  b,  0,  buffer.length);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(base64,  0,  b,  0,  buffer.length);  [BUGGY]  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	System.arraycopy(base64,  0,  b,  0,  buffer.length);	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  	non-compiled	[CE]  ';'  expected	9	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(b,  0,  buffer,  0,  b.length);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(b,  0,  buffer,  0,  b.length);  [BUGGY]  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	System.arraycopy(b,  0,  buffer,  0,  b.length);	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  	non-compiled	[CE]  ';'  expected	9	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE);  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE);  [BUGGY]  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_SIZE);	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  	non-compiled	[CE]  ';'  expected	9	None	replace
19	[BUG]  [BUGGY]    System.arraycopy(b,  0,  b,  0,  readPos);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(b,  0,  b,  0,  readPos);  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    System.arraycopy(b,  0,  b,  0,  readPos);		non-compiled	[CE]  ';'  expected	10	None	add
20	[BUG]  [BUGGY]    if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }		non-compiled	[CE]  ';'  expected	10	None	add
21	[BUG]  [BUGGY]    if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }		non-compiled	[CE]  ';'  expected	10	None	add
22	[BUG]  [BUGGY]    if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }		non-compiled	[CE]  ';'  expected	10	None	add
23	[BUG]  [BUGGY]    b  =  System.arraycopy(buffer,  0,  b,  0,  readPos);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    b  =  System.arraycopy(buffer,  0,  b,  0,  readPos);  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    b  =  System.arraycopy(buffer,  0,  b,  0,  readPos);		non-compiled	[CE]  ';'  expected	10	None	add
24	[BUG]  [BUGGY]    if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }		non-compiled	[CE]  ';'  expected	10	None	add
25	[BUG]  [BUGGY]    if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(readPos  >  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }		non-compiled	[CE]  ';'  expected	10	None	add
26	[BUG]  [BUGGY]    if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  }  else  {  System.arraycopy(buffer,  0,  b,  0,  readPos);  buffer  =  b;  }		non-compiled	[CE]  ';'  expected	10	None	add
27	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  b.length);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  b.length);  [BUGGY]  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	System.arraycopy(buffer,  0,  b,  0,  b.length);	System.arraycopy(buffer,  0,  b,  0,  buffer.length);  	non-compiled	[CE]  ';'  expected	9	None	replace
28	[BUG]  [BUGGY]    b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];		non-compiled	[CE]  ';'  expected	10	None	add
29	[BUG]  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  }		non-compiled	[CE]  ';'  expected	10	None	add
30	[BUG]  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  readPos  =  0;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  readPos  =  0;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  readPos  =  0;  }		non-compiled	[CE]  ';'  expected	10	None	add
31	[BUG]  [BUGGY]    b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];		non-compiled	[CE]  ';'  expected	10	None	add
32	[BUG]  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  pos  =  0;  readPos  =  0;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  pos  =  0;  readPos  =  0;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  pos  =  0;  readPos  =  0;  }		non-compiled	[CE]  ';'  expected	10	None	add
33	[BUG]  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  pos  =  0;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  pos  =  0;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  pos  =  0;  }		non-compiled	[CE]  ';'  expected	10	None	add
34	[BUG]  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE		non-compiled	[CE]  ';'  expected	10	None	add
35	[BUG]  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }		non-compiled	[CE]  ';'  expected	10	None	add
36	[BUG]  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	389	389	1	replace	    if(b!=  null)  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  pos  =  0;  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }		non-compiled	[CE]  ';'  expected	10	None	add
