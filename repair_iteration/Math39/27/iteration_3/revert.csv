projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(forward,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x0,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(step,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,steps,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<a.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<y.length;++i){if(!filteredNextT.equals(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<scale.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<a.length;++i){if(!filteredNextT.contains(y[0])){firstTime=true;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(firstTime,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepSize,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,firstTime,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(min,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(out,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(y,getOrder(),scale,error,x,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(y,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stage,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),factor,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,steps,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,steps,y,vecAbsoluteTolerance,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x0,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x0,getOrder(),scale,stageStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x0,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(initializeStep(t,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yTmp,yDotK[0]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextIsLast=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,steps,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),factor,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),factor,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,b,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=filteredNextIsLast.booleanValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=filteredNextIsLast;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=filteredNextIsLast||filteredNextIsLast;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),error,factor,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),error,factor,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(out,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=(filteredNextIsLast!=null)?filteredNextIsLast.booleanValue():false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244doublefirstTime=filteredNextIsLast.booleanValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepSize,y,scale,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stageSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),factor,error,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(y,getOrder(),factor,error,x,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,hNew,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,y,scalAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stageSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,b,scale[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,c,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,b,scale[0],yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,error,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,error,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,error,y,yDotK[0],yTmp,scale[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yDotK[1],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y0,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,factor,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,output,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stepSize,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=filteredNextIsLast&&filteredNextIsLast;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=filteredNextIsLast||filteredNextIsLast+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stageStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stageStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stageStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=1;y<a.length;++i){if(!filteredNextT.contains(y[0])){firstTime=true;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inti=0;i<a.length;++i){if(!filteredNextT.contains(y[0])){firstTime=true;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stepSize,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,error,factor,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,error,factor,y,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(y0,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(y,getOrder(),scale,error,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,errors,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,errors,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,error,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,error,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yDotTmp,yDotK[0]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT,y,yDotK[0]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,factor,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,factor,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,factor,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,factor,y,yDotK[0],yTmp,scale[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=filteredNextIsLastinstanceofRungeKuttaStepInterpolator;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=1;y<scale.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<filteredNextT.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<y.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(min,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(min,getOrder(),scale,stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(min,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,steps,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepEnd,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),factor,scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),factor,error,y,yDotK[0],yTmp,scale[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(firstTime,getOrder(),scale,filteredNextIsLast,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),filteredNextT,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,factor,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,factor,y,t,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(firstTime,getOrder(),scale,x0,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,stepStart,y,vecAbsoluteTolerance[0],yDotK[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,errors,y,vecAbsoluteTolerance,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextIsLast=true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,errors,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,y,steps,vecAbsoluteTolerance,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,scalAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yDotTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yDotK[1],yTmp);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT,y,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(y,getOrder(),scale,error,factor,x,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(y0,getOrder(),scale,error,x,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,x,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stepSize,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepSize,y,vecAbsoluteTolerance[0],yDotK[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(forward,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,firstTime,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),error,factor,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),error,factor,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),error,factor,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),error,factor,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),error,factor,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),error,factor,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=1;y<y.length;++i){if(!filteredNextT.equals(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=1;y<y.length;++i){if(!filteredNextT.equals(y[1])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<y.length;++i){if(!filteredNextT.equals(y[1])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stage,error,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stage,error,y,yDotK[0],yTmp,scale[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stage,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=1;y<a.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inti=0;i<a.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<a.length;++i){if(!filteredNextT.contains(y[1])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,y,stepSize,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,stepSize,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stage,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(hNew,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(nextIsLast,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),factor,error,scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,firstTime,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,firstTime,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(firstTime,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(min,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(min,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextIsLast=null;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),error,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<scale.length;++i){if(!filteredNextT.equals(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stage,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,errors,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,factor,y,scaleAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),y,factor,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x0,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(firstTime,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=filteredNextIsLast||filteredNextIsLast+scale.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yTmp,scale[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<a.length;++i){if(!filteredNextT.contains(y[1])){firstTime=true;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244inty=0;y<a.length;++i){if(!filteredNextT.contains(y[0])){firstTime=true;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=error;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=filteredNextIsLast||filteredPreviousIsLast;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,vecAbsoluteTolerance,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),stage,vecAbsoluteTolerance,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,factor,x,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,factor,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),error,factor,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),error,factor,y,scaleAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yDotK[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,factor,y,y1,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,firstIsLast,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(out,getOrder(),scale,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(out,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(out,getOrder(),scale,stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,firstTime,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,b,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stageStart,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stageSize,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,steps,y,vecRelativeTolerance,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,errors,y,vecAbsoluteTolerance,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,factor,y,vecAbsoluteTolerance,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(value,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,scale,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,vecAbsoluteTolerance,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stageSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x0,getOrder(),scale,stageSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(min,getOrder(),scale,stageStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x0,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),error,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepSize,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,x,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,firstTime,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),error,factor,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,x,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stageSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,steps,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,0,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stage,x,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,scale,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,scale,y,vecAbsoluteTolerance,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yTmp,scale[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yTmp,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,y,vecRelativeTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[2]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),error,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),error,factor,y,vecAbsoluteTolerance,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),error,factor,x,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244inty=0;y<a.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stage,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),stage,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,error,y,vecRelativeTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,firstTime,y,vecAbsoluteTolerance[0],yDotK[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,error,y,vecRelativeTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),error,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yTmp,yDotK[0]);firstTime=true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),y,scale,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=(filteredNextIsLast!=null)?filteredNextIsLast.booleanValue():true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244inty=0;y<scale.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yTmp[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stageStart,y,vecAbsoluteTolerance[0],yTmp[1],yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,error,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,steps,y,vecAbsoluteTolerance,b,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,stepSize,y,vecAbsoluteTolerance,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,b[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stage,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(next,getOrder(),scale,stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),factor,error,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),factor,error,y,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),factor,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),factor,error,y,yDotK[0],yTmp,scale[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,stepStart,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,t,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotK[1],t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,stepSize,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(firstTime,getOrder(),scale,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,stepSize,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,t,yDotK[0],yTmp,yDotK[1]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),factor,error,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),factor,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,error,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yDotK[0],yTmp,0]);firstTime=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),scale,error,y,scalAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),filteredNextT,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),steps,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepSize,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,steps,y,vecAbsoluteTolerance,b[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),scale,stepSize,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stage,error,y,v1,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stage,error,y,b[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x0,getOrder(),scale,stage,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244y,yTmp,yDotK[1]);firstTime=true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stage,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(x,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepSize,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,stepSize,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,stepSize,filteredNextT,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,stage,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(output,getOrder(),error,factor,y,t,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepSize,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,b[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<mainSetDimension;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244for(inty=0;y<steps.length;++i){if(!filteredNextT.contains(y[0])){firstTime=false;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stage,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(output,getOrder(),scale,stage,stepSize,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(x,getOrder(),factor,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextIsLast=false,firstTime=true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotK[1],t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),stepSize,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(y0,getOrder(),scale,error,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=filteredNextIsLast.booleanValue()||filteredNextIsLast.booleanValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244booleanfirstTime=this.filteredNextIsLast.booleanValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),stepStart,y,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(t,getOrder(),factor,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244filteredNextT=initializeStep(t,getOrder(),scale,stage,stepStart,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,error,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java244hNew=initializeStep(nextT,getOrder(),factor,error,y,yDotK[0],yTmp,scale[1]);
