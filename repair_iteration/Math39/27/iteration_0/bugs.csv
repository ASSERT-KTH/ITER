bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
53	[BUG] [BUGGY] hNew = initializeStep(forward, getOrder(), scale,  stepStart, y, yDotK[0], yTmp, yDotK[1]); [FE] AssertionError [CONTEXT] final double[] scale = new double[mainSetDimension]; if (vecAbsoluteTolerance == null) { for (int i = 0; i < scale.length; ++i) { scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); } } else { for (int i = 0; i < scale.length; ++i) { scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]); } } [BUGGY] hNew = initializeStep(forward, getOrder(), scale,        stepStart, y, yDotK[0], yTmp, yDotK[1]); [BUGGY] stepStart, y, yDotK[0], yTmp, yDotK[1]); firstTime = false; } stepSize = hNew;  for (int k = 1; k < stages; ++k) { for (int j = 0; j < y0.length; ++j) { [CLASS] EmbeddedRungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] void  ExpandableStatefulODE equations final double t [VARIABLES] ExpandableStatefulODE equations boolean filteredNextIsLast firstTime forward fsal nextIsLast double[] b c scale vecAbsoluteTolerance vecRelativeTolerance y y0 yDotTmp yTmp double error exp factor filteredNextT hNew maxGrowth maxStep minReduction minStep nextT safety scalAbsoluteTolerance scalRelativeTolerance scaledH sum t double[][] a yDotK RungeKuttaStepInterpolator interpolator prototype int i j k l stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	244	245	1	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double[] scale = new double[mainSetDimension]; if (vecAbsoluteTolerance == null) { for (int i = 0; i < scale.length; ++i) { scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); } } else { for (int i = 0; i < scale.length; ++i) { scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]); } } [BUGGY] [BUGGY] hNew = initializeStep(forward, getOrder(), scale,        stepStart, y, yDotK[0], yTmp, yDotK[1]); stepStart, y, yDotK[0], yTmp, yDotK[1]); firstTime = false; } stepSize = hNew;  for (int k = 1; k < stages; ++k) { for (int j = 0; j < y0.length; ++j) { [CLASS] EmbeddedRungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] void  ExpandableStatefulODE equations final double t [VARIABLES] ExpandableStatefulODE equations boolean filteredNextIsLast firstTime forward fsal nextIsLast double[] b c scale vecAbsoluteTolerance vecRelativeTolerance y y0 yDotTmp yTmp double error exp factor filteredNextT hNew maxGrowth maxStep minReduction minStep nextT safety scalAbsoluteTolerance scalRelativeTolerance scaledH sum t double[][] a yDotK RungeKuttaStepInterpolator interpolator prototype int i j k l stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	244	245	1	add	
