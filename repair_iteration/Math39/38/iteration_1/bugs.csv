bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.fsal=  fsal  ||  fsal;  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]  this.fsal=  fsal  ||  fsal;  [BUGGY]  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal=  fsal  ||  fsal;	this.fsal=  fsal;  	non-compiled	[CE]  ';'  expected	75	None	replace
2	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    [BUGGY]  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	  	this.fsal=  fsal;  	non-compiled	[CE]  ';'  expected	75	None	replace
3	[BUG]  [BUGGY]    if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	    if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }		non-compiled	[CE]  ';'  expected	76	None	add
4	[BUG]  [BUGGY]    if(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    if(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	    if(fsal)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  ';'  expected	76	None	add
5	[BUG]  [BUGGY]    if(fsal)  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]        AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    if(fsal)  {  setSafety(1.0);  }  [BUGGY]  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	    if(fsal)  {  setSafety(1.0);  }		non-compiled	[CE]  ';'  expected	76	None	add
6	[BUG]  [BUGGY]    if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	    if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1.0);  }		non-compiled	[CE]  ';'  expected	76	None	add
7	[BUG]  [BUGGY]    if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(0.0);  }  [CE]  ';'  expected  [FE]            AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(0.0);  }  [BUGGY]  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	    if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(0.0);  }		non-compiled	[CE]  ';'  expected	76	None	add
8	[BUG]  [BUGGY]    fsal  =  fsal;  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    fsal  =  fsal;  [BUGGY]  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	    fsal  =  fsal;		non-compiled	[CE]  ';'  expected	76	None	add
9	[BUG]  [BUGGY]    if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	    if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }		non-compiled	[CE]  ';'  expected	76	None	add
10	[BUG]  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);  [BUGGY]  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);	this.fsal=  fsal;  	non-compiled	[CE]  ';'  expected	75	None	replace
11	[BUG]  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);  [BUGGY]  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);	this.fsal=  fsal;  	non-compiled	[CE]  ';'  expected	75	None	replace
12	[BUG]  [BUGGY]    if(fsal)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [CE]  ';'  expected  [FE]    AssertionError  [CONTEXT]  protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]    if(fsal)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }  [BUGGY]  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	    if(fsal)  {  if(prototype!=  null)  {  setMaxGrowth(1);  }		non-compiled	[CE]  ';'  expected	76	None	add
