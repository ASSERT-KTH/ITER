bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
2	[BUG]  [BUGGY]  setSafety(1.0);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  setSafety(1.0);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	setSafety(1.0);	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
3	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
4	[BUG]  [BUGGY]  if(fsal)  {  fsal  =  fsal;  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  fsal  =  fsal;  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  fsal  =  fsal;  }	      fsal    =    fsal;    	non-compiled	[CE]  ';'  expected	8	None	replace
5	[BUG]  [BUGGY]  if(fsal)  {  fsal  =  fsal;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  fsal  =  fsal;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  fsal  =  fsal;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      fsal    =    fsal;    	non-compiled	[CE]  ';'  expected	8	None	replace
6	[BUG]  [BUGGY]  if(fsal)  {  fsal  =  fsal;  }  else  {  fsal  =  fsal;  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  fsal  =  fsal;  }  else  {  fsal  =  fsal;  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  fsal  =  fsal;  }  else  {  fsal  =  fsal;  }	      fsal    =    fsal;    	non-compiled	[CE]  ';'  expected	8	None	replace
7	[BUG]  [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  if(prototype  ==  null)  {  setMaxGrowth(1);  }	      if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
8	[BUG]  [BUGGY]  if(fsal)  {  if(c  ==  null)  {  setMaxGrowth(1);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  if(c  ==  null)  {  setMaxGrowth(1);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  if(c  ==  null)  {  setMaxGrowth(1);  }	      if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
9	[BUG]  [BUGGY]  if(fsal)  {  if(c!=  null)  {  setMaxGrowth(1);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  if(c!=  null)  {  setMaxGrowth(1);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  if(c!=  null)  {  setMaxGrowth(1);  }	      if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
10	[BUG]  [BUGGY]  safety(fsal)  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safety(fsal)  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safety(fsal)  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	5	None	replace
11	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  Settings  settings  =  Settings.getInstance();  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	Settings  settings  =  Settings.getInstance();	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	5	None	replace
12	[BUG]  [BUGGY]  While(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  While(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	While(fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
13	[BUG]  [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely())  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
14	[BUG]  [BUGGY]  While(fsal  &&  c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  While(fsal  &&  c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	While(fsal  &&  c!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
15	[BUG]  [BUGGY]  While(fsal)  {  throw  new  IllegalArgumentException( " ".equals(c));  }  [CE]  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  While(fsal)  {  throw  new  IllegalArgumentException( " ".equals(c));  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	While(fsal)  {  throw  new  IllegalArgumentException( " ".equals(c));  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
16	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(0.0);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(0.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(1.0);  }  else  {  setSafety(0.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(0.0);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
17	[BUG]  [BUGGY]  safety(fsal)  {  setSafety(1.0);  }  else  {  setSafety(0.0);  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safety(fsal)  {  setSafety(1.0);  }  else  {  setSafety(0.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safety(fsal)  {  setSafety(1.0);  }  else  {  setSafety(0.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(0.0);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
18	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0);  }  else  {  setSafety(0.0);  }  [CE]  ';'  expected  [FE]                    AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(0);  }  else  {  setSafety(0.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(0);  }  else  {  setSafety(0.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(0.0);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
19	[BUG]  [BUGGY]  this.fsal  =  fsal  &&  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal  &&  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  &&  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	11	None	replace
20	[BUG]  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  {  b[1]  ||  c  ==  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  {  b[1]  ||  c  ==  scalAbsoluteTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  {  b[1]  ||  c  ==  scalAbsoluteTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	11	None	replace
21	[BUG]  [BUGGY]  this.fsal=  fsal  ||  c;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal=  fsal  ||  c;  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal=  fsal  ||  c;	  this.fsal=    fsal    ||    fsal;    	non-compiled	[CE]  ';'  expected	1	None	replace
22	[BUG]  [BUGGY]  this.fsal=  fsal  ||  a;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal=  fsal  ||  a;  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal=  fsal  ||  a;	  this.fsal=    fsal    ||    fsal;    	non-compiled	[CE]  ';'  expected	1	None	replace
23	[BUG]  [BUGGY]  this.fsal=  fsal  ||  b;  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal=  fsal  ||  b;  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal=  fsal  ||  b;	  this.fsal=    fsal    ||    fsal;    	non-compiled	[CE]  ';'  expected	1	None	replace
24	[BUG]  [BUGGY]  this.fsal  =  fsal  &&  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal  &&  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  &&  c  ==  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	10	None	replace
25	[BUG]  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  {  b[1]  ||  c  ==  scalRelativeTolerance);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  {  b[1]  ||  c  ==  scalRelativeTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  {  b[1]  ||  c  ==  scalRelativeTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	10	None	replace
26	[BUG]  [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1);  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  if(prototype  ==  null)  {  setMinReduction(1);  }	      if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
27	[BUG]  [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  if(prototype!=  null)  {  setMinReduction(1.0);  }	      if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
28	[BUG]  [BUGGY]  if(fsal)  {  if(c  ==  null)  {  setMinReduction(1.0);  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  if(c  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  if(c  ==  null)  {  setMinReduction(1.0);  }	      if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
29	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
30	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0.0d);  }  else  {  setSafety(1.0d);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(0.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(0.0d);  }  else  {  setSafety(1.0d);  }	      if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
31	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0.0,  c);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(0.0,  c);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(0.0,  c);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
32	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(0);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
33	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1);  }  else  {  setSafety(1);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(1);  }  else  {  setSafety(1);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(1);  }  else  {  setSafety(1);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
34	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
35	[BUG]  [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMaxGrowth(2);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  if(prototype!=  null)  {  setMaxGrowth(2);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  if(prototype!=  null)  {  setMaxGrowth(2);  }	      if(fsal)    {    if(prototype!=    null)    {    setMaxGrowth(1);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
36	[BUG]  [BUGGY]  this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  b[1]  ||  c  ==  scalRelativeTolerance);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  b[1]  ||  c  ==  scalRelativeTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  b[1]  ||  c  ==  scalRelativeTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	10	None	replace
37	[BUG]  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b[1]  ||  c  ==  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b[1]  ||  c  ==  scalAbsoluteTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b[1]  ||  c  ==  scalAbsoluteTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	10	None	replace
38	[BUG]  [BUGGY]  this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	10	None	replace
39	[BUG]  [BUGGY]  fsal  =  c;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  fsal  =  c;  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	fsal  =  c;	      fsal    =    fsal;    	non-compiled	[CE]  ';'  expected	8	None	replace
40	[BUG]  [BUGGY]  if(fsal)  {  fsal  =  fsal;  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  fsal  =  fsal;  }  else  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  fsal  =  fsal;  }  else  {  setSafety(1.0);  }	      fsal    =    fsal;    	non-compiled	[CE]  ';'  expected	8	None	replace
41	[BUG]  [BUGGY]  this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  b[1]  ||  c  ==  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  b[1]  ||  c  ==  scalAbsoluteTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  b[1]  ||  c  ==  scalAbsoluteTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	11	None	replace
42	[BUG]  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  <  =  b[1]  ||  c  ==  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  <  =  b[1]  ||  c  ==  scalAbsoluteTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  <  =  b[1]  ||  c  ==  scalAbsoluteTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalAbsoluteTolerance);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal?  fsal  :  a[0]  ||  c  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	11	None	replace
44	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  if(fsal)  {  setSafety(0.0);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  if(fsal)  {  setSafety(0.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(1.0);  }  else  if(fsal)  {  setSafety(0.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(0.0);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
45	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1);  }  else  {  setSafety(0.0);  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(1);  }  else  {  setSafety(0.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(1);  }  else  {  setSafety(0.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(0.0);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
46	[BUG]  [BUGGY]  safeThan  <  double>fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safeThan  <  double>fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safeThan  <  double>fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
47	[BUG]  [BUGGY]  safeThan  <  Double>fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safeThan  <  Double>fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safeThan  <  Double>fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
48	[BUG]  [BUGGY]  safely()  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely()  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely()  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
49	[BUG]  [BUGGY]  safely())  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely())  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely())  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	5	None	replace
50	[BUG]  [BUGGY]  safely();  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely();  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely();	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	5	None	replace
51	[BUG]  [BUGGY]  this.fsal=  fsal  &&  fsal;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal=  fsal  &&  fsal;  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal=  fsal  &&  fsal;	  this.fsal=    fsal    ||    fsal;    	non-compiled	[CE]  ';'  expected	1	None	replace
52	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0.0,  maxStep);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  safely(fsal)  {  setSafety(0.0,  maxStep);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	safely(fsal)  {  setSafety(0.0,  maxStep);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
53	[BUG]  [BUGGY]  setSafety(0.0);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  setSafety(0.0);  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	setSafety(0.0);	      if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
54	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  setSafety(1.0d);  }	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	5	None	replace
55	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  [Delete]  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	[Delete]	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
57	[BUG]  [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
58	[BUG]  [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	try  ==  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
59	[BUG]  [BUGGY]  if(fsal)  {  if(a  ==  null)  {  setMinReduction(1.0);  }  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  if(a  ==  null)  {  setMinReduction(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  if(a  ==  null)  {  setMinReduction(1.0);  }	      if(fsal)    {    if(prototype    ==    null)    {    setMinReduction(1.0);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
60	[BUG]  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  b  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  b  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  ||  c  ==  a[0]  ||  b  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalAbsoluteTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	11	None	replace
61	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(0.0d);  }  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(0.0d);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(0.0d);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(0.0);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
62	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(0.0);  }  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(0.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(0.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(0.0);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
63	[BUG]  [BUGGY]  if(fsal)  {  for(RungeKuttaStepInterpolator  prototype  :  a.length)  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  for(RungeKuttaStepInterpolator  prototype  :  a.length)  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  for(RungeKuttaStepInterpolator  prototype  :  a.length)  {  setSafety(1.0);  }	      	non-compiled	[CE]  ';'  expected	2	None	replace
64	[BUG]  [BUGGY]  if(fsal)  {  for(RungeKuttaStepInterpolator  prototype  :  a.values())  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  for(RungeKuttaStepInterpolator  prototype  :  a.values())  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  for(RungeKuttaStepInterpolator  prototype  :  a.values())  {  setSafety(1.0);  }	      	non-compiled	[CE]  ';'  expected	2	None	replace
65	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0,  c);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  setSafety(0.0,  c);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  setSafety(0.0,  c);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
66	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
67	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(1.0);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
68	[BUG]  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  <  =  b[1]  ||  c  ==  scalRelativeTolerance);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  <  =  b[1]  ||  c  ==  scalRelativeTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  ||  c  ==  a[0]  ||  c  ==  a[1]  ||  b  <  =  b[1]  ||  c  ==  scalRelativeTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalRelativeTolerance);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
69	[BUG]  [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  b  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);    [BUGGY]  this.fsal  =  fsal  ||  c  ==  a[0]  ||  b  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	117	117	1	replace	this.fsal  =  fsal  ||  c  ==  a[0]  ||  b  ==  a[1]  ||  c  ==  b[1]  ||  c  ==  scalRelativeTolerance);	  this.fsal    =    fsal    ||    c    ==    a[0]    ||    c    ==    a[1]    ||    c    ==    b[1]    ||    c    ==    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	10	None	replace
