projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scalAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=filteredNextIsLast.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.getScaleDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,yDotK[0],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][scale.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<MainSetDimension.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<size;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(t,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<countDimension.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,yDotK[0],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yMask);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yCase);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.getScale(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.scale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236shedNextIsLast=true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){for(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){For(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vecAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[stepStart];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*MathMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalRelativeTolerance=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){timeout
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scalAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension][scale.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][scala.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vecAbsoluteTolerance][scale.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,scale.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=0;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.mainSetDimension;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.getScaleDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.scaleDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){for(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){For(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236timeout
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){for(inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){For(inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){for(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){For(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){for(inti=0;i<MainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,stepStart,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=filteredNextT.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][vecAbsoluteTolerance.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance.doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=getScaleRelativeTolerance(mainSetDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){for(inti=0;i<vAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[scaleAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scaleAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=varAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.mainSetDimension.getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){if(i<yDotK.length){for(inti=0;i<yDotK.length;++i){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yMath);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yMean);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){Integeri=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){for(inti=1;i<scale.length);++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=null;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=v.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteToleranceH=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,yDotK[0],vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.toScaleDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){for(inti=0;i<YDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance.doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.evaluate(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=t.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<map.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scaledH);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<count;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][0];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,vecAbsoluteTolerance,yDotK[0]);
