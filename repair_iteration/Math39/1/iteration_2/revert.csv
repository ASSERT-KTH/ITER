projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scalAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=filteredNextIsLast.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.getScaleDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,yDotK[0],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][scale.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<MainSetDimension.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<size;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(t,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<countDimension.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,yDotK[0],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yMask);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yCase);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.getScale(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.scale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236shedNextIsLast=true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){for(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){For(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vecAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[stepStart];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*MathMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalRelativeTolerance=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){timeout
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scalAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension][scale.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][scala.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vecAbsoluteTolerance][scale.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,scale.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=0;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.mainSetDimension;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.getScaleDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.scaleDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){for(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){For(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236timeout
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){for(inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){For(inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){for(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){For(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){for(inti=0;i<MainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,stepStart,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=filteredNextT.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][vecAbsoluteTolerance.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance.doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=getScaleRelativeTolerance(mainSetDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){for(inti=0;i<vAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[scaleAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scaleAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=varAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.mainSetDimension.getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){if(i<yDotK.length){for(inti=0;i<yDotK.length;++i){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yMath);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yMean);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension;++i){Integeri=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scale.length;++i){for(inti=1;i<scale.length);++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=null;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=v.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteToleranceH=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,yDotK[0],vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.toScaleDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){for(inti=0;i<YDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance.doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.evaluate(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=t.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<map.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scaledH);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<count;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][0];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,vecAbsoluteTolerance,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scaledDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scaledWidth);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scaledH[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,y[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){inti=0;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){inty=0;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=scale.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=t.doubleValue()*scale.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension][0];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vecAbsoluteTolerance][0];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension][1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[stepStart][0];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale=Math.abs(scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.toScaleDimension()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.toScaleDimension(mainSetDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.toFullDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yTmp[0],yMean);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[1],yMean);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMean[0],yDotTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scalRelativeTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<mainSetDimension.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[1],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236shedNextIsLast=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236sheddingNextIsLast=false;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236shedNextIsLast=null;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236shedNextIsLast-=true;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecRelativeTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(scale,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(scale,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){if(i<yDotK.length){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){if(i<scalAbsoluteTolerance[i]){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yDotK.length;++i){if(i<scalAbsoluteTolerance.length){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteToleranceH=vecAbsoluteTolerance.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteToleranceH=vecAbsoluteTolerance.doubleValue()*scale.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleH=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.getHeight();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.getRangeDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.mainSetDimension+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.mainSetDimension+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.maxGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,scale,scalRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,scale,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=0;i<scalAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[scaleAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236int[][]scale=newint[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,getOrder(),scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,getOrder(),t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale,scalRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,scalRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,b);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){timeout
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<MainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yTmp[0],yMask);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[1],yMask);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,stepStart,yDotK[0],yMask);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scala.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,stepStart,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,y,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,error,y,scale,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(t,scale,vecRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(t,scale,vecAbsoluteTolerance,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(scale,t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(t,scale,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){For(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){For(inti=0;i<sourceDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){For(inti=0;i<hasDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){For(inti=0;i<number;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vAbsoluteTolerance,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vAbsoluteTolerance+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=newdouble[mainSetDimension][v.doubleValue()];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=v.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[vAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236int[][]scale=newint[vAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,yDotK[1],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance,yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yTmp[0],yMath);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,stepStart,yDotK[0],yMath);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[1],yMath);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yTmp[0],yCase);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yCase,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[1],yCase);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=varAbsoluteTolerance.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.toArray(newdouble[mainSetDimension]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.toArray();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale.doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scala.doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance.doubleValue()+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vAbsoluteTolerance.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.mainSetDimension.getHeight();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.mainSetDimension.getScale()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){for(inti=1;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){inti=1;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){For(inti=1;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){if(i<yDotK.length){for(inti=1;i<yDotK.length;++i){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){if(i<yDotK.length){for(inti=1;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,stepStart,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scaleAbsoluteTolerance=computeDerivatives(t,y,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.doubleValue()*scale.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[stepStart];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236int[][]scale=newint[stepStart];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){inti=0;i<sourceDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){inti=0;i<majorSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<size;++i){inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[1],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,stepStart,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yTmp,1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<scale.length;++i){for(inti=2;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<scale.length;++i){For(inti=2;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<scale.length;++i){for(inti=2;i>=scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<scale.length;++i){inti=2;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scalRelativeTolerance=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalRelativeTolerance=newdouble[vecAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalRelativeTolerance=newdouble[size];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.doubleValue()*scale.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.getScale(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.getScale(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yTmp[0],yDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,stepStart,yDotK[0],yDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[1],yDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDimension,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=0;i<scalRelativeTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[vecAbsoluteTolerance][scale.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension][scale.length-1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension][scala.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,vecAbsoluteTolerance,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=filteredNextT.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,vecAbsoluteTolerance,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,vecAbsoluteTolerance,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,stepStart,scale[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,yTmp,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,stepStart,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,scale.length-1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vecAbsoluteTolerance.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,scale.length+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scaleAbsoluteTolerance=Math.abs(scale,vecAbsoluteTolerance.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[vecAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[scala.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<MainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scaladH,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scala,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.getScaleDimension()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.mainSetDimension;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){finalinti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){(inti=0;i<sourceDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){(inti=0;i<hasDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.toArray();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.clone();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=vecAbsoluteTolerance.getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][size];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=scale;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=newDouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=firstTime;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale,vecRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale,vecAbsoluteTolerance,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension][vecAbsoluteTolerance.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236int[][]scale=newint[vecAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<scale.length;++i){timeout
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){for(inti=1;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){For(inti=1;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){for(inti=1;i<mainSetDimension);++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){for(inti=1;i<MainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){inti=1;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.scaleDimension(mainSetDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.scaleDimension()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][scala.length+1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][scala.length-1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vecAbsoluteTolerance][scala.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]+MathMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,yDotK[1],vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance,vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,stepStart,yDotK[0],vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*scale.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=scalAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=b[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance*scale.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vecAbsoluteTolerance*scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vecRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,firstTime-1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,firstTime+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){finalinti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,t+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scalAbsoluteTolerance;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance.doubleValue()+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(scale.doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance.doubleValue()*scale.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance.doubleValue()/scale.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,vecAbsoluteTolerance,scale[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,vecAbsoluteTolerance,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,vecAbsoluteTolerance,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,mainSetDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,stepStart,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yTmp,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=getScaleRelativeTolerance(mainSetDimension,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=getScaleRelativeTolerance(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=getScaleRelativeTolerance(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=getScaleRelativeTolerance(variables);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vecAbsoluteTolerance.length;++i){for(inti=1;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vecAbsoluteTolerance.length;++i){For(inti=1;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vecAbsoluteTolerance.length;++i){inti=1;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vecAbsoluteTolerance.length;++i){for(inti=1;i<vAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vecAbsoluteTolerance.length;++i){for(inti=1;i<vecAbsoluteTolerance.length);++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.evaluate(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.evaluate(t,scale,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecRelativeTolerance.evaluate(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),scale,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),scale,secondTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getOrder(),scale,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){Integeri=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){Integeri=0;i<sourceDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=0;i<scale.length;++i){Integeri=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){Integeri=0;i<a.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){(inti=0;i<a.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){(inti=0;i<b.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){(inti=0;i<args.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.mainSetDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<absoluteTolerance;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMean[0],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMean[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,vTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scalAbsoluteTolerance.doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMask[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMask[0],yDotTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMask[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=t.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yTmp.length;++i){if(i<yDotK.length){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<vecAbsoluteTolerance.length;++i){if(i<yDotK.length){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scalAbsoluteTolerance.length;++i){if(i<yDotK.length){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(mainSetDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,vecRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,y0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,y,yDotK[0],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance,yDotK[1],yAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance,yDotK[0],vTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,y,yDotK[0],vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance*scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(scaleAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(scale,yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,y0,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getSetDimension());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=calculateScaleAbsolute(t,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDimension,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMath[0],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMath[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,yAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<yTmp.length;++i){(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){(inti=0;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=t;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,getOrder(),vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,getSetDimension());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[scalaAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale[0],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scale=newdouble[mainSetDimension][scale.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.toBooleanScaleDimension();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,vecAbsoluteTolerance,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){For(inti=0;i<yDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){For(inti=0;i<vecAbsoluteTolerance;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteToleranceH=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236finaldouble[][]scale=newdouble[mainSetDimension][2];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,vRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance.doubleValue()+scale.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=Math.abs(vecAbsoluteTolerance.doubleValue()+2);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*MathMath.abs(y[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(scale,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=t.doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.evaluate(scale,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.toArray(newdouble[vecAbsoluteTolerance.size()]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<count;++i){inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vecAbsoluteTolerance][1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalRelativeTolerance=newdouble[2];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){For(inti=0;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<size;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<scaleAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scala);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scaleAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance*scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,yTmp,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,yTmp[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yCase[0],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vecAbsoluteTolerance.length;++i){(inti=1;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){Integeri=0;i<args.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){Integeri=0;i<i;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yTmp[0],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotK[0],yTmp,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236inti=1;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[0];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){ArrayIndexOutOfBoundsExceptione=newArrayIndexOutOfBoundsException(mainSetDimension);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){(inti=1;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=0;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,y,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,vecRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=a.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.values();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][vecRelativeTolerance.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[mainSetDimension][vecAbsoluteTolerance.length+1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleRelativeTolerance=calculateScaleAbsoluteTolerance(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.toDotK();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vecAbsoluteTolerance*t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236vecAbsoluteTolerance=Math.abs(scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(scale,vecAbsoluteTolerance.doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale=Math.abs(scale,vecAbsoluteTolerance.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=vecAbsoluteTolerance.doubleValue()+scale.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsolute(t,vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance,yDotTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236inti=0;i<scalAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,vecAbsoluteTolerance,yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(t,scale,vecAbsoluteTolerance,b);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236doublescalRelativeTolerance=getScaleRelativeTolerance(mainSetDimension,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateAbsolute(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsolute(scale,t,vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getSetDimension(),scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scalRelativeTolerance;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236inti=0;i<scale.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){ArrayIndexOutOfBoundsExceptioni=1;i<yDotK.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){for(inti=1;i<yDotK.length);++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236Double[][]scaledH=vecAbsoluteTolerance.toDotK();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=vecAbsoluteTolerance.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,vAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,vecAbsoluteTolerance,scalRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,vecAbsoluteTolerance,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*Math.sqrt(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMath,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateAbsoluteTolerance(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]vecAbsoluteTolerance=vecAbsoluteTolerance.toExternalForm();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[vAbsoluteTolerance][0];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=newdouble[scaleAbsoluteTolerance][0];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance.doubleValue()*scale.length);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaledH=newdouble[mainSetDimension].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]+error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236scalAbsoluteTolerance=Math.abs(vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,vecAbsoluteTolerance,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<vecAbsoluteTolerance.length;++i){for(inti=2;i<vecAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(t,a);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateAbsoluteTolerance(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<mainSetDimension;++i){Integeri=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<scalAbsoluteTolerance.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){if(i<scalAbsoluteTolerance.length){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=1;i<yDotK.length;++i){if(i<vecAbsoluteTolerance.length){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,getBase());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<count;++i){(inti=0;i<mainSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236filteredNextIsLast=error;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vAbsoluteTolerance,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vAbsoluteTolerance,vTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yMask,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateAbsoluteTolerance(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scale=calculateScaleAbsoluteTolerance(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateAbsoluteTolerance(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateScaleAbsoluteTolerance(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<baseSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scale.length;++i){For(inti=0;i<majorSetDimension;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=calculateAbsoluteTolerance(scale,getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=2;i<scale.length;++i){for(inti=2;i<scale.length);++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236shedNextIsLast=fsal;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236For(inti=0;i<MainSetDimension.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236for(inti=0;i<scal.length;++i){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]a=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scaleAbsoluteTolerance=computeDerivatives(t,y,yDotTmp,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,y,scale,vecAbsoluteTolerance,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java236double[][]scalAbsoluteTolerance=computeDerivatives(t,scale,yDotTmp,yDotK[0]);
