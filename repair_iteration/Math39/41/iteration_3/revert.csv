projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(RungeKuttaStepInterpolatorprototype:c){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(RungeKuttaStepInterpolatorprototype:c.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=minGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(RungeKuttaStepInterpolatorprototype:c){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=c;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=a;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=c;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=fsal;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:c){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){for(RungeKuttaStepInterpolatorprototype:c){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:c){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(0.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=a;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth-minStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=scalAbsoluteTolerance;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(minStep)][Math.abs(maxStep)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(minStep)][Math.abs(scalAbsoluteTolerance)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth+10.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth-minStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth+minStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=minGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=minGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b*1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getOrder()+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getScale());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorc:prototype.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:c.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=b;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=a;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth+10.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){for(RungeKuttaStepInterpolatorprototype:c){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b==null){for(RungeKuttaStepInterpolatorprototype:c){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorc:prototype.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorc:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:c){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getOrder()+10.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getMaxGrowth());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth+maxGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=B;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-minStep);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorc:c.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c+minStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=maxGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=c+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth+minStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.prototype=prototype;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){for(RungeKuttaStepInterpolatorprototype:b){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null&&c.length>0){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=minGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=gsal;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(2.0/getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth-10.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth/getOrder();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth-10.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){for(RungeKuttaStepInterpolatorprototype:c.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:c.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-10.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null){for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null&&c.getRuns()!=null){for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth-maxStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minStep-maxGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth/minStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=minGrowth+maxStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth+scalAbsoluteTolerance;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth+minReduction;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getOrder()+2.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getOrder()/2.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getOrder()*10.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=b+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=c+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=a+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c+3;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=maxGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(prototype!=null){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=maxGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:prototype){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:prototype.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:prototype.getRunnables()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:prototype.getBindings()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:b){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth/10.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth/1.0.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth-2.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getScale()+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getScale()*getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.prototype=prototypeinstanceofRungeKuttaStepInterpolator?(RungeKuttaStepInterpolator)prototype:null;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.prototype=prototypeinstanceofRungeKuttaStepInterpolator?prototype:(RungeKuttaStepInterpolator)prototype;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getOrder()*1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:prototype.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RangeKuttaStepInterpolatorb:prototype.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RhineKuttaStepInterpolatorb:prototype.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=minStep/getOrder();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth/getMaxGrowth();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth/getOrder()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:this.minGrowth){this.minGrowth=minGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:b){this.minGrowth=minGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth+maxStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minStep+maxGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth/minStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c+maxStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=minStep+c;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-minStep,maxStep);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-exp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/minStep);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth+scalAbsoluteTolerance;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth/maxGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth+maxGrowth-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/10.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-2.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=scalRelativeTolerance;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(RungeKuttaStepInterpolatorprototype:b){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:b){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorc:prototype){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth/1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(2.0/getOrder()+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(2.0/getScale());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RangeKuttaStepInterpolatorc:prototype.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth+1.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth+10.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth+2.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(RungeKuttaStepInterpolatorprototype:b.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b<<1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b*2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b/1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RangeKuttaStepInterpolatorc:prototype.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getMaxGrowth()+10.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getMinReduction());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(RungeKuttaStepInterpolatorprototype:b){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:prototype.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth-10.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth/10.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth-2.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(2.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=fsal;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:prototype.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(maxStep)][Math.abs(minStep)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(minStep),maxStep[Math.abs(maxStep)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(minimum)][Math.abs(maxStep)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth+1.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth+2.0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=minStep-maxGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth/minStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth-minReduction;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:this.c){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:this.fsal){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RangeKuttaStepInterpolatorb:prototype.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120For(RungeKuttaStepInterpolatorb:prototype.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(maxStep)][Math.abs(scalAbsoluteTolerance)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(minStep)][Math.abs(scalRelativeTolerance)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(minStep),maxStep[Math.abs(scalAbsoluteTolerance)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=newdouble[Math.min(minStep,maxStep),scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=newdouble[Math.log(minStep,maxStep),scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=newdouble[Math.min(minStep,maxStep),scalRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorc:prototype.getOrder()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:fsal){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:a){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b==null){for(RungeKuttaStepInterpolatorprototype:b){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-minStep+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth-2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(MaxStep)][Math.abs(scalAbsoluteTolerance)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c==null){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=maxGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0/getMinGrowth());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorc:b.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=Bb;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth*getOrder();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.1/getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-1.0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=b.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth-minStep+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=newdouble[Math.log(minStep)][Math.log(maxStep)][Math.log(minStep)][Math.log(maxStep)][Math.log(minStep)][Math.log
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=newdouble[Math.log(minStep)][Math.log(maxStep)][Math.log(minStep)][Math.log(maxStep)][Math.log(minStep)][Ma
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=newdouble[Math.log(minStep)][Math.log(maxStep)][Math.log(minStep)][Math.log(maxStep)][Math.log(minStep)][Mask
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:c){this.prototype=prototype;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth+maxStep;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:a){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RangeKuttaStepInterpolatorb:prototype){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth-minStep+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth+minGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth*maxGrowth;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c*1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:c.getBounds()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:c.getBits()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c+c;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.c=c*2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null){for(RungeKuttaStepInterpolatorprototype:b){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b==null){for(RungeKuttaStepInterpolatorprototype:c){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=b+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorc:prototype){this.minGrowth=minGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorc:prototype){this.minGrowth=maxGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.prototype=PROTOTYPE;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.prototype=proto;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.prototype=a;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RangeKuttaStepInterpolatorb:c.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(0.0/getOrder());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorprototype:a){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(minStep)][Math.abs(maxStep)]/;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=maxGrowth+scalAbsoluteTolerance;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null&&c.length>0){for(RungeKuttaStepInterpolatorprototype:c){this.minGrowth=maxGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RicheKuttaStepInterpolatorb:c.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null&&c.getRuns()!=null){for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(c!=null&&c.getRuns()==null){for(RungeKuttaStepInterpolatorprototype:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=b/2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:c){this.minGrowth=minGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorminGrowth:c){this.minGrowth=maxGrowth;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=a*1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120b=b*1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=a;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.a=c;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:b.length){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:prototype.getRuntime()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=minGrowth+exp;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(c)][Math.abs(scalAbsoluteTolerance)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(b)][Math.abs(scalAbsoluteTolerance)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.prototype=c;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(c)][Math.abs(maxStep)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.b=newdouble[Math.abs(b)][Math.abs(maxStep)];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RungeKuttaStepInterpolatorb:c.getBlocks()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth/getMinGrowth();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.minGrowth=a;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null&&b.length>0){for(RungeKuttaStepInterpolatorprototype:c){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RangeKuttaStepInterpolatorb:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120for(RicheKuttaStepInterpolatorb:c.getRuns()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120if(b!=null&&b.length>0){for(RungeKuttaStepInterpolatorprototype:c.get()){setSafety(1.0);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth+exp;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120this.maxGrowth=maxGrowth+scalRelativeTolerance;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java120setSafety(1.0-this.minStep);
