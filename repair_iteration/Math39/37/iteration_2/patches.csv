bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxStep,  minGrowth,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	42	None	replace
2	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxStep,  minStep,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	42	None	replace
3	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	12	None	replace
4	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	28	None	replace
5	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	28	None	replace
6	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	28	None	replace
7	[BUG]  [BUGGY]  super(name,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	28	None	replace
8	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	79	None	replace
9	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minReduction,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minReduction,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  minReduction,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	79	None	replace
10	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);	  super(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	32	None	replace
11	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);	  super(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	32	None	replace
12	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);	  this(name,    c,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	74	None	replace
13	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	67	None	replace
14	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	67	None	replace
15	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	67	None	replace
16	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    b,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	61	None	replace
17	[BUG]  [BUGGY]  super(name,  c,  b,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  b,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  b,  a,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    b,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	61	None	replace
18	[BUG]  [BUGGY]  super(name,  b,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  b,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  b,  a,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    b,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	61	None	replace
19	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	16	None	replace
20	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  prototype,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  prototype,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  minStep,  maxStep,  prototype,  scalRelativeTolerance,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	16	None	replace
21	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  minGrowth,  maxGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  minGrowth,  maxGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  minGrowth,  maxGrowth,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	16	None	replace
22	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  prototype,  minStep,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    b,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	81	None	replace
23	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  prototype,  minStep,  scalAbsoluteTolerance);	  super(name,    fsal,    c,    a,    b,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	81	None	replace
24	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minReduction,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minReduction,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxStep,  minReduction,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    b,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	81	None	replace
25	[BUG]  [BUGGY]  super(name,  fsal,  maxStep,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  maxStep,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  maxStep,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    fsal,    maxStep,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	64	None	replace
26	[BUG]  [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  this.name    =    name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	76	None	replace
27	[BUG]  [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name  =  name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);	  this.name    =    name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	76	None	replace
28	[BUG]  [BUGGY]  this.name  =  name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name  =  name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name  =  name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this.name    =    name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	76	None	replace
29	[BUG]  [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);	  if(fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ')'  expected	63	None	replace
30	[BUG]  [BUGGY]  if(c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);	  if(fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ')'  expected	63	None	replace
31	[BUG]  [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsolativeTolerance);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsolativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsolativeTolerance);	  if(fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ')'  expected	63	None	replace
32	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	78	None	replace
33	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	78	None	replace
34	[BUG]  [BUGGY]  this(name,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	53	None	replace
35	[BUG]  [BUGGY]  this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  this(name,    fsal,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	53	None	replace
36	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  a,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  a,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  minStep,  maxStep,  a,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	87	None	replace
37	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  false,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  false,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  minStep,  maxStep,  false,  scalRelativeTolerance);	  super(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	87	None	replace
38	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    fsal,    b,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	68	None	replace
39	[BUG]  [BUGGY]  super(name,  a,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  a,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  a,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    a,    c,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	9	None	replace
40	[BUG]  [BUGGY]  super(name,  a,  c,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  a,  c,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  a,  c,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    a,    c,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	9	None	replace
41	[BUG]  [BUGGY]  super(name,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    a,    c,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	9	None	replace
42	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	1	None	replace
43	[BUG]  [BUGGY]  super(name,  c,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    c,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	1	None	replace
44	[BUG]  [BUGGY]  super(name,  c,  scalAbsoluteTolerance,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  scalAbsoluteTolerance,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  scalAbsoluteTolerance,  maxStep,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	1	None	replace
45	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  minGrowth,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  minGrowth,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  minGrowth,  maxStep,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    minGrowth,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	46	None	replace
46	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    minGrowth,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	46	None	replace
47	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  minReduction,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  minReduction,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  minReduction,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    minGrowth,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	46	None	replace
48	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	15	None	replace
49	[BUG]  [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	5	None	replace
50	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minReduction,  maxStep);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minReduction,  maxStep);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minReduction,  maxStep);	  this(name,    fsal,    c,    a,    b,    prototype,    minGrowth,    maxStep);    	non-compiled	[CE]  ';'  expected	13	None	replace
51	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	41	None	replace
52	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  minGrowth,  maxGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  minGrowth,  maxGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  minGrowth,  maxGrowth,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	41	None	replace
53	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	41	None	replace
54	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    prototype,    minGrowth,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	11	None	replace
55	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsolativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsolativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsolativeTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	19	None	replace
56	[BUG]  [BUGGY]  this.name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  not  a  statement	19	None	replace
57	[BUG]  [BUGGY]  this(name,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    a,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	54	None	replace
58	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    a,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	54	None	replace
59	[BUG]  [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);	  super(name,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    fsal);    	non-compiled	[CE]  ';'  expected	36	None	replace
60	[BUG]  [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  fsal);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  fsal);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  fsal);	  super(name,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    fsal);    	non-compiled	[CE]  ';'  expected	36	None	replace
61	[BUG]  [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);	  super(name,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    fsal);    	non-compiled	[CE]  ';'  expected	36	None	replace
62	[BUG]  [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);	  super(name,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    fsal);    	non-compiled	[CE]  ';'  expected	36	None	replace
63	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalRelativeTolerance);	  this(name,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	21	None	replace
64	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsolativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsolativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsolativeTolerance);	  this(name,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	21	None	replace
65	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    a,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
66	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    a,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
67	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalAb  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalAb  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalAb	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    a,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
68	[BUG]  [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    c,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	48	None	replace
69	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  prototype,  minGrowth,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    maxStep,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	52	None	replace
70	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    maxStep,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	52	None	replace
71	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  maxGrowth);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  maxGrowth);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  maxGrowth);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth);    	non-compiled	[CE]  ';'  expected	14	None	replace
72	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth);    	non-compiled	[CE]  ';'  expected	14	None	replace
73	[BUG]  [BUGGY]  super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    fsal,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	25	None	replace
74	[BUG]  [BUGGY]  super(name,  fsal,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    prototype,    minGrowth,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	33	None	replace
75	[BUG]  [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	37	None	replace
76	[BUG]  [BUGGY]  super(name,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	6	None	replace
77	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);	  this(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	29	None	replace
78	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    c,    a,    b,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	83	None	replace
79	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  }  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  }	  super(name,    c,    a,    b,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	83	None	replace
80	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    prototype,    minGrowth,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	39	None	replace
81	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);	  super(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	23	None	replace
82	[BUG]  [BUGGY]  this.name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    c,    a,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  not  a  statement	72	None	replace
83	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    prototype,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	45	None	replace
84	[BUG]  [BUGGY]  super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    fsal,    prototype,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	45	None	replace
85	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    c,    a,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	85	None	replace
86	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);	  super(name,    c,    a,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	85	None	replace
87	[BUG]  [BUGGY]  super(name,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	58	None	replace
88	[BUG]  [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  fsal);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  fsal);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  fsal);	  super(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	66	None	replace
89	[BUG]  [BUGGY]  this(name,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);	  this(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	73	None	replace
90	[BUG]  [BUGGY]  this.name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  not  a  statement	73	None	replace
91	[BUG]  [BUGGY]  this(name,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  this(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	73	None	replace
92	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  minStep,  scalRelativeTolerance,  fsal);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  minStep,  scalRelativeTolerance,  fsal);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  minStep,  scalRelativeTolerance,  fsal);	  super(name,    c,    a,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	27	None	replace
93	[BUG]  [BUGGY]  super(name,  c,  a,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    c,    a,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	27	None	replace
94	[BUG]  [BUGGY]  this(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	31	None	replace
95	[BUG]  [BUGGY]  this(name,  fsal,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	31	None	replace
96	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  b,  prototype,  minStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	77	None	replace
97	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	60	None	replace
98	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    fsal,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	60	None	replace
99	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);	  super(name,    fsal,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	60	None	replace
100	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);	  super(name,    fsal,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	60	None	replace
101	[BUG]  [BUGGY]  if(fsal)  {  this(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  this(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  this(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(fsal)    {    this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
102	[BUG]  [BUGGY]  super(name,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  fsal);	  super(name,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	56	None	replace
103	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	56	None	replace
104	[BUG]  [BUGGY]  super(name,  a,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  a,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  a,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	56	None	replace
105	[BUG]  [BUGGY]  super(name,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	71	None	replace
106	[BUG]  [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    fsal,    c,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	49	None	replace
107	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  minStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  minStep,  scalRelativeTolerance);	  super(name,    a,    maxStep,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	8	None	replace
108	[BUG]  [BUGGY]  super(name,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance);	  super(name,    a,    maxStep,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	8	None	replace
109	[BUG]  [BUGGY]  super(name,  a,  c,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  a,  c,  minStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  a,  c,  minStep,  scalRelativeTolerance);	  super(name,    a,    maxStep,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	8	None	replace
110	[BUG]  [BUGGY]  super(name,  a,  b,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  a,  b,  minStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  a,  b,  minStep,  scalRelativeTolerance);	  super(name,    a,    maxStep,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	8	None	replace
111	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalAbsoluteTolerance);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalAbsoluteTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalAbsoluteTolerance);  }	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
112	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
113	[BUG]  [BUGGY]  this.name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);	  this.name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  not  a  statement	20	None	replace
114	[BUG]  [BUGGY]  this.name,  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name,  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name,  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);	  this.name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  not  a  statement	20	None	replace
115	[BUG]  [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	86	None	replace
116	[BUG]  [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  fsal,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  prototype,  minStep,  maxStep,  fsal,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  prototype,  minStep,  maxStep,  fsal,  scalRelativeTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	26	None	replace
117	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  minGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  minGrowth,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  minGrowth,  scalRelativeTolerance);	  super(name,    c,    a,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	84	None	replace
118	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	59	None	replace
119	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalGrowth);	  this(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	59	None	replace
120	[BUG]  [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	59	None	replace
121	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	4	None	replace
122	[BUG]  [BUGGY]  super(name,  c,  b,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  b,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  b,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	4	None	replace
123	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  prototype,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  prototype,  scalAbsoluteTolerance);	  super(name,    c,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	4	None	replace
124	[BUG]  [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    c,    maxStep,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	65	None	replace
125	[BUG]  [BUGGY]  super(name,  fsal,  prototype,  maxStep,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  prototype,  maxStep,  minStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  prototype,  maxStep,  minStep,  scalRelativeTolerance);	  super(name,    fsal,    c,    maxStep,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	65	None	replace
126	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsolativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsolativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsolativeTolerance);	  super(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	38	None	replace
127	[BUG]  [BUGGY]  this.name  =  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name  =  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name  =  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	50	None	replace
128	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	50	None	replace
129	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  minAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	79	None	replace
130	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxGrowth,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	40	None	replace
131	[BUG]  [BUGGY]  this(name,  fsal,  prototype,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  prototype,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  prototype,  a,  b,  minStep,  maxStep,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	82	None	replace
132	[BUG]  [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ')'  expected	82	None	replace
133	[BUG]  [BUGGY]  super(name,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    a,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	27	None	replace
134	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    a,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	27	None	replace
135	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    a,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	27	None	replace
136	[BUG]  [BUGGY]  if(fsal)  {  this(name,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  this(name,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  this(name,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(fsal)    {    this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
137	[BUG]  [BUGGY]  if(fsal)  {  this(name,  a,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  this(name,  a,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  this(name,  a,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }	  if(fsal)    {    this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
138	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	38	None	replace
139	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	57	None	replace
140	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  minStep,  maxStep);	  super(name,    c,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	4	None	replace
141	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxStep,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	42	None	replace
142	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	42	None	replace
143	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	42	None	replace
144	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	59	None	replace
145	[BUG]  [BUGGY]  super(name,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	71	None	replace
146	[BUG]  [BUGGY]  super(name,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	71	None	replace
147	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	66	None	replace
148	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  prototype,  minStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	66	None	replace
149	[BUG]  [BUGGY]  super(name,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	66	None	replace
150	[BUG]  [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ')'  expected	50	None	replace
151	[BUG]  [BUGGY]  if(fsal)  {  this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  this(name,    fsal,    c,    a,    b,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	50	None	replace
152	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	50	None	replace
153	[BUG]  [BUGGY]  this(name,  c,  a,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  minStep,  maxStep,  scalRelativeTolerance);	  this(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	73	None	replace
154	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	77	None	replace
155	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minReduction,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minReduction,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  minReduction,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    b,    minStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	77	None	replace
156	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxStep,  minAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	41	None	replace
157	[BUG]  [BUGGY]  this(name,  fsal,  a,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  a,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  a,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    prototype,    minGrowth,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	11	None	replace
158	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	32	None	replace
159	[BUG]  [BUGGY]  super(name,  b,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  b,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  b,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	86	None	replace
160	[BUG]  [BUGGY]  if(fsal)  {  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }	  super(name,    fsal,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	58	None	replace
161	[BUG]  [BUGGY]  if(fsal)  {  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  }	  this(name,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	21	None	replace
162	[BUG]  [BUGGY]  super(name,  fsal,  prototype,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  prototype,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  prototype,  a,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    b,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	61	None	replace
163	[BUG]  [BUGGY]  super(name,  fsal,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	60	None	replace
164	[BUG]  [BUGGY]  this.name  =  name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name  =  name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name  =  name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this.name    =    name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	76	None	replace
165	[BUG]  [BUGGY]  this.name  =  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name  =  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name  =  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this.name    =    name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	76	None	replace
166	[BUG]  [BUGGY]  super(name,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	56	None	replace
167	[BUG]  [BUGGY]  this(name,  fsal,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	53	None	replace
168	[BUG]  [BUGGY]  if(fsal)  {  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  this(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  }	  this(name,    fsal,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	53	None	replace
169	[BUG]  [BUGGY]  this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	31	None	replace
170	[BUG]  [BUGGY]  if(fsal)  {  this(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  this(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  this(name,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  }	  this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	31	None	replace
171	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	51	None	replace
172	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    fsal,    c,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	49	None	replace
173	[BUG]  [BUGGY]  this(name,  fsal,  b,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  b,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  b,  a,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	47	None	replace
174	[BUG]  [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  if(fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ')'  expected	63	None	replace
175	[BUG]  [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance)  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance)  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance)	  if(fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ')'  expected	63	None	replace
176	[BUG]  [BUGGY]  super(name,  b,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  b,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  b,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	37	None	replace
177	[BUG]  [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);	  super(name,    c,    a,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	84	None	replace
178	[BUG]  [BUGGY]  super(name,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	26	None	replace
179	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxStep,  minStep,  scalAbsoluteTolerance);	  super(name,    fsal,    c,    a,    b,    minStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	80	None	replace
180	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth  +  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth  +  1);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth  +  1);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth);    	non-compiled	[CE]  ';'  expected	14	None	replace
181	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  minGrowth,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    minGrowth,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	46	None	replace
182	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  maxGrowth,  minReduction,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  maxGrowth,  minReduction,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  maxGrowth,  minReduction,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    minGrowth,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	46	None	replace
183	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  this(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	29	None	replace
184	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrow  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrow  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrow	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    a,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
185	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	18	None	replace
186	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStepAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minStepAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  prototype,  minStepAbsoluteTolerance,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	28	None	replace
187	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  a,  maxStep,  scalAbsoluteTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  a,  maxStep,  scalAbsoluteTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  a,  maxStep,  scalAbsoluteTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
188	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalAb  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalAb  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalAb	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
189	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scal  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scal  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scal	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
190	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  b,  prototype,  minGrowth,  maxStep,  scalRelativeTolerance);	  this(name,    c,    a,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	72	None	replace
191	[BUG]  [BUGGY]  this(name,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	75	None	replace
192	[BUG]  [BUGGY]  this(name,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  maxStep,  prototype,  minStep,  scalAbsoluteTolerance);	  this(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	75	None	replace
193	[BUG]  [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  a,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  prototype,  minStep,  maxStep,  a,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  prototype,  minStep,  maxStep,  a,  scalRelativeTolerance);	  super(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	22	None	replace
194	[BUG]  [BUGGY]  super(name,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	6	None	replace
195	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  maxGrowth,  minStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  maxGrowth,  minStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  maxGrowth,  minStep,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth);    	non-compiled	[CE]  ';'  expected	14	None	replace
196	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  safety);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  safety);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  safety);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth);    	non-compiled	[CE]  ';'  expected	14	None	replace
197	[BUG]  [BUGGY]  this(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    c,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	73	None	replace
198	[BUG]  [BUGGY]  this.name  =  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name  =  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name  =  name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  this.name    =    name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	76	None	replace
199	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	18	None	replace
200	[BUG]  [BUGGY]  super(name,  c,  b,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  b,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  b,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    c,    a,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	2	None	replace
201	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	21	None	replace
202	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    a,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
203	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scal  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scal  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scal	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    a,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
204	[BUG]  [BUGGY]  super(name,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    c,    a,    maxStep,    minStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	27	None	replace
205	[BUG]  [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalAbsol  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalAbsol  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(fsal)  {  super(name,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalRelativeTolerance);  }  else  {  super(name,  c,  b,  prototype,  minGrowth,  maxGrowth,  scalAbsol	  if(fsal)    {    super(name,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    else    {    super(name,    c,    b,    prototype,    minGrowth,    maxGrowth,    scalRelativeTolerance);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
206	[BUG]  [BUGGY]  super(name,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  minStep,  maxStep,  scalAbsoluteTolerance);	  super(name,    fsal,    b,    a,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	61	None	replace
207	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	59	None	replace
208	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	19	None	replace
209	[BUG]  [BUGGY]  this(name,  c,  a,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  fsal,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    a,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	54	None	replace
210	[BUG]  [BUGGY]  this(name,  fsal,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    a,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	54	None	replace
211	[BUG]  [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    c,    a,    b,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	74	None	replace
212	[BUG]  [BUGGY]  if(c  ==  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  if(c  ==  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	if(c  ==  fsal,  c,  a,  b,  prototype,  minStep,  maxGrowth,  scalAbsoluteTolerance);	  if(fsal,    c,    a,    b,    prototype,    minStep,    maxGrowth,    scalAbsoluteTolerance);    	non-compiled	[CE]  ')'  expected	63	None	replace
213	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  prototype,  minStep,  scalRelativeTolerance);	  super(name,    c,    maxStep,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	3	None	replace
214	[BUG]  [BUGGY]  super(name,  c,  a,  b,  minStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  minStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  minStep,  scalRelativeTolerance);	  super(name,    c,    maxStep,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	3	None	replace
215	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    maxStep,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	52	None	replace
216	[BUG]  [BUGGY]  super(name,  c,  a,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    c,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	1	None	replace
217	[BUG]  [BUGGY]  super(name,  c,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    b,    prototype,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	86	None	replace
218	[BUG]  [BUGGY]  AssertionError(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  AssertionError(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	AssertionError(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  if(fsal)    {    this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
219	[BUG]  [BUGGY]  AssertionError(fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  AssertionError(fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	AssertionError(fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance);	  if(fsal)    {    this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
220	[BUG]  [BUGGY]  this.name  =  name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name  =  name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name  =  name,  c,  a,  b,  prototype,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    c,    a,    b,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	83	None	replace
221	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  maxGrowth,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    b,    prototype,    minGrowth,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	35	None	replace
222	[BUG]  [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this.name  =  name,  fsal,  c,  prototype,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    prototype,    minStep,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	31	None	replace
223	[BUG]  [BUGGY]  Super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  Super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	Super(name,  fsal,  c,  prototype,  minStep,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    fsal,    prototype,    minStep,    maxStep,    scalRelativeTolerance,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	25	None	replace
224	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  maxStep,  scalRelativeTolerance,  scalAbsoluteTolerance);	  super(name,    fsal,    c,    maxStep,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	44	None	replace
225	[BUG]  [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  maxStep,  prototype,  minGrowth,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  maxStep,  prototype,  minGrowth,  scalRelativeTolerance);	  super(name,    a,    c,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	9	None	replace
226	[BUG]  [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  c,  a,  b,  prototype,  minStep,  maxStep);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  c,  a,  b,  prototype,  minStep,  maxStep);	  super(name,    c,    prototype,    scalAbsoluteTolerance,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	4	None	replace
227	[BUG]  [BUGGY]  this(name,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  c,  prototype,  minGrowth,  maxStep,  scalAbsoluteTolerance);	  this(name,    fsal,    prototype,    minGrowth,    maxStep,    scalAbsoluteTolerance);    	non-compiled	[CE]  ';'  expected	11	None	replace
228	[BUG]  [BUGGY]  super(name,  fsal,  c,  maxStep,  minStep,  maxStep,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  maxStep,  minStep,  maxStep,  scalRelativeTolerance);  [BUGGY]        this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  maxStep,  minStep,  maxStep,  scalRelativeTolerance);	  super(name,    fsal,    maxStep,    minStep,    maxStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	64	None	replace
229	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minGrowth,  scalAbsoluteTolerance);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  minGrowth,  scalAbsoluteTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  minGrowth,  scalAbsoluteTolerance);	  this(name,    fsal,    c,    a,    maxStep,    minGrowth,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	17	None	replace
230	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  minGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  minGrowth,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    maxStep,    minGrowth,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	17	None	replace
231	[BUG]  [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  this(name,  fsal,  c,  a,  b,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	this(name,  fsal,  c,  a,  b,  minStep,  scalAbsoluteTolerance,  scalRelativeTolerance);	  this(name,    fsal,    c,    a,    maxStep,    minGrowth,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	17	None	replace
232	[BUG]  [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  scalRelativeTolerance);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {      [BUGGY]  super(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  scalRelativeTolerance);  [BUGGY]      super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	115	115	1	replace	super(name,  fsal,  c,  a,  b,  prototype,  minGrowth,  scalRelativeTolerance);	  super(name,    fsal,    c,    a,    b,    minStep,    scalRelativeTolerance);    	non-compiled	[CE]  ';'  expected	81	None	replace
