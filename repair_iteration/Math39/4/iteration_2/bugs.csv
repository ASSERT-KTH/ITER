bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  forward  =  equations.getTime();  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  int  forward  =  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  int  forward  =  equations.getTime();	  final    boolean    forward    =    equations.getTime();    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
2	[BUG]  [BUGGY]  final  double  forward  =  equations.getTime();  [CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double  forward  =  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  equations.getTime();	  final    boolean    forward    =    equations.getTime();    	non-compiled	[CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])	18	None	replace
3	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getDestination();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getDestination();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getDestination();	  final    boolean    forward    =    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
4	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getFirstTime();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getFirstTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getFirstTime();	  final    boolean    forward    =    t    ==    equations.getTime();    timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
5	[BUG]  [BUGGY]  final  double  forward  =  t  ==  equations.getTime();  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double  forward  =  t  ==  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  t  ==  equations.getTime();	  final    boolean    forward    =    t    ==    equations.getTime();    timeout    	non-compiled	[CE]  incompatible  types	9	None	replace
6	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getNextIsLast();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getNextIsLast();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getNextIsLast();	  final    boolean    forward    =    t    ==    equations.getTime();    timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
7	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getEndTime();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getEndTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getEndTime();	  final    boolean    forward    =    t    ==    equations.getTime();    timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	        sanityChecks(equations,    t);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	3	1	add
9	[BUG]  [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	3	1	add
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	3	1	add
11	[BUG]  [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	3	1	add
12	[BUG]  [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equaries,  t);  [CE]  cannot  find  symbol  equaries  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equaries,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    sanityChecks(equaries,  t);	  	non-compiled	[CE]  cannot  find  symbol  equaries	3	None	add
13	[BUG]  [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equals,  t);  [CE]  cannot  find  symbol  equals  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equals,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    sanityChecks(equals,  t);	  	non-compiled	[CE]  cannot  find  symbol  equals	3	None	add
14	[BUG]  [BUGGY]      sanityChecks(equations,  t);  sanityChecks(c,  t);  [CE]  no  suitable  method  found  for  sanityChecks(double[],double)  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(c,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    sanityChecks(c,  t);	  	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],double)	3	None	add
15	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  final  boolean  forward  =  t  ==  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  final  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    ==    equations.getTime();    final  boolean  forward  =  t  ==  equations.getTime();	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	8	None	add
16	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  Final  boolean  forward  =  t  ==  equations.getTime();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  Final  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    ==    equations.getTime();    Final  boolean  forward  =  t  ==  equations.getTime();	  timeout    	non-compiled	[CE]  not  a  statement	8	None	add
17	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  final  boolean  forward  =  t!=  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  final  boolean  forward  =  t!=  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    ==    equations.getTime();    final  boolean  forward  =  t!=  equations.getTime();	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	8	None	add
18	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  final  boolean  forward  =  t  >=  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  final  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    ==    equations.getTime();    final  boolean  forward  =  t  >=  equations.getTime();	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	8	None	add
19	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  final  boolean  forward  =  equations.getTime()  >  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  final  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t;    final  boolean  forward  =  equations.getTime()  >  t;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	12	None	add
20	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  Final  boolean  forward  =  equations.getTime()  >  t;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  Final  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t;    Final  boolean  forward  =  equations.getTime()  >  t;	  timeout    	non-compiled	[CE]  not  a  statement	12	None	add
21	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  final  boolean  forward  =  equations.getTime()  >  t);  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  final  boolean  forward  =  equations.getTime()  >  t);  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t;    final  boolean  forward  =  equations.getTime()  >  t);	  timeout    	non-compiled	[CE]  ';'  expected	12	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  <  t;	  final    boolean    forward    =    t    <    equations.getTime();    timeout    	compilable	  [FE]  AssertionError  	15	1	replace
23	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  <  t;	  final    boolean    forward    =    t    <    equations.getTime();    timeout    	compilable	  [FE]  AssertionError  	15	1	replace
24	[BUG]  [BUGGY]  final  double  forward  =  t  <  equations.getTime();  [CE]  incompatible  types  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double  forward  =  t  <  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  t  <  equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    timeout    	non-compiled	[CE]  incompatible  types	15	None	replace
25	[BUG]  [BUGGY]  setEquations(equations);  [CE]  cannot  find  symbol  forward  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	setEquations(equations);	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	2	None	replace
26	[BUG]  [BUGGY]  t.report(JSError.make(t,  sanityChecks));  [CE]  cannot  find  symbol  sanityChecks  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  t.report(JSError.make(t,  sanityChecks));  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  sanityChecks));	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  sanityChecks	2	None	replace
27	[BUG]  [BUGGY]  t.report(JSError.make(t,  y0));  [CE]  cannot  find  symbol  y0  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  t.report(JSError.make(t,  y0));  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  y0));	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  y0	2	None	replace
28	[BUG]  [BUGGY]  t.report(JSError.make(t,  sanityChecks()));  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  t.report(JSError.make(t,  sanityChecks()));  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  sanityChecks()));	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	2	None	replace
29	[BUG]  [BUGGY]  filteredNextIsLast  =  false;  [CE]  cannot  find  symbol  filteredNextIsLast  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  filteredNextIsLast  =  false;  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	filteredNextIsLast  =  false;	      filteredNextIsLast    =    true;    	non-compiled	[CE]  cannot  find  symbol  filteredNextIsLast	7	None	replace
30	[BUG]  [BUGGY]  this.filteredNextIsLast  =  true;  [CE]  cannot  find  symbol  filteredNextIsLast  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  this.filteredNextIsLast  =  true;  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	this.filteredNextIsLast  =  true;	      filteredNextIsLast    =    true;    	non-compiled	[CE]  cannot  find  symbol  filteredNextIsLast	7	None	replace
31	[BUG]  [BUGGY]  eredNextIsLast  =  false;  [CE]  cannot  find  symbol  eredNextIsLast  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  eredNextIsLast  =  false;  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	eredNextIsLast  =  false;	      filteredNextIsLast    =    true;    	non-compiled	[CE]  cannot  find  symbol  eredNextIsLast	7	None	replace
32	[BUG]  [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  final  boolean  forward  =  t  >=  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  final  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    >=    equations.getTime();    final  boolean  forward  =  t  >=  equations.getTime();	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	10	None	add
33	[BUG]  [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  final  boolean  forward  =  t  >>  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  final  boolean  forward  =  t  >>  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    >=    equations.getTime();    final  boolean  forward  =  t  >>  equations.getTime();	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	10	None	add
34	[BUG]  [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  final  boolean  forward  =  t!=  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  final  boolean  forward  =  t!=  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    >=    equations.getTime();    final  boolean  forward  =  t!=  equations.getTime();	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	10	None	add
35	[BUG]  [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  Final  boolean  forward  =  t  >=  equations.getTime();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  Final  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    >=    equations.getTime();    Final  boolean  forward  =  t  >=  equations.getTime();	  	non-compiled	[CE]  not  a  statement	10	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	1	1	add
37	[BUG]  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	1	1	add
38	[BUG]  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  c);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  c);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  c);  setEquations(equations);	  	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	1	None	add
39	[BUG]  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquals(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquals(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquals(equations);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
40	[BUG]  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquivalence(equations);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	1	1	add
42	[BUG]  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	1	1	add
43	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentState();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double[][]  c  =  equations.getCurrentState();  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCurrentState();	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
44	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getScale();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double[][]  c  =  equations.getScale();  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getScale();	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
45	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCount();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double[][]  c  =  equations.getCount();  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCount();	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
46	[BUG]  [BUGGY]  sanityChecks(stages,  t);  setEquations(equivalences);  [CE]  cannot  find  symbol  stages  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(stages,  t);  setEquations(equivalences);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);  setEquations(equivalences);	      sanityChecks(equations,    t);    setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol  stages	6	None	replace
47	[BUG]  [BUGGY]  sanityChecks(stages,  t);  setEquivalences(equivalences);  [CE]  cannot  find  symbol  stages  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(stages,  t);  setEquivalences(equivalences);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);  setEquivalences(equivalences);	      sanityChecks(equations,    t);    setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol  stages	6	None	replace
48	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquivalences(equivalences);  [CE]  cannot  find  symbol  equivalences  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(equations,  t);  setEquivalences(equivalences);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquivalences(equivalences);	      sanityChecks(equations,    t);    setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol  equivalences	6	None	replace
49	[BUG]  [BUGGY]  sanityChecks(t,  equations,  c);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(t,  equations,  c);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  equations,  c);  setEquations(equations);	      sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])	21	None	replace
50	[BUG]  [BUGGY]  sanityChecks(t,  c);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(double,double[])  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(t,  c);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  c);  setEquations(equations);	      sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,double[])	21	None	replace
51	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  final  boolean  forward  =  t  <  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  final  boolean  forward  =  t  <  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    <    equations.getTime();    final  boolean  forward  =  t  <  equations.getTime();	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	14	None	add
52	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  Final  boolean  forward  =  t  <  equations.getTime();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  Final  boolean  forward  =  t  <  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    <    equations.getTime();    Final  boolean  forward  =  t  <  equations.getTime();	  timeout    	non-compiled	[CE]  not  a  statement	14	None	add
53	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  boolean  forward  =  t  <  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  boolean  forward  =  t  <  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    <    equations.getTime();    boolean  forward  =  t  <  equations.getTime();	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	14	None	add
54	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  final  boolean  forward  =  t  <  Equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  final  boolean  forward  =  t  <  Equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    <    equations.getTime();    final  boolean  forward  =  t  <  Equations.getTime();	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	14	None	add
55	[BUG]  [BUGGY]  final  boolean  forward  =  t  >=  equations.getFirstTime();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  >=  equations.getFirstTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  >=  equations.getFirstTime();	  final    boolean    forward    =    t    >=    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
56	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getFirstTime();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t!=  equations.getFirstTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getFirstTime();	  final    boolean    forward    =    t    >=    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
57	[BUG]  [BUGGY]  sanityChecks(stages,  t);  setEquations(stages);  [CE]  cannot  find  symbol  stages  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(stages,  t);  setEquations(stages);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);  setEquations(stages);	      sanityChecks(equations,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	19	None	replace
58	[BUG]  [BUGGY]  sanityChecks(escapes,  t);  setEquations(stages);  [CE]  cannot  find  symbol  escapes  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(escapes,  t);  setEquations(stages);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(escapes,  t);  setEquations(stages);	      sanityChecks(equations,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  escapes	19	None	replace
59	[BUG]  [BUGGY]  sanityChecks(escapes,  t);  setEquals(stages);  [CE]  cannot  find  symbol  escapes  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(escapes,  t);  setEquals(stages);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(escapes,  t);  setEquals(stages);	      sanityChecks(equations,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  escapes	19	None	replace
60	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  final  boolean  forward  =  t!=  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  final  boolean  forward  =  t!=  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t!=    equations.getTime();    final  boolean  forward  =  t!=  equations.getTime();	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	16	None	add
61	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  final  boolean  forward  =  t  >>  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  final  boolean  forward  =  t  >>  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t!=    equations.getTime();    final  boolean  forward  =  t  >>  equations.getTime();	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	16	None	add
62	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  final  boolean  forward  =  t  >=  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  final  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t!=    equations.getTime();    final  boolean  forward  =  t  >=  equations.getTime();	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	16	None	add
63	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  final  boolean  forward  =  t  ==  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  final  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t!=    equations.getTime();    final  boolean  forward  =  t  ==  equations.getTime();	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	16	None	add
64	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getWrapped();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t!=  equations.getWrapped();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getWrapped();	  final    boolean    forward    =    t!=    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
65	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getRange();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t!=  equations.getRange();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getRange();	  final    boolean    forward    =    t!=    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
66	[BUG]  [BUGGY]  sanityChecks(equaries,  t);  setEquations(equations);  [CE]  cannot  find  symbol  equaries  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(equaries,  t);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equaries,  t);  setEquations(equations);	      sanityChecks(equations,    error);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  equaries	20	None	replace
67	[BUG]  [BUGGY]  sanityChecks(t,  equations);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE)  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(t,  equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  equations);	      sanityChecks(equations,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE)	4	None	replace
68	[BUG]  [BUGGY]  sanityChecks(stages,  t);  [CE]  cannot  find  symbol  stages  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(stages,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);	      sanityChecks(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	4	None	replace
69	[BUG]  [BUGGY]  sanityChecks(equations,  c);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(equations,  c);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c);	      sanityChecks(equations,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	4	None	replace
70	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  ==  t;	  final    boolean    forward    =    equations.getTime()    >    t;    timeout    	compilable	timeout	13	1	replace
71	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  timeout  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  ==  t;	  final    boolean    forward    =    equations.getTime()    >    t;    timeout    	compilable	timeout	13	1	replace
72	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  >  t  +  1;	  final    boolean    forward    =    equations.getTime()    >    t;    timeout    	compilable	timeout	13	1	replace
73	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  timeout  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  t  +  1;	  final    boolean    forward    =    equations.getTime()    >    t;    timeout    	compilable	timeout	13	1	replace
74	[BUG]  [BUGGY]  timeout  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  >=  t;	  final    boolean    forward    =    equations.getTime()    >    t;    timeout    	compilable	timeout	13	1	replace
75	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  timeout  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >=  t;	  final    boolean    forward    =    equations.getTime()    >    t;    timeout    	compilable	timeout	13	1	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()!=  t;	  final    boolean    forward    =    equations.getTime()    >    t;    timeout    	compilable	  [FE]  AssertionError  	13	2	replace
77	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()!=  t;	  final    boolean    forward    =    equations.getTime()    >    t;    timeout    	compilable	  [FE]  AssertionError  	13	2	replace
78	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getNext();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getNext();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getNext();	  final    boolean    forward    =    t    ==    equations.getTime();    timeout    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
79	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  setEquations(stages);  }  [CE]  cannot  find  symbol  stages  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  setEquations(stages);  }  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  setEquations(stages);  }	      sanityChecks(equations,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	19	None	replace
80	[BUG]  [BUGGY]  sanityChecks(equations,  c);  setEquations(stages);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(equations,  c);  setEquations(stages);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c);  setEquations(stages);	      sanityChecks(equations,    t);    setEquations(stages);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	19	None	replace
81	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }	      sanityChecks(equations,    t);    	non-compiled	[CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;	4	None	replace
82	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  setEquations(equations);  }  [CE]  cannot  find  symbol  forward  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  setEquations(equations);  }  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  setEquations(equations);  }	      sanityChecks(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  forward	4	None	replace
83	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  forward  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      sanityChecks(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  forward	4	None	replace
84	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getWrapped();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getWrapped();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getWrapped();	  final    boolean    forward    =    t    <    equations.getTime();    timeout    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
85	[BUG]  [BUGGY]  double  filteredNextIsLast  =  true;  [CE]  incompatible  types  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  double  filteredNextIsLast  =  true;  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	double  filteredNextIsLast  =  true;	      filteredNextIsLast    =    true;    	non-compiled	[CE]  incompatible  types	7	None	replace
86	[BUG]  [BUGGY]      sanityChecks(equations,  t);  sanityChecks(stages,  t);  [CE]  cannot  find  symbol  stages  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(stages,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    sanityChecks(stages,  t);	  	non-compiled	[CE]  cannot  find  symbol  stages	3	None	add
87	[BUG]  [BUGGY]      sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  [CE]  cannot  find  symbol  stages  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    sanityChecks(stages,  t);  setEquations(equations);	  	non-compiled	[CE]  cannot  find  symbol  stages	3	None	add
88	[BUG]  [BUGGY]      sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  [CE]  cannot  find  symbol  stages  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    sanityChecks(stages,  t);  setEquations(stages);	  	non-compiled	[CE]  cannot  find  symbol  stages	3	None	add
89	[BUG]  [BUGGY]  sanityChecks(stages,  t);  setEquations(equations);  [CE]  cannot  find  symbol  stages  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(stages,  t);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);  setEquations(equations);	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  stages	2	None	replace
90	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  forward  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	2	None	replace
91	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  forward  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	2	None	replace
92	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;	2	None	replace
93	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getEquivalenceState();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double[][]  c  =  equations.getEquivalenceState();  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getEquivalenceState();	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
94	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getStartState();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double[][]  c  =  equations.getStartState();  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getStartState();	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
95	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getWrapped();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getWrapped();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getWrapped();	  final    boolean    forward    =    t!=    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
96	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getRange();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getRange();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getRange();	  final    boolean    forward    =    t!=    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
97	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  semifinal  boolean  forward  =  equations.getTime()  >  t;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  semifinal  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t;    semifinal  boolean  forward  =  equations.getTime()  >  t;	  timeout    	non-compiled	[CE]  not  a  statement	12	None	add
98	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  boolean  forward  =  equations.getTime()  >  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t;    boolean  forward  =  equations.getTime()  >  t;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	12	None	add
99	[BUG]  [BUGGY]  sanityChecks(equations,  c.length);  setEquations(equations);  [CE]  cannot  find  symbol  forward  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(equations,  c.length);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c.length);  setEquations(equations);	      sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	21	None	replace
100	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  error;  [CE]  cannot  find  symbol  error  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  equations.getTime()  >  error;  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  error;	  final    boolean    forward    =    equations.getTime()    >    t;    timeout    	non-compiled	[CE]  cannot  find  symbol  error	13	None	replace
101	[BUG]  [BUGGY]  sanityChecks(equations,  b);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(equations,  b);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  b);  setEquations(equations);	      sanityChecks(equations,    error);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	20	None	replace
102	[BUG]  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStatements(equations);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStatements(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setStatements(equations);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
103	[BUG]  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setStones(equations);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
104	[BUG]  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStages(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStages(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setStages(equations);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
105	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  Final  boolean  forward  =  t!=  equations.getTime();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  Final  boolean  forward  =  t!=  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t!=    equations.getTime();    Final  boolean  forward  =  t!=  equations.getTime();	  	non-compiled	[CE]  not  a  statement	16	None	add
106	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getWeeks();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getWeeks();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getWeeks();	  final    boolean    forward    =    t!=    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
107	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getWidth();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getWidth();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getWidth();	  final    boolean    forward    =    t!=    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
108	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getDifference();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getDifference();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getDifference();	  final    boolean    forward    =    t!=    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
109	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  forward  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	2	None	replace
110	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquivalences(stages);  [CE]  cannot  find  symbol  stages  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(equations,  t);  setEquivalences(stages);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquivalences(stages);	      sanityChecks(equations,    t);    setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol  stages	6	None	replace
111	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equivalences);  }  [CE]  cannot  find  symbol  equivalences  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equivalences);  }  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equivalences);  }	      sanityChecks(equations,    t);    setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol  equivalences	6	None	replace
112	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t);  [CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCompleteState(t);	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	5	None	replace
113	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getEmptyStatement();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  double[][]  c  =  equations.getEmptyStatement();  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getEmptyStatement();	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
114	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getWeeks();  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  <  equations.getWeeks();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  <  equations.getWeeks();	  final    boolean    forward    =    t    <    equations.getTime();    timeout    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
115	[BUG]  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setTrace(equations);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
116	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  final  boolean  forward  =  t  ==  equations.getTime());  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  final  boolean  forward  =  t  ==  equations.getTime());  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    ==    equations.getTime();    final  boolean  forward  =  t  ==  equations.getTime());	  timeout    	non-compiled	[CE]  ';'  expected	8	None	add
117	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  semifinal  boolean  forward  =  t  ==  equations.getTime();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  semifinal  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    ==    equations.getTime();    semifinal  boolean  forward  =  t  ==  equations.getTime();	  timeout    	non-compiled	[CE]  not  a  statement	8	None	add
118	[BUG]  [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equations,  error);  setEquations(equations);  [CE]  cannot  find  symbol  error  [FE]    AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]      sanityChecks(equations,  t);  sanityChecks(equations,  error);  setEquations(equations);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	        sanityChecks(equations,    t);    sanityChecks(equations,  error);  setEquations(equations);	  	non-compiled	[CE]  cannot  find  symbol  error	3	None	add
119	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  final  boolean  forward  =  t  <  equations.getTime());  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  final  boolean  forward  =  t  <  equations.getTime());  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    <    equations.getTime();    final  boolean  forward  =  t  <  equations.getTime());	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
120	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  semifinal  boolean  forward  =  t  <  equations.getTime();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  semifinal  boolean  forward  =  t  <  equations.getTime();  [BUGGY]      final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    t    <    equations.getTime();    semifinal  boolean  forward  =  t  <  equations.getTime();	  timeout    	non-compiled	[CE]  not  a  statement	14	None	add
121	[BUG]  [BUGGY]  sanityChecks(equations,  c);  setEquations(equations,  t);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);    [BUGGY]  sanityChecks(equations,  c);  setEquations(equations,  t);  [BUGGY]    final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c);  setEquations(equations,  t);	      sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	21	None	replace
