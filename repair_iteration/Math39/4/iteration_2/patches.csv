bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sanityChecks(stages,  t);  setEquivalences(stages);  [CE]  cannot  find  symbol  stages  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(stages,  t);  setEquivalences(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);  setEquivalences(stages);	  sanityChecks(equations,    t);    setEquivalences(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	110	None	replace
2	[BUG]  [BUGGY]  sanityChecks(escapes,  t);  setEquivalences(stages);  [CE]  cannot  find  symbol  escapes  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(escapes,  t);  setEquivalences(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(escapes,  t);  setEquivalences(stages);	  sanityChecks(equations,    t);    setEquivalences(stages);    	non-compiled	[CE]  cannot  find  symbol  escapes	110	None	replace
3	[BUG]  [BUGGY]  sanityChecks(t,  equations);  setEquivalences(stages);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE)  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  equations);  setEquivalences(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  equations);  setEquivalences(stages);	  sanityChecks(equations,    t);    setEquivalences(stages);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE)	110	None	replace
4	[BUG]  [BUGGY]  safeSanityChecks(equations,  t);  setEquations(equivalences);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  safeSanityChecks(equations,  t);  setEquations(equivalences);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	safeSanityChecks(equations,  t);  setEquations(equivalences);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equivalences);    }    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
5	[BUG]  [BUGGY]  Final  boolean  forward  =  equations.getTime()  >  t;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  Final  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	Final  boolean  forward  =  equations.getTime()  >  t;	  final    boolean    forward    =    equations.getTime()    >    t;    Final    boolean    forward    =    equations.getTime()    >    t;    	non-compiled	[CE]  not  a  statement	20	None	replace
6	[BUG]  [BUGGY]  setEquations(equations,  t);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  setEquations(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	setEquations(equations,  t);	  setEquations(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	25	None	replace
7	[BUG]  [BUGGY]  setEquations(t);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  setEquations(t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	setEquations(t);	  setEquations(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	25	None	replace
8	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t  <  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	boolean  forward  =  t  <  equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    boolean    forward    =    t    <    equations.getTime();    	compilable	timeout	53	1	replace
9	[BUG]  [BUGGY]  boolean  forward  =  t  <  equations.getTime();  timeout  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t  <  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	boolean  forward  =  t  <  equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    boolean    forward    =    t    <    equations.getTime();    	compilable	timeout	53	1	replace
10	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  final  boolean  forward  =  equations.getTime()!=  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  final  boolean  forward  =  equations.getTime()!=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()!=    t;    final  boolean  forward  =  equations.getTime()!=  t;	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	76	None	add
11	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  final  boolean  forward  =  equations.getTime()  >>  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  final  boolean  forward  =  equations.getTime()  >>  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()!=    t;    final  boolean  forward  =  equations.getTime()  >>  t;	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	76	None	add
12	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  final  boolean  forward  =  equations.getTime()  >=  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  final  boolean  forward  =  equations.getTime()  >=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()!=    t;    final  boolean  forward  =  equations.getTime()  >=  t;	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	76	None	add
13	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  final  boolean  forward  =  equations.getTime()  ==  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  final  boolean  forward  =  equations.getTime()  ==  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()!=    t;    final  boolean  forward  =  equations.getTime()  ==  t;	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	76	None	add
14	[BUG]  [BUGGY]  sanityChecks(c,  t);  [CE]  no  suitable  method  found  for  sanityChecks(double[],double)  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(c,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(c,  t);	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],double)	88	None	replace
15	[BUG]  [BUGGY]  sanityChecks(c,  t);  setEquations(stages);  [CE]  no  suitable  method  found  for  sanityChecks(double[],double)  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(c,  t);  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(c,  t);  setEquations(stages);	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],double)	88	None	replace
16	[BUG]  [BUGGY]  semifinal  boolean  forward  =  t  ==  equations.getTime();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  semifinal  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	semifinal  boolean  forward  =  t  ==  equations.getTime();	  final    boolean    forward    =    t    ==    equations.getTime();    semifinal    boolean    forward    =    t    ==    equations.getTime();    	non-compiled	[CE]  not  a  statement	117	None	replace
17	[BUG]  [BUGGY]  semifinal  boolean  forward  =  t!=  equations.getTime();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  semifinal  boolean  forward  =  t!=  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	semifinal  boolean  forward  =  t!=  equations.getTime();	  final    boolean    forward    =    t    ==    equations.getTime();    semifinal    boolean    forward    =    t    ==    equations.getTime();    	non-compiled	[CE]  not  a  statement	117	None	replace
18	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null.getWrapped();  [CE]  <null>  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null.getWrapped();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null.getWrapped();	  final    boolean    forward    =    t!=    equations.getWrapped();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	64	None	replace
19	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getEndState();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getEndState();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getEndState();	  final    double[][]    c    =    equations.getStartState();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
20	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getStartState(t);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getStartState(t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getStartState(t);	  final    double[][]    c    =    equations.getStartState();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
21	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setStones(equations);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setStones(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setStones(equations);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStones(equations);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
22	[BUG]  [BUGGY]  final  boolean  forward  =  t  >>  equations.getTime();  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  >>  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  >>  equations.getTime();	  final    boolean    forward    =    t!=    equations.getTime();    final    boolean    forward    =    t    >=    equations.getTime();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	62	None	replace
23	[BUG]  [BUGGY]  sanityChecks(t,  equations,  c);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  equations,  c);	  sanityChecks(equations,    c);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])	69	None	replace
24	[BUG]  [BUGGY]  sanityChecks(equations,  t,  c);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t,  c);	  sanityChecks(equations,    c);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double,double[])	69	None	replace
25	[BUG]  [BUGGY]  sanityChecks(c,  equations);  [CE]  no  suitable  method  found  for  sanityChecks(double[],ExpandableStatefulODE)  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(c,  equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(c,  equations);	  sanityChecks(equations,    c);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],ExpandableStatefulODE)	69	None	replace
26	[BUG]  [BUGGY]  sanityChecks(t,  equations,  b);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  equations,  b);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  equations,  b);  setEquations(equations);	  sanityChecks(equations,    b);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])	101	None	replace
27	[BUG]  [BUGGY]  sanityChecks(equals,  t);  [CE]  cannot  find  symbol  equals  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equals,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equals,  t);	          sanityChecks(equations,    t);    sanityChecks(equals,    t);    	non-compiled	[CE]  cannot  find  symbol  equals	13	None	replace
28	[BUG]  [BUGGY]  sanityChecks(equivalence,  t);  [CE]  cannot  find  symbol  equivalence  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equivalence,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equivalence,  t);	          sanityChecks(equations,    t);    sanityChecks(equals,    t);    	non-compiled	[CE]  cannot  find  symbol  equivalence	13	None	replace
29	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  final  boolean  forward  =  equations.getTime()  >=  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  final  boolean  forward  =  equations.getTime()  >=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >=    t;    final  boolean  forward  =  equations.getTime()  >=  t;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	74	None	add
30	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  final  boolean  forward  =  equations.getTime()  >>  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  final  boolean  forward  =  equations.getTime()  >>  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >=    t;    final  boolean  forward  =  equations.getTime()  >>  t;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	74	None	add
31	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  final  boolean  forward  =  equations.getTime()!=  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  final  boolean  forward  =  equations.getTime()!=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >=    t;    final  boolean  forward  =  equations.getTime()!=  t;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	74	None	add
32	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  Final  boolean  forward  =  equations.getTime()  >=  t;  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t;  Final  boolean  forward  =  equations.getTime()  >=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >=    t;    Final  boolean  forward  =  equations.getTime()  >=  t;	  timeout    	non-compiled	[CE]  not  a  statement	74	None	add
33	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquals(equations,  t);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquals(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquals(equations,  t);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquals(equations);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
34	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquals(equations,  forward);  [CE]  cannot  find  symbol  forward  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquals(equations,  forward);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquals(equations,  forward);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquals(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	39	None	replace
35	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquals(equations,  c);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquals(equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquals(equations,  c);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquals(equations);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
36	[BUG]  [BUGGY]  sanityChecks(equivalences,  t);  setEquivalences(equivalences);  [CE]  cannot  find  symbol  equivalences  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equivalences,  t);  setEquivalences(equivalences);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equivalences,  t);  setEquivalences(equivalences);	  sanityChecks(stages,    t);    setEquivalences(equivalences);    	non-compiled	[CE]  cannot  find  symbol  equivalences	47	None	replace
37	[BUG]  [BUGGY]  setEquivalences(equivalences);  [CE]  cannot  find  symbol  equivalences  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  setEquivalences(equivalences);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	setEquivalences(equivalences);	  sanityChecks(stages,    t);    setEquivalences(equivalences);    	non-compiled	[CE]  cannot  find  symbol  equivalences	47	None	replace
38	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquivalence(equations);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquivalence(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquivalence(equations);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquivalence(equations);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
39	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  final  boolean  forward  =  equations.getTime()  ==  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  final  boolean  forward  =  equations.getTime()  ==  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    ==    t;    final  boolean  forward  =  equations.getTime()  ==  t;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	70	None	add
40	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  Final  boolean  forward  =  equations.getTime()  ==  t;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  Final  boolean  forward  =  equations.getTime()  ==  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    ==    t;    Final  boolean  forward  =  equations.getTime()  ==  t;	  timeout    	non-compiled	[CE]  not  a  statement	70	None	add
41	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  final  boolean  forward  =  equations.getTime()!=  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  final  boolean  forward  =  equations.getTime()!=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    ==    t;    final  boolean  forward  =  equations.getTime()!=  t;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	70	None	add
42	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  final  boolean  forward  =  equations.getTime()  >=  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  final  boolean  forward  =  equations.getTime()  >=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    ==    t;    final  boolean  forward  =  equations.getTime()  >=  t;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	70	None	add
43	[BUG]  [BUGGY]  sanityChecks(t,  equations);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE)  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  equations);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  equations);  setEquations(equations);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE)	92	None	replace
44	[BUG]  [BUGGY]  sanityChecks(equivalences,  t);  setEquations(equivalences);  [CE]  cannot  find  symbol  equivalences  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equivalences,  t);  setEquations(equivalences);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equivalences,  t);  setEquations(equivalences);	  sanityChecks(stages,    t);    setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol  equivalences	46	None	replace
45	[BUG]  [BUGGY]  sanityChecks(equates,  t);  setEquations(equivalences);  [CE]  cannot  find  symbol  equates  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equates,  t);  setEquations(equivalences);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equates,  t);  setEquations(equivalences);	  sanityChecks(stages,    t);    setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol  equates	46	None	replace
46	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getEQUIvalenceState();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getEQUIvalenceState();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getEQUIvalenceState();	  final    double[][]    c    =    equations.getEquivalenceState();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
47	[BUG]  [BUGGY]  safeSanityChecks(equations,  t);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  safeSanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	safeSanityChecks(equations,  t);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
48	[BUG]  [BUGGY]  Context.checkState(t  >  0);  [CE]  cannot  find  symbol  Context  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  Context.checkState(t  >  0);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	Context.checkState(t  >  0);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  Context	81	None	replace
49	[BUG]  [BUGGY]  timeout  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	boolean  forward  =  t  ==  equations.getTime();	  final    boolean    forward    =    t    ==    equations.getTime();    final    boolean    forward    =    t    ==    equations.getTime();    	compilable	timeout	15	1	replace
50	[BUG]  [BUGGY]  boolean  forward  =  t  ==  equations.getTime();  timeout  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	boolean  forward  =  t  ==  equations.getTime();	  final    boolean    forward    =    t    ==    equations.getTime();    final    boolean    forward    =    t    ==    equations.getTime();    	compilable	timeout	15	1	replace
51	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  final  boolean  forward  =  equations.getTime()  >  t  +  1;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  final  boolean  forward  =  equations.getTime()  >  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t    +    1;    final  boolean  forward  =  equations.getTime()  >  t  +  1;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	72	None	add
52	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  Final  boolean  forward  =  equations.getTime()  >  t  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  Final  boolean  forward  =  equations.getTime()  >  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t    +    1;    Final  boolean  forward  =  equations.getTime()  >  t  +  1;	  timeout    	non-compiled	[CE]  not  a  statement	72	None	add
53	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  final  boolean  forward  =  Equations.getTime()  >  t  +  1;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  final  boolean  forward  =  Equations.getTime()  >  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t    +    1;    final  boolean  forward  =  Equations.getTime()  >  t  +  1;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	72	None	add
54	[BUG]  [BUGGY]  t.report(JSError.make(t,  error));  [CE]  cannot  find  symbol  error  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  error));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  error));	  t.report(JSError.make(t,    y0));    	non-compiled	[CE]  cannot  find  symbol  error	27	None	replace
55	[BUG]  [BUGGY]  t.report(JSError.make(t,  y));  [CE]  cannot  find  symbol  y  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  y));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  y));	  t.report(JSError.make(t,    y0));    	non-compiled	[CE]  cannot  find  symbol  y	27	None	replace
56	[BUG]  [BUGGY]  t.report(JSError.make(t,  b));  [CE]  cannot  find  symbol  JSError  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  b));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  b));	  t.report(JSError.make(t,    y0));    	non-compiled	[CE]  cannot  find  symbol  JSError	27	None	replace
57	[BUG]  [BUGGY]  t.report(JSError.make(t,  c));  [CE]  cannot  find  symbol  JSError  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  c));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  c));	  t.report(JSError.make(t,    y0));    	non-compiled	[CE]  cannot  find  symbol  JSError	27	None	replace
58	[BUG]  [BUGGY]  t.report(JSError.make(t,  setSanityChecks));  [CE]  cannot  find  symbol  setSanityChecks  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  setSanityChecks));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  setSanityChecks));	  t.report(JSError.make(t,    sanityChecks));    	non-compiled	[CE]  cannot  find  symbol  setSanityChecks	26	None	replace
59	[BUG]  [BUGGY]  t.report(JSError.make(t,  setEquations));  [CE]  cannot  find  symbol  setEquations  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  setEquations));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  setEquations));	  t.report(JSError.make(t,    sanityChecks));    	non-compiled	[CE]  cannot  find  symbol  setEquations	26	None	replace
60	[BUG]  [BUGGY]  t.report(JSError.make(t,  scaledH));  [CE]  cannot  find  symbol  scaledH  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  scaledH));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  scaledH));	  t.report(JSError.make(t,    sanityChecks));    	non-compiled	[CE]  cannot  find  symbol  scaledH	26	None	replace
61	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  <  =  t;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  <  =  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  <  =  t;	  final    boolean    forward    =    equations.getTime()    <    t;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
62	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getRange();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getRange();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getRange();	  final    boolean    forward    =    t!=    equations.getRange();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
63	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null.getRange();  [CE]  <null>  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null.getRange();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null.getRange();	  final    boolean    forward    =    t!=    equations.getRange();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	65	None	replace
64	[BUG]  [BUGGY]  sanityChecks(equations,  t.length);  setEquations(equations);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t.length);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t.length);  setEquations(equations);	  sanityChecks(equations,    c.length);    setEquations(equations);    	non-compiled	[CE]  double  cannot  be  dereferenced	99	None	replace
65	[BUG]  [BUGGY]  semifinal  boolean  forward  =  t  <  equations.getTime();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  semifinal  boolean  forward  =  t  <  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	semifinal  boolean  forward  =  t  <  equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    semifinal    boolean    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  not  a  statement	120	None	replace
66	[BUG]  [BUGGY]  semifinal  boolean  forward  =  t  >=  equations.getTime();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  semifinal  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	semifinal  boolean  forward  =  t  >=  equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    semifinal    boolean    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  not  a  statement	120	None	replace
67	[BUG]  [BUGGY]  sanityChecks(equates,  t);  [CE]  cannot  find  symbol  equates  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equates,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equates,  t);	  sanityChecks(t,    equations);    	non-compiled	[CE]  cannot  find  symbol  equates	67	None	replace
68	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentStatement();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getCurrentStatement();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCurrentStatement();	  final    double[][]    c    =    equations.getEmptyStatement();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
69	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getStdEmptyStatement();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getStdEmptyStatement();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getStdEmptyStatement();	  final    double[][]    c    =    equations.getEmptyStatement();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t!=  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	boolean  forward  =  t!=  equations.getTime();	  final    boolean    forward    =    t!=    equations.getTime();    final    boolean    forward    =    t!=    equations.getTime();    	compilable	  [FE]  AssertionError  	60	2	replace
71	[BUG]  [BUGGY]  boolean  forward  =  t!=  equations.getTime();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t!=  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	boolean  forward  =  t!=  equations.getTime();	  final    boolean    forward    =    t!=    equations.getTime();    final    boolean    forward    =    t!=    equations.getTime();    	compilable	  [FE]  AssertionError  	60	2	replace
72	[BUG]  [BUGGY]  shedNextIsLast  =  true;  [CE]  cannot  find  symbol  shedNextIsLast  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  shedNextIsLast  =  true;  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	shedNextIsLast  =  true;	  filteredNextIsLast    =    false;    	non-compiled	[CE]  cannot  find  symbol  shedNextIsLast	29	None	replace
73	[BUG]  [BUGGY]  eredNextIsLast  =  true;  [CE]  cannot  find  symbol  eredNextIsLast  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  eredNextIsLast  =  true;  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	eredNextIsLast  =  true;	  filteredNextIsLast    =    false;    	non-compiled	[CE]  cannot  find  symbol  eredNextIsLast	29	None	replace
74	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(equaries);  [CE]  cannot  find  symbol  equaries  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquations(equaries);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquations(equaries);	  if(t    >    scalAbsoluteTolerance)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  cannot  find  symbol  equaries	109	None	replace
75	[BUG]  [BUGGY]  t.report(JSError.make(t,  e.getMessage()));  [CE]  cannot  find  symbol  e  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  e.getMessage()));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  e.getMessage()));	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  e	37	None	replace
76	[BUG]  [BUGGY]  t.report(JSError.make(t,  y0),  error);  [CE]  cannot  find  symbol  y0  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  y0),  error);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  y0),  error);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  y0	37	None	replace
77	[BUG]  [BUGGY]  sanityChecks(stages,  t);  setEquals(stages);  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(stages,  t);  setEquals(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);  setEquals(stages);	  sanityChecks(escapes,    t);    setEquals(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	59	None	replace
78	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquals(stages);  [CE]  cannot  find  symbol  stages  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquals(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquals(stages);	  sanityChecks(escapes,    t);    setEquals(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	59	None	replace
79	[BUG]  [BUGGY]  sanityChecks(escapes,  t);  setEquations(escapes);  [CE]  cannot  find  symbol  escapes  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(escapes,  t);  setEquations(escapes);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(escapes,  t);  setEquations(escapes);	  sanityChecks(stages,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  escapes	89	None	replace
80	[BUG]  [BUGGY]  sanityChecks(c,  t);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(double[],double)  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(c,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(c,  t);  setEquations(equations);	  sanityChecks(stages,    t);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],double)	89	None	replace
81	[BUG]  [BUGGY]  sanityChecks(t,  stages);  setEquations(equations);  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  stages);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  stages);  setEquations(equations);	  sanityChecks(stages,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  stages	89	None	replace
82	[BUG]  [BUGGY]  this.filteredNextIsLast  =  false;  [CE]  cannot  find  symbol  filteredNextIsLast  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  this.filteredNextIsLast  =  false;  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	this.filteredNextIsLast  =  false;	  this.filteredNextIsLast    =    true;    	non-compiled	[CE]  cannot  find  symbol  filteredNextIsLast	30	None	replace
83	[BUG]  [BUGGY]  This.filteredNextIsLast  =  true;  [CE]  cannot  find  symbol  This  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  This.filteredNextIsLast  =  true;  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	This.filteredNextIsLast  =  true;	  this.filteredNextIsLast    =    true;    	non-compiled	[CE]  cannot  find  symbol  This	30	None	replace
84	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  b);  [CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  b);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCompleteState(t,  b);	  final    double[][]    c    =    equations.getCompleteState(t);    	non-compiled	[CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	112	None	replace
85	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  scale);  [CE]  cannot  find  symbol  scale  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  scale);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCompleteState(t,  scale);	  final    double[][]    c    =    equations.getCompleteState(t);    	non-compiled	[CE]  cannot  find  symbol  scale	112	None	replace
86	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  t);  [CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCompleteState(t,  t);	  final    double[][]    c    =    equations.getCompleteState(t);    	non-compiled	[CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	112	None	replace
87	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  error);  [CE]  cannot  find  symbol  error  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  error);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCompleteState(t,  error);	  final    double[][]    c    =    equations.getCompleteState(t);    	non-compiled	[CE]  cannot  find  symbol  error	112	None	replace
88	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	boolean  forward  =  equations.getTime()  >  t;	  final    boolean    forward    =    equations.getTime()    >    t;    boolean    forward    =    equations.getTime()    >    t;    	compilable	timeout	98	1	replace
89	[BUG]  [BUGGY]  boolean  forward  =  equations.getTime()  >  t;  timeout  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	boolean  forward  =  equations.getTime()  >  t;	  final    boolean    forward    =    equations.getTime()    >    t;    boolean    forward    =    equations.getTime()    >    t;    	compilable	timeout	98	1	replace
90	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  Boolean  forward  =  equations.getTime()  >  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	Boolean  forward  =  equations.getTime()  >  t;	  final    boolean    forward    =    equations.getTime()    >    t;    boolean    forward    =    equations.getTime()    >    t;    	compilable	timeout	98	1	replace
91	[BUG]  [BUGGY]  Boolean  forward  =  equations.getTime()  >  t;  timeout  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  Boolean  forward  =  equations.getTime()  >  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	Boolean  forward  =  equations.getTime()  >  t;	  final    boolean    forward    =    equations.getTime()    >    t;    boolean    forward    =    equations.getTime()    >    t;    	compilable	timeout	98	1	replace
92	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getDifference();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getDifference();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getDifference();	  final    boolean    forward    =    t    ==    equations.getDifference();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
93	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null.getDifference();  [CE]  <null>  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null.getDifference();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null.getDifference();	  final    boolean    forward    =    t    ==    equations.getDifference();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	108	None	replace
94	[BUG]  [BUGGY]  final  boolean  forward  =  equations  ==  null.getDifference();  [CE]  <null>  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations  ==  null.getDifference();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations  ==  null.getDifference();	  final    boolean    forward    =    t    ==    equations.getDifference();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	108	None	replace
95	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  c);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	83	None	replace
96	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getWeeks();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getWeeks();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getWeeks();	  final    boolean    forward    =    t    ==    equations.getWeeks();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
97	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null.getWeeks();  [CE]  <null>  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null.getWeeks();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null.getWeeks();	  final    boolean    forward    =    t    ==    equations.getWeeks();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	106	None	replace
98	[BUG]  [BUGGY]  final  boolean  forward  =  equations  ==  null.getWeeks();  [CE]  <null>  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations  ==  null.getWeeks();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations  ==  null.getWeeks();	  final    boolean    forward    =    t    ==    equations.getWeeks();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	106	None	replace
99	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	91	None	replace
100	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getNext();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getNext();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getNext();	  final    boolean    forward    =    t    ==    equations.getNext();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
101	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null.getNext();  [CE]  <null>  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null.getNext();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null.getNext();	  final    boolean    forward    =    t    ==    equations.getNext();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	78	None	replace
102	[BUG]  [BUGGY]  final  boolean  forward  =  equations  ==  null.getNext();  [CE]  <null>  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations  ==  null.getNext();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations  ==  null.getNext();	  final    boolean    forward    =    t    ==    equations.getNext();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	78	None	replace
103	[BUG]  [BUGGY]  setEquations(stages);  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	setEquations(stages);	  sanityChecks(escapes,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	58	None	replace
104	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getLastTime();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t!=  equations.getLastTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getLastTime();	  final    boolean    forward    =    t!=    equations.getFirstTime();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
105	[BUG]  [BUGGY]  final  boolean  forward  =  t  >>  equations.getFirstTime();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  >>  equations.getFirstTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  >>  equations.getFirstTime();	  final    boolean    forward    =    t!=    equations.getFirstTime();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
106	[BUG]  [BUGGY]  t.report(JSError.make(t,  scaledH,  sanityChecks()));  [CE]  cannot  find  symbol  scaledH  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  scaledH,  sanityChecks()));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  scaledH,  sanityChecks()));	  t.report(JSError.make(t,    sanityChecks()));    	non-compiled	[CE]  cannot  find  symbol  scaledH	28	None	replace
107	[BUG]  [BUGGY]  t.report(JSError.make(t,  error,  sanityChecks()));  [CE]  cannot  find  symbol  error  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  error,  sanityChecks()));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  error,  sanityChecks()));	  t.report(JSError.make(t,    sanityChecks()));    	non-compiled	[CE]  cannot  find  symbol  error	28	None	replace
108	[BUG]  [BUGGY]  t.report(JSError.make(t,  sanityChecks(),  error));  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  sanityChecks(),  error));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  sanityChecks(),  error));	  t.report(JSError.make(t,    sanityChecks()));    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	28	None	replace
109	[BUG]  [BUGGY]  t.report(JSError.make(t,  getSanityChecks()));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  getSanityChecks()));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  getSanityChecks()));	  t.report(JSError.make(t,    sanityChecks()));    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
110	[BUG]  [BUGGY]  double  filteredNextIsLast  =  false;  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  double  filteredNextIsLast  =  false;  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	double  filteredNextIsLast  =  false;	  double    filteredNextIsLast    =    true;    	non-compiled	[CE]  incompatible  types	85	None	replace
111	[BUG]  [BUGGY]  Double  filteredNextIsLast  =  false;  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  Double  filteredNextIsLast  =  false;  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	Double  filteredNextIsLast  =  false;	  double    filteredNextIsLast    =    true;    	non-compiled	[CE]  incompatible  types	85	None	replace
112	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setTrace(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setTrace(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setTrace(equations);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setTrace(equations);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
113	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(equations,  t);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquations(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquations(equations,  t);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setTrace(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	115	None	replace
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	10	1	add
115	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	10	1	add
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	10	1	add
117	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	10	1	add
118	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setDotTmp(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setDotTmp(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setDotTmp(equations);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
119	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquals(equations);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquals(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquals(equations);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
120	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquivalence(equations);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
121	[BUG]  [BUGGY]  sanityChecks(t,  c);  [CE]  no  suitable  method  found  for  sanityChecks(double,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  c);	          sanityChecks(equations,    t);    sanityChecks(c,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,double[])	14	None	replace
122	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setStatements(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setStatements(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setStatements(equations);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStatements(equations);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
123	[BUG]  [BUGGY]  sanityChecks(equations,  t);  }  else  {  setEquations(equations);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  }  else  {  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  }  else  {  setEquations(equations);  }	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
124	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getWidth();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getWidth();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getWidth();	  final    boolean    forward    =    t    ==    equations.getWidth();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
125	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getWidth();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t!=  equations.getWidth();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getWidth();	  final    boolean    forward    =    t    ==    equations.getWidth();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
126	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null.getWidth();  [CE]  <null>  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null.getWidth();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null.getWidth();	  final    boolean    forward    =    t    ==    equations.getWidth();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	107	None	replace
127	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getNextIsLast();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getNextIsLast();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getNextIsLast();	  final    boolean    forward    =    t    ==    equations.getNextIsLast();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
128	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getNextIsLast();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t!=  equations.getNextIsLast();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getNextIsLast();	  final    boolean    forward    =    t    ==    equations.getNextIsLast();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
129	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null.getNextIsLast();  [CE]  <null>  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null.getNextIsLast();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null.getNextIsLast();	  final    boolean    forward    =    t    ==    equations.getNextIsLast();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	6	None	replace
130	[BUG]  [BUGGY]  final  long  forward  =  equations.getTime();  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  long  forward  =  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  long  forward  =  equations.getTime();	  final    int    forward    =    equations.getTime();    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
131	[BUG]  [BUGGY]  final  float  forward  =  equations.getTime();  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  float  forward  =  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  float  forward  =  equations.getTime();	  final    int    forward    =    equations.getTime();    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
132	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getScale(t);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getScale(t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getScale(t);	  final    double[][]    c    =    equations.getScale();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	36	1	add
134	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	36	1	add
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	36	1	add
136	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	36	1	add
137	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setDotTmp(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setDotTmp(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setDotTmp(equations);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
138	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations,  t);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquivalence(equations,  t);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
139	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setDotTmp(yTmp);  [CE]  cannot  find  symbol  yTmp  [FE]            AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setDotTmp(yTmp);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setDotTmp(yTmp);	  	non-compiled	[CE]  cannot  find  symbol  yTmp	36	None	add
140	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(c);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquations(c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquations(c);	  sanityChecks(t,    c);    setEquations(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	50	None	replace
141	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setStages(equations);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setStages(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setStages(equations);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStages(equations);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
142	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  filteredNextIsLast;  [CE]  cannot  find  symbol  filteredNextIsLast  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  filteredNextIsLast;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  filteredNextIsLast;	  final    boolean    forward    =    equations.getTime()    >    error;    	non-compiled	[CE]  cannot  find  symbol  filteredNextIsLast	100	None	replace
143	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  firstTime;  [CE]  cannot  find  symbol  firstTime  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  firstTime;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  firstTime;	  final    boolean    forward    =    equations.getTime()    >    error;    	non-compiled	[CE]  cannot  find  symbol  firstTime	100	None	replace
144	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  scale;  [CE]  cannot  find  symbol  scale  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  scale;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  scale;	  final    boolean    forward    =    equations.getTime()    >    error;    	non-compiled	[CE]  cannot  find  symbol  scale	100	None	replace
145	[BUG]  [BUGGY]  final  boolean  forward  =  equations  ==  null.getWrapped();  [CE]  <null>  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations  ==  null.getWrapped();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations  ==  null.getWrapped();	  final    boolean    forward    =    t    ==    equations.getWrapped();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	95	None	replace
146	[BUG]  [BUGGY]  Final  boolean  forward  =  t  ==  equations.getTime();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  Final  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	Final  boolean  forward  =  t  ==  equations.getTime();	  final    boolean    forward    =    t    ==    equations.getTime();    Final    boolean    forward    =    t    ==    equations.getTime();    	non-compiled	[CE]  not  a  statement	16	None	replace
147	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(equations,  c);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquations(equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquations(equations,  c);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	38	None	replace
148	[BUG]  [BUGGY]  sanityChecks(t,  equations);  setEquations(equations,  c);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE)  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  equations);  setEquations(equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  equations);  setEquations(equations,  c);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE)	38	None	replace
149	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null?  false  :  equations.getWrapped();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null?  false  :  equations.getWrapped();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null?  false  :  equations.getWrapped();	  final    boolean    forward    =    equations.getWrapped();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
150	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null?  true  :  equations.getWrapped();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null?  true  :  equations.getWrapped();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null?  true  :  equations.getWrapped();	  final    boolean    forward    =    equations.getWrapped();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
151	[BUG]  [BUGGY]  final  int  forward  =  equations.getWrapped();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  int  forward  =  equations.getWrapped();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  int  forward  =  equations.getWrapped();	  final    boolean    forward    =    equations.getWrapped();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	8	1	add
153	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	8	1	add
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	8	1	add
155	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	8	1	add
156	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	8	1	add
157	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	8	1	add
158	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(c,  t);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(double[],double)  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(c,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(c,  t);  setEquations(equations);	  	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],double)	8	None	add
159	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  final  boolean  forward  =  equations.getTime()  <  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  final  boolean  forward  =  equations.getTime()  <  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    <    t;    final  boolean  forward  =  equations.getTime()  <  t;	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	22	None	add
160	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  Final  boolean  forward  =  equations.getTime()  <  t;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  Final  boolean  forward  =  equations.getTime()  <  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    <    t;    Final  boolean  forward  =  equations.getTime()  <  t;	  	non-compiled	[CE]  not  a  statement	22	None	add
161	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  boolean  forward  =  equations.getTime()  <  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  boolean  forward  =  equations.getTime()  <  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    <    t;    boolean  forward  =  equations.getTime()  <  t;	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	22	None	add
162	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  final  boolean  forward  =  equations.getTime()  >=  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  final  boolean  forward  =  equations.getTime()  >=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    <    t;    final  boolean  forward  =  equations.getTime()  >=  t;	  	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	22	None	add
163	[BUG]  [BUGGY]  sanityChecks(equaries,  t);  [CE]  cannot  find  symbol  equaries  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equaries,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equaries,  t);	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  equaries	12	None	replace
164	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getWeeks()  <  t;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getWeeks()  <  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getWeeks()  <  t;	  final    boolean    forward    =    t    <    equations.getWeeks();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
165	[BUG]  [BUGGY]  final  boolean  forward  =  equations  <  t.getWeeks();  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations  <  t.getWeeks();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations  <  t.getWeeks();	  final    boolean    forward    =    t    <    equations.getWeeks();    	non-compiled	[CE]  double  cannot  be  dereferenced	114	None	replace
166	[BUG]  [BUGGY]  final  boolean  forward  =  equations.hasWeeks();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.hasWeeks();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.hasWeeks();	  final    boolean    forward    =    t    <    equations.getWeeks();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
167	[BUG]  [BUGGY]  final  int  forward  =  equations.getDestination();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  int  forward  =  equations.getDestination();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  int  forward  =  equations.getDestination();	  final    boolean    forward    =    equations.getDestination();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
168	[BUG]  [BUGGY]  final  boolean  forward  =  equations.isDestination();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.isDestination();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.isDestination();	  final    boolean    forward    =    equations.getDestination();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
169	[BUG]  [BUGGY]  final  double  forward  =  equations.getDestination();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  equations.getDestination();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  equations.getDestination();	  final    boolean    forward    =    equations.getDestination();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
170	[BUG]  [BUGGY]  safeSanityChecks(equations,  t);  setEquations(equations);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  safeSanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	safeSanityChecks(equations,  t);  setEquations(equations);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
171	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(equates);  [CE]  cannot  find  symbol  equates  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquations(equates);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquations(equates);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  cannot  find  symbol  equates	90	None	replace
172	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getFirstTime()!=  t;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getFirstTime()!=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getFirstTime()!=  t;	  final    boolean    forward    =    equations.getTime()!=    t;    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  <  t  +  1;	  final    boolean    forward    =    equations.getTime()    >    t    +    1;    timeout    	compilable	  [FE]  AssertionError  	73	1	replace
174	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t  +  1;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  <  t  +  1;	  final    boolean    forward    =    equations.getTime()    >    t    +    1;    timeout    	compilable	  [FE]  AssertionError  	73	1	replace
175	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  >=  t  +  1;	  final    boolean    forward    =    equations.getTime()    >    t    +    1;    timeout    	compilable	timeout	73	1	replace
176	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t  +  1;  timeout  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >=  t  +  1;	  final    boolean    forward    =    equations.getTime()    >    t    +    1;    timeout    	compilable	timeout	73	1	replace
177	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  ==  t  +  1;	  final    boolean    forward    =    equations.getTime()    >    t    +    1;    timeout    	compilable	timeout	73	1	replace
178	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t  +  1;  timeout  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  ==  t  +  1;	  final    boolean    forward    =    equations.getTime()    >    t    +    1;    timeout    	compilable	timeout	73	1	replace
179	[BUG]  [BUGGY]  final  double  forward  =  t  ==  equations.getStartTime();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  t  ==  equations.getStartTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  t  ==  equations.getStartTime();	  final    double    forward    =    t    ==    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
180	[BUG]  [BUGGY]  final  double  forward  =  t  ==  equations.getDestination();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  t  ==  equations.getDestination();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  t  ==  equations.getDestination();	  final    double    forward    =    t    ==    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
181	[BUG]  [BUGGY]  semifinal  boolean  forward  =  equations.getTime()  >  t;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  semifinal  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	semifinal  boolean  forward  =  equations.getTime()  >  t;	  final    boolean    forward    =    equations.getTime()    >    t;    semifinal    boolean    forward    =    equations.getTime()    >    t;    	non-compiled	[CE]  not  a  statement	97	None	replace
182	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCount()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getCount()  +  1;  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCount()  +  1;	  final    double[][]    c    =    equations.getCount();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
183	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCount()  *  2;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getCount()  *  2;  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCount()  *  2;	  final    double[][]    c    =    equations.getCount();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
184	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getStartTime();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  ==  equations.getStartTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getStartTime();	  final    boolean    forward    =    t    ==    equations.getEndTime();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
185	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getEndTime();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getEndTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getEndTime();	  final    boolean    forward    =    t    ==    equations.getEndTime();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
186	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getEndTime();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t!=  equations.getEndTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getEndTime();	  final    boolean    forward    =    t    ==    equations.getEndTime();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
187	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getFirstTime()  ==  t;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getFirstTime()  ==  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getFirstTime()  ==  t;	  final    boolean    forward    =    equations.getTime()    ==    t;    timeout    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
188	[BUG]  [BUGGY]  final  double  forward  =  equations.getTime()  -  1;  [CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  equations.getTime()  -  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  equations.getTime()  -  1;	  final    double    forward    =    equations.getTime();    	non-compiled	[CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])	2	None	replace
189	[BUG]  [BUGGY]  final  double  forward  =  equations.getTime()  /  2;  [CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  equations.getTime()  /  2;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  equations.getTime()  /  2;	  final    double    forward    =    equations.getTime();    	non-compiled	[CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])	2	None	replace
190	[BUG]  [BUGGY]  final  double  forward  =  equations.getTime()  +  1;  [CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  equations.getTime()  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  equations.getTime()  +  1;	  final    double    forward    =    equations.getTime();    	non-compiled	[CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])	2	None	replace
191	[BUG]  [BUGGY]  sanityChecks(equiv,  t);  setEquations(stages);  [CE]  cannot  find  symbol  equiv  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equiv,  t);  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equiv,  t);  setEquations(stages);	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    	non-compiled	[CE]  cannot  find  symbol  equiv	79	None	replace
192	[BUG]  [BUGGY]  sanityChecks(t,  stages);  [CE]  cannot  find  symbol  stages  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  stages);	  sanityChecks(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	68	None	replace
193	[BUG]  [BUGGY]  sanityChecks(t,  c,  equations);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(double,double[],ExpandableStatefulODE)  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  c,  equations);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  c,  equations);  setEquations(equations);	  sanityChecks(t,    equations,    c);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,double[],ExpandableStatefulODE)	49	None	replace
194	[BUG]  [BUGGY]  final  double  forward  =  t!=  equations.getTime();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  t!=  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  t!=  equations.getTime();	  final    boolean    forward    =    t!=    equations.getTime();    final    boolean    forward    =    t    ==    equations.getTime();    	non-compiled	[CE]  incompatible  types	63	None	replace
195	[BUG]  [BUGGY]  final  boolean  forward  =  equations  ==  null.getRange();  [CE]  <null>  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations  ==  null.getRange();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations  ==  null.getRange();	  final    boolean    forward    =    t    ==    equations.getRange();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	96	None	replace
196	[BUG]  [BUGGY]  final  double  forward  =  t  +  equations.getTime();  [CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  t  +  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  t  +  equations.getTime();	  final    double    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])	24	None	replace
197	[BUG]  [BUGGY]  final  double  forward  =  equations.getTime()  -  t;  [CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  equations.getTime()  -  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  equations.getTime()  -  t;	  final    double    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  no  suitable  method  found  for  reinitialize(EmbeddedRungeKuttaIntegrator,double[],double[][],double,EquationsMapper,EquationsMapper[])	24	None	replace
198	[BUG]  [BUGGY]  sanityChecks(t,  c);  setEquations(equations,  t);  [CE]  no  suitable  method  found  for  sanityChecks(double,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  c);  setEquations(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  c);  setEquations(equations,  t);	  sanityChecks(equations,    c);    setEquations(equations,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,double[])	121	None	replace
199	[BUG]  [BUGGY]  sanityChecks(t,  c);  setEquations(equations,  c);  [CE]  no  suitable  method  found  for  sanityChecks(double,double[])  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  c);  setEquations(equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  c);  setEquations(equations,  c);	  sanityChecks(equations,    c);    setEquations(equations,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,double[])	121	None	replace
200	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t);  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  t);	  final    boolean    forward    =    equations.getTime()    >    t;    final    boolean    forward    =    equations.getTime()    >    t);    	non-compiled	[CE]  ';'  expected	21	None	replace
201	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t);  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  <  t);	  final    boolean    forward    =    equations.getTime()    >    t;    final    boolean    forward    =    equations.getTime()    >    t);    	non-compiled	[CE]  ';'  expected	21	None	replace
202	[BUG]  [BUGGY]  sanityChecks(t,  equations,  c);  setEquations(stages);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  equations,  c);  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  equations,  c);  setEquations(stages);	  sanityChecks(equations,    c);    setEquations(stages);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])	80	None	replace
203	[BUG]  [BUGGY]  sanityChecks(t,  c);  setEquations(stages);  [CE]  no  suitable  method  found  for  sanityChecks(double,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(t,  c);  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(t,  c);  setEquations(stages);	  sanityChecks(equations,    c);    setEquations(stages);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,double[])	80	None	replace
204	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getFirstTime();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getFirstTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getFirstTime();	  final    boolean    forward    =    t    ==    equations.getFirstTime();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
205	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getLastTime();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  ==  equations.getLastTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getLastTime();	  final    boolean    forward    =    t    ==    equations.getFirstTime();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
206	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null.getFirstTime();  [CE]  <null>  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null.getFirstTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null.getFirstTime();	  final    boolean    forward    =    t    ==    equations.getFirstTime();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	4	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	41	1	add
208	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	41	1	add
209	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	41	1	add
210	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	41	1	add
211	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquals(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquals(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquals(equations);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
212	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setDotTmp(equations);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setDotTmp(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setDotTmp(equations);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
213	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getSecondState();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getSecondState();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getSecondState();	  final    double[][]    c    =    equations.getCurrentState();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
214	[BUG]  [BUGGY]  final  double[][]  c  =  equations.nextState();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.nextState();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.nextState();	  final    double[][]    c    =    equations.getCurrentState();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
215	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getStdCurrentState();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getStdCurrentState();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getStdCurrentState();	  final    double[][]    c    =    equations.getCurrentState();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
216	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  Equations.getTime();  [CE]  cannot  find  symbol  Equations  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  <  Equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  <  Equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    final    boolean    forward    =    t    <    Equations.getTime();    	non-compiled	[CE]  cannot  find  symbol  Equations	54	None	replace
217	[BUG]  [BUGGY]  Final  boolean  forward  =  t  <  equations.getTime();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  Final  boolean  forward  =  t  <  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	Final  boolean  forward  =  t  <  equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    Final    boolean    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  not  a  statement	52	None	replace
218	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  0;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  >  0;	  final    boolean    forward    =    equations.getTime()    >    error;    	compilable	timeout	100	1	replace
219	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  0;  timeout  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  0;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  0;	  final    boolean    forward    =    equations.getTime()    >    error;    	compilable	timeout	100	1	replace
220	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStages(equations);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStages(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStages(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStages(equations);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
221	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setStages(equations);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setStages(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setStages(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStages(equations);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
222	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStages(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStages(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStages(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStages(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	104	None	replace
223	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  setStages(equations);  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  setStages(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  setStages(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStages(equations);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
224	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getEmptyStatement(t);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getEmptyStatement(t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getEmptyStatement(t);	  final    double[][]    c    =    equations.getEmptyStatement();    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
225	[BUG]  [BUGGY]  sanityChecks(equivalences,  t);  [CE]  cannot  find  symbol  equivalences  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equivalences,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equivalences,  t);	  sanityChecks(stages,    t);    setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol  equivalences	46	None	replace
226	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >=  t);  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >=  t);	  final    boolean    forward    =    equations.getTime()    >    t;    final    boolean    forward    =    equations.getTime()    >    t);    	non-compiled	[CE]  ';'  expected	21	None	replace
227	[BUG]  [BUGGY]  sanityChecks(stages,  t);  sanityChecks(stages,  t);  setEquations(stages);  [CE]  cannot  find  symbol  stages  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(stages,  t);  sanityChecks(stages,  t);  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);  sanityChecks(stages,  t);  setEquations(stages);	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  stages	11	None	replace
228	[BUG]  [BUGGY]  final  double[][]  c  =  equations.cloneTree();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.cloneTree();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.cloneTree();	  final    double[][]    c    =    equations.getCurrentState();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
229	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStones(equations);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
230	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  }  else  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  }  else  {  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  }  else  {	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStones(equations);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
231	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setStones(equations);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setStones(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setStones(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStones(equations);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
232	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null?  false  :  equations.getDestination();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null?  false  :  equations.getDestination();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null?  false  :  equations.getDestination();	  final    boolean    forward    =    equations.getDestination();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
233	[BUG]  [BUGGY]  final  boolean  forward  =  Equation.getDestination();  [CE]  cannot  find  symbol  Equation  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  Equation.getDestination();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  Equation.getDestination();	  final    boolean    forward    =    equations.getDestination();    	non-compiled	[CE]  cannot  find  symbol  Equation	3	None	replace
234	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  semifinal  boolean  forward  =  equations.getTime()  <  t;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  <  t;  semifinal  boolean  forward  =  equations.getTime()  <  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    <    t;    semifinal  boolean  forward  =  equations.getTime()  <  t;	  	non-compiled	[CE]  not  a  statement	22	None	add
235	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentEquivalenceState();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getCurrentEquivalenceState();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCurrentEquivalenceState();	  final    double[][]    c    =    equations.getEquivalenceState();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
236	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getEquivalenceState(t);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getEquivalenceState(t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getEquivalenceState(t);	  final    double[][]    c    =    equations.getEquivalenceState();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
237	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(escapes,  t);  setEquations(stages);  }  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(escapes,  t);  setEquations(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(escapes,  t);  setEquations(stages);  }	  sanityChecks(escapes,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	58	None	replace
238	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(escapes,  t);  setEquations(stages);  }  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(escapes,  t);  setEquations(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(escapes,  t);  setEquations(stages);  }	  sanityChecks(escapes,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	58	None	replace
239	[BUG]  [BUGGY]  nan  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  nan  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	nan	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  not  a  statement	37	None	replace
240	[BUG]  [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  stages  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  stages)  {  sanityChecks(stages,  t);  setEquations(equations);  }	  sanityChecks(stages,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  stages	89	None	replace
241	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  t);  setEquations(stages);  }  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  t);  setEquations(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(stages,  t);  setEquations(stages);  }	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	57	None	replace
242	[BUG]  [BUGGY]  final  boolean  forward  =  equations  ==  null.getFirstTime();  [CE]  <null>  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations  ==  null.getFirstTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations  ==  null.getFirstTime();	  final    boolean    forward    =    t    ==    equations.getFirstTime();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	4	None	replace
243	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()!=  error;  [CE]  cannot  find  symbol  error  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()!=  error;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()!=  error;	  final    boolean    forward    =    equations.getTime()!=    t;    	non-compiled	[CE]  cannot  find  symbol  error	77	None	replace
244	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  error;  [CE]  cannot  find  symbol  error  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  error;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  ==  error;	  final    boolean    forward    =    equations.getTime()!=    t;    	non-compiled	[CE]  cannot  find  symbol  error	77	None	replace
245	[BUG]  [BUGGY]  t.report(JSError.make(t,  setSanityChecks()));  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  setSanityChecks()));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  setSanityChecks()));	  t.report(JSError.make(t,    sanityChecks()));    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
246	[BUG]  [BUGGY]  t.report(JSError.make(t,  setEquations()));  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  setEquations()));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  setEquations()));	  t.report(JSError.make(t,    sanityChecks()));    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	28	None	replace
247	[BUG]  [BUGGY]  sanityChecks(stages,  t);  sanityChecks(equals,  t);  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(stages,  t);  sanityChecks(equals,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);  sanityChecks(equals,  t);	          sanityChecks(equations,    t);    sanityChecks(equals,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	13	None	replace
248	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null?  t.getWrapped()  :  equations.getWrapped();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null?  t.getWrapped()  :  equations.getWrapped();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null?  t.getWrapped()  :  equations.getWrapped();	  final    boolean    forward    =    equations.getWrapped();    	non-compiled	[CE]  double  cannot  be  dereferenced	84	None	replace
249	[BUG]  [BUGGY]  sanityChecks(stages,  t);  setStatements(equations);  [CE]  cannot  find  symbol  stages  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(stages,  t);  setStatements(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  t);  setStatements(equations);	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	42	None	replace
250	[BUG]  [BUGGY]  sanityChecks(equations,  c,  stages);  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  c,  stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c,  stages);	  sanityChecks(equations,    c);    	non-compiled	[CE]  cannot  find  symbol  stages	69	None	replace
251	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  c);  setEquations(stages);  }  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  c);  setEquations(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  c);  setEquations(stages);  }	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    	non-compiled	[CE]  cannot  find  symbol  stages	79	None	replace
252	[BUG]  [BUGGY]  if(equations!=  null)  {  sanityChecks(equations,  t);  setEquations(stages);  }  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(equations!=  null)  {  sanityChecks(equations,  t);  setEquations(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(equations!=  null)  {  sanityChecks(equations,  t);  setEquations(stages);  }	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    	non-compiled	[CE]  cannot  find  symbol  stages	79	None	replace
253	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  Final  boolean  forward  =  equations.getTime()!=  t;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()!=  t;  Final  boolean  forward  =  equations.getTime()!=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()!=    t;    Final  boolean  forward  =  equations.getTime()!=  t;	  	non-compiled	[CE]  not  a  statement	76	None	add
254	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setTrace(equations);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
255	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setTrace(equations);  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setTrace(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setTrace(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setTrace(equations);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
256	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  }  else  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  }  else  {  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  }  else  {	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setTrace(equations);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
257	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquals(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquals(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquals(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquals(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	39	None	replace
258	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquals(equations);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquals(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquals(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquals(equations);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
259	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquals(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquals(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquals(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquals(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	39	None	replace
260	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  a);  [CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getCompleteState(t,  a);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getCompleteState(t,  a);	  final    double[][]    c    =    equations.getCompleteState(t);    	non-compiled	[CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	112	None	replace
261	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null.getEndTime();  [CE]  <null>  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null.getEndTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null.getEndTime();	  final    boolean    forward    =    t    ==    equations.getEndTime();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	7	None	replace
262	[BUG]  [BUGGY]  final  boolean  forward  =  equations  ==  null.getEndTime();  [CE]  <null>  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations  ==  null.getEndTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations  ==  null.getEndTime();	  final    boolean    forward    =    t    ==    equations.getEndTime();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	7	None	replace
263	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  }  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	88	None	replace
264	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  }  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	88	None	replace
265	[BUG]  [BUGGY]  final  boolean  forward  =  t  >>  equations.getWrapped();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  >>  equations.getWrapped();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  >>  equations.getWrapped();	  final    boolean    forward    =    t!=    equations.getWrapped();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
266	[BUG]  [BUGGY]  sanityChecks(c,  errors,  t);  [CE]  cannot  find  symbol  errors  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(c,  errors,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(c,  errors,  t);	          sanityChecks(equations,    t);    sanityChecks(c,    t);    	non-compiled	[CE]  cannot  find  symbol  errors	14	None	replace
267	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [CE]  cannot  find  symbol  stages  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	86	None	replace
268	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [CE]  cannot  find  symbol  stages  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	86	None	replace
269	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	86	None	replace
270	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStatements(equations);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStatements(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setStatements(equations);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
271	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStandardEquals(equations,  t);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStandardEquals(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setStandardEquals(equations,  t);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
272	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEndTime(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEndTime(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEndTime(equations);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
273	[BUG]  [BUGGY]  MutableState.checkNotNull(stages);  [CE]  cannot  find  symbol  stages  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  MutableState.checkNotNull(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	MutableState.checkNotNull(stages);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  stages	81	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	10	1	add
275	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	10	1	add
276	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	10	1	add
277	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);	  	compilable	  [FE]  AssertionError  	10	1	add
278	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStatements(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStatements(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setStatements(equations);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
279	[BUG]  [BUGGY]  final  double  forward  =  t  <  equations.getStartTime();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  t  <  equations.getStartTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  t  <  equations.getStartTime();	  final    double    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
280	[BUG]  [BUGGY]  final  boolean  forward  =  equations  ==  null.getWidth();  [CE]  <null>  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations  ==  null.getWidth();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations  ==  null.getWidth();	  final    boolean    forward    =    t    ==    equations.getWidth();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	107	None	replace
281	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStatements(equations);  }  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStatements(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStatements(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStatements(equations);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
282	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStatements(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStatements(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStatements(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStatements(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	102	None	replace
283	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setStatements(equations);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setStatements(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  setStatements(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStatements(equations);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
284	[BUG]  [BUGGY]  final  double  forward  =  equations.getStartTime();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  equations.getStartTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  equations.getStartTime();	  final    double    forward    =    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
285	[BUG]  [BUGGY]  sanityChecks(equations,  b);  setEquations(stages);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  b);  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  b);  setEquations(stages);	  sanityChecks(equations,    b);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	101	None	replace
286	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  [CE]  cannot  find  symbol  stages  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	9	None	replace
287	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  [CE]  cannot  find  symbol  stages  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	9	None	replace
288	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  stages  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	9	None	replace
289	[BUG]  [BUGGY]  final  boolean  forward  =  t  >=  Equations.getTime();  [CE]  cannot  find  symbol  Equations  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  >=  Equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  >=  Equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    final    boolean    forward    =    t    <    Equations.getTime();    	non-compiled	[CE]  cannot  find  symbol  Equations	54	None	replace
290	[BUG]  [BUGGY]  boolean  forward  =  t  <  Equations.getTime();  [CE]  cannot  find  symbol  Equations  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t  <  Equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	boolean  forward  =  t  <  Equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    final    boolean    forward    =    t    <    Equations.getTime();    	non-compiled	[CE]  cannot  find  symbol  Equations	54	None	replace
291	[BUG]  [BUGGY]  t.report(JSError.make(t,  scale));  [CE]  cannot  find  symbol  scale  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  scale));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  scale));	  t.report(JSError.make(t,    y0));    	non-compiled	[CE]  cannot  find  symbol  scale	27	None	replace
292	[BUG]  [BUGGY]  t.report(JSError.make(t,  c.length));  [CE]  cannot  find  symbol  JSError  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  c.length));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  c.length));	  t.report(JSError.make(t,    y0));    	non-compiled	[CE]  cannot  find  symbol  JSError	27	None	replace
293	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  error  +  1;  [CE]  cannot  find  symbol  error  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  error  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  error  +  1;	  final    boolean    forward    =    equations.getTime()    >    t    +    1;    timeout    	non-compiled	[CE]  cannot  find  symbol  error	73	None	replace
294	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t.length  +  1;  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t.length  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  t.length  +  1;	  final    boolean    forward    =    equations.getTime()    >    t    +    1;    timeout    	non-compiled	[CE]  double  cannot  be  dereferenced	73	None	replace
295	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  boolean  forward  =  t  >  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  boolean  forward  =  t  >  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  <  equations.getTime();  boolean  forward  =  t  >  equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    boolean    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	53	None	replace
296	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  boolean  forward  =  t  >=  equations.getTime();  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  <  equations.getTime();  boolean  forward  =  t  >=  equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    boolean    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	53	None	replace
297	[BUG]  [BUGGY]  sanityChecks(equations,  c,  stages);  setEquations(equations,  t);  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  c,  stages);  setEquations(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c,  stages);  setEquations(equations,  t);	  sanityChecks(equations,    c);    setEquations(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	121	None	replace
298	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	12	None	replace
299	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	12	None	replace
300	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	12	None	replace
301	[BUG]  [BUGGY]  luate(equations,  t);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  luate(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	luate(equations,  t);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
302	[BUG]  [BUGGY]  setSanityChecks(equations,  t);  setEquations(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  setSanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	setSanityChecks(equations,  t);  setEquations(equations);	  if(t    >    scalAbsoluteTolerance)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
303	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  final  boolean  back  =  equations.getTime()  ==  t;  [CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  final  boolean  back  =  equations.getTime()  ==  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    ==    t;    final  boolean  back  =  equations.getTime()  ==  t;	  timeout    	non-compiled	[CE]  variable  forward  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	70	None	add
304	[BUG]  [BUGGY]  sanityChecks(stages,  c);  setEquations(equations);  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(stages,  c);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  c);  setEquations(equations);	  sanityChecks(equations,    c);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	80	None	replace
305	[BUG]  [BUGGY]  sanityChecks(stages,  c);  setEquations(stages);  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(stages,  c);  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  c);  setEquations(stages);	  sanityChecks(equations,    c);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	80	None	replace
306	[BUG]  [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	38	None	replace
307	[BUG]  [BUGGY]  if(t  >  sanityChecks)  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }  [CE]  cannot  find  symbol  sanityChecks  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  sanityChecks)  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  sanityChecks)  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  sanityChecks	38	None	replace
308	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	38	None	replace
309	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquivalence(equations);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
310	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquivalence(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquivalence(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquivalence(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquivalence(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	40	None	replace
311	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  }  else  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  }  else  {  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquivalence(equations);  }  else  {	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquivalence(equations);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
312	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setNegativeEquations(equations);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setNegativeEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setNegativeEquations(equations);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
313	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEndEquations(equations);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEndEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEndEquations(equations);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
314	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setStatements(equations);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  setStatements(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  setStatements(equations);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
315	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  setEquivalences(stages);  }  [CE]  cannot  find  symbol  stages  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  setEquivalences(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  setEquivalences(stages);  }	  sanityChecks(equations,    t);    setEquivalences(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	110	None	replace
316	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(escapes,  t);  setEquals(stages);  }  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(escapes,  t);  setEquals(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(escapes,  t);  setEquals(stages);  }	  sanityChecks(escapes,    t);    setEquals(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	59	None	replace
317	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  stages  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  stages	87	None	replace
318	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  stages	87	None	replace
319	[BUG]  [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  forward  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(forward)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	87	None	replace
320	[BUG]  [BUGGY]  semi.final  boolean  forward  =  equations.getTime()  >  t;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  semi.final  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	semi.final  boolean  forward  =  equations.getTime()  >  t;	  final    boolean    forward    =    equations.getTime()    >    t;    semifinal    boolean    forward    =    equations.getTime()    >    t;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
321	[BUG]  [BUGGY]  sanityChecks(stages,  c.length);  setEquations(equations);  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(stages,  c.length);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(stages,  c.length);  setEquations(equations);	  sanityChecks(equations,    c.length);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  stages	99	None	replace
322	[BUG]  [BUGGY]  sanityChecks(equations,  c.length);  setEquations(stages);  [CE]  cannot  find  symbol  stages  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  c.length);  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c.length);  setEquations(stages);	  sanityChecks(equations,    c.length);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  stages	99	None	replace
323	[BUG]  [BUGGY]  if(c.length!=  2)  {  sanityChecks(equations,  c.length);  setEquations(equations);  }  [CE]  cannot  find  symbol  forward  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(c.length!=  2)  {  sanityChecks(equations,  c.length);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(c.length!=  2)  {  sanityChecks(equations,  c.length);  setEquations(equations);  }	  sanityChecks(equations,    c.length);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	99	None	replace
324	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  timeout;  [CE]  cannot  find  symbol  timeout  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  timeout;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  ==  timeout;	  final    boolean    forward    =    equations.getTime()    ==    t;    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	71	None	replace
325	[BUG]  [BUGGY]  final  boolean  forward  =  t  >>  equations.getRange();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  >>  equations.getRange();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  >>  equations.getRange();	  final    boolean    forward    =    t!=    equations.getRange();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
326	[BUG]  [BUGGY]  luate(equations,  t);  setEquations(equivalences);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  luate(equations,  t);  setEquations(equivalences);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	luate(equations,  t);  setEquations(equivalences);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equivalences);    }    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
327	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getScaleEquivalence();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getScaleEquivalence();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getScaleEquivalence();	  final    double[][]    c    =    equations.getScale();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
328	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getSlope();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getSlope();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getSlope();	  final    double[][]    c    =    equations.getScale();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
329	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getScaleArray();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getScaleArray();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getScaleArray();	  final    double[][]    c    =    equations.getScale();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
330	[BUG]  [BUGGY]  double  filteredNextIsLast  =  null;  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  double  filteredNextIsLast  =  null;  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	double  filteredNextIsLast  =  null;	  double    filteredNextIsLast    =    true;    	non-compiled	[CE]  incompatible  types	85	None	replace
331	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	12	None	replace
332	[BUG]  [BUGGY]  if(stages  ==  null  ||  stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null  ||  stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null  ||  stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	12	None	replace
333	[BUG]  [BUGGY]  t.initCause(equations);  setEquations(equations,  c);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.initCause(equations);  setEquations(equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.initCause(equations);  setEquations(equations,  c);	  sanityChecks(equations,    c);    setEquations(equations,    t);    	non-compiled	[CE]  double  cannot  be  dereferenced	121	None	replace
334	[BUG]  [BUGGY]  t.initCause(equations);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.initCause(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.initCause(equations);	  sanityChecks(equations,    c);    setEquations(equations,    t);    	non-compiled	[CE]  double  cannot  be  dereferenced	121	None	replace
335	[BUG]  [BUGGY]  sanityChecks(equations,  c.length);  [CE]  cannot  find  symbol  forward  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c.length);	  sanityChecks(equations,    c.length);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	99	None	replace
336	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  safety;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  >  safety;	  final    boolean    forward    =    equations.getTime()    >    error;    	compilable	timeout	100	1	replace
337	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  safety;  timeout  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  safety;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  safety;	  final    boolean    forward    =    equations.getTime()    >    error;    	compilable	timeout	100	1	replace
338	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  c.length;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  >  c.length;	  final    boolean    forward    =    equations.getTime()    >    error;    	compilable	timeout	100	1	replace
339	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  c.length;  timeout  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  c.length;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  c.length;	  final    boolean    forward    =    equations.getTime()    >    error;    	compilable	timeout	100	1	replace
340	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  semifinal  boolean  forward  =  equations.getTime()  ==  t;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  ==  t;  semifinal  boolean  forward  =  equations.getTime()  ==  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    ==    t;    semifinal  boolean  forward  =  equations.getTime()  ==  t;	  timeout    	non-compiled	[CE]  not  a  statement	70	None	add
341	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equals,  t);  }  [CE]  cannot  find  symbol  equals  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equals,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equals,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equals,    t);    	non-compiled	[CE]  cannot  find  symbol  equals	13	None	replace
342	[BUG]  [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  }  else  {  sanityChecks(equals,  t);  }  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  }  else  {  sanityChecks(equals,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  }  else  {  sanityChecks(equals,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equals,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	13	None	replace
343	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquivalences(equivalences);  }  [CE]  cannot  find  symbol  equivalences  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquivalences(equivalences);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquivalences(equivalences);  }	  sanityChecks(equations,    t);    setEquivalences(equivalences);    	non-compiled	[CE]  cannot  find  symbol  equivalences	48	None	replace
344	[BUG]  [BUGGY]  sanityChecks(equations,  c);  setEquations(stages,  t);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  c);  setEquations(stages,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c);  setEquations(stages,  t);	  sanityChecks(equations,    c);    setEquations(stages);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	80	None	replace
345	[BUG]  [BUGGY]  sanityChecks(equations,  stages);  setEquations(stages);  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  stages);  setEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  stages);  setEquations(stages);	  sanityChecks(equations,    c);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	80	None	replace
346	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  stages  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	86	None	replace
347	[BUG]  [BUGGY]  final  double[][]  c  =  equations,  t.getEquivalenceState();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations,  t.getEquivalenceState();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations,  t.getEquivalenceState();	  final    double[][]    c    =    equations.getEquivalenceState();    	non-compiled	[CE]  ';'  expected	93	None	replace
348	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	boolean  forward  =  t  >=  equations.getTime();	  final    boolean    forward    =    t    >=    equations.getTime();    final    boolean    forward    =    t    >=    equations.getTime();    	compilable	  [FE]  AssertionError  	32	1	replace
349	[BUG]  [BUGGY]  boolean  forward  =  t  >=  equations.getTime();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	boolean  forward  =  t  >=  equations.getTime();	  final    boolean    forward    =    t    >=    equations.getTime();    final    boolean    forward    =    t    >=    equations.getTime();    	compilable	  [FE]  AssertionError  	32	1	replace
350	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  if(stages  ==  null)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  stages  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  if(stages  ==  null)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    if(stages  ==  null)  {  sanityChecks(equations,  t);  setEquations(equations);  }	  	non-compiled	[CE]  cannot  find  symbol  stages	8	None	add
351	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  [CE]  cannot  find  symbol  stages  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(stages,  t);  setEquations(equations);	  	non-compiled	[CE]  cannot  find  symbol  stages	8	None	add
352	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations,  t);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setEquations(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  setEquations(equations,  t);	  	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	36	None	add
353	[BUG]  [BUGGY]  final  double[][]  c  =  equations,  t.getEmptyStatement();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations,  t.getEmptyStatement();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations,  t.getEmptyStatement();	  final    double[][]    c    =    equations.getEmptyStatement();    	non-compiled	[CE]  ';'  expected	113	None	replace
354	[BUG]  [BUGGY]  final  double  forward  =  t  >  equations.getTime();  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  t  >  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  t  >  equations.getTime();	  final    double    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  incompatible  types	24	None	replace
355	[BUG]  [BUGGY]  final  double  forward  =  t  <  equations.getWeeks();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  t  <  equations.getWeeks();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  t  <  equations.getWeeks();	  final    double    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
356	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquals(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquals(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquals(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquals(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	39	None	replace
357	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  stages  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(equations);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  stages	87	None	replace
358	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(stages,  t);  [CE]  cannot  find  symbol  stages  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(stages,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(stages,  t);	  	non-compiled	[CE]  cannot  find  symbol  stages	10	None	add
359	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getSlope()!=  t;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getSlope()!=  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getSlope()!=  t;	  final    boolean    forward    =    equations.getTime()!=    t;    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
360	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStones(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStones(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStones(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStones(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	103	None	replace
361	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStones(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStones(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStones(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStones(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	103	None	replace
362	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setStones(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStones(equations);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
363	[BUG]  [BUGGY]  StaxUtil.sanityChecks(equations,  t);  setEquations(equations);  [CE]  cannot  find  symbol  StaxUtil  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  StaxUtil.sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	StaxUtil.sanityChecks(equations,  t);  setEquations(equations);	  if(t    >    scalAbsoluteTolerance)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	109	None	replace
364	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquations(equations);  }	  if(t    >    scalAbsoluteTolerance)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
365	[BUG]  [BUGGY]  final  boolean  forward  =  equations.hasDestination();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.hasDestination();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.hasDestination();	  final    boolean    forward    =    equations.getDestination();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
366	[BUG]  [BUGGY]  final  boolean  forward  =  nextIsLast  ==  equations.getNextIsLast();  [CE]  cannot  find  symbol  nextIsLast  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  nextIsLast  ==  equations.getNextIsLast();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  nextIsLast  ==  equations.getNextIsLast();	  final    boolean    forward    =    t    ==    equations.getNextIsLast();    	non-compiled	[CE]  cannot  find  symbol  nextIsLast	6	None	replace
367	[BUG]  [BUGGY]  final  double[][]  c  =  equations,  t.getCount();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations,  t.getCount();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations,  t.getCount();	  final    double[][]    c    =    equations.getCount();    	non-compiled	[CE]  ';'  expected	45	None	replace
368	[BUG]  [BUGGY]  sanityChecks(equates,  t);  setEquivalences(equivalences);  [CE]  cannot  find  symbol  equates  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equates,  t);  setEquivalences(equivalences);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equates,  t);  setEquivalences(equivalences);	  sanityChecks(stages,    t);    setEquivalences(equivalences);    	non-compiled	[CE]  cannot  find  symbol  equates	47	None	replace
369	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStatements(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStatements(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStatements(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStatements(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	102	None	replace
370	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStatements(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStatements(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStatements(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStatements(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	102	None	replace
371	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  forward  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	11	None	replace
372	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  forward  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	11	None	replace
373	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;	11	None	replace
374	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  forward  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalStateException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  forward	11	None	replace
375	[BUG]  [BUGGY]  sanityChecks(equates,  t);  setEquations(equates);  [CE]  cannot  find  symbol  equates  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equates,  t);  setEquations(equates);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equates,  t);  setEquations(equates);	  sanityChecks(stages,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  equates	89	None	replace
376	[BUG]  [BUGGY]  sanityChecks(equations,  b);  setEquations(equations,  t);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  b);  setEquations(equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  b);  setEquations(equations,  t);	  sanityChecks(equations,    b);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	101	None	replace
377	[BUG]  [BUGGY]  sanityChecks(equations,  b);  setEquations(equations,  c);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  b);  setEquations(equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  b);  setEquations(equations,  c);	  sanityChecks(equations,    b);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	101	None	replace
378	[BUG]  [BUGGY]  sanityChecks(equivations,  t);  [CE]  cannot  find  symbol  equivations  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equivations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equivations,  t);	  sanityChecks(t,    equations);    	non-compiled	[CE]  cannot  find  symbol  equivations	67	None	replace
379	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStages(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStages(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStages(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStages(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	104	None	replace
380	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStages(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStages(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setStages(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setStages(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	104	None	replace
381	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setTrace(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setTrace(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setTrace(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setTrace(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	115	None	replace
382	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setTrace(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setTrace(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setTrace(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setTrace(equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	115	None	replace
383	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  setTrace(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setTrace(equations);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
384	[BUG]  [BUGGY]  sanityChecks(equations,  error,  t);  [CE]  cannot  find  symbol  error  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  error,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  error,  t);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  error	81	None	replace
385	[BUG]  [BUGGY]  AssertionError  t  =  equations.getError();  [CE]  variable  t  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  AssertionError  t  =  equations.getError();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	AssertionError  t  =  equations.getError();	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  t  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	81	None	replace
386	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  }  [CE]  cannot  find  symbol  forward  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  forward	42	None	replace
387	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  forward  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    	non-compiled	[CE]  cannot  find  symbol  forward	42	None	replace
388	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations);  sanityChecks(equations,  t);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    	non-compiled	[CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;	42	None	replace
389	[BUG]  [BUGGY]  sanityChecks(a,  t);  [CE]  no  suitable  method  found  for  sanityChecks(double[][],double)  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(a,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(a,  t);	  sanityChecks(stages,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[][],double)	68	None	replace
390	[BUG]  [BUGGY]  if(t  >  0)  {  setEquations(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  setEquations(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  setEquations(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	83	None	replace
391	[BUG]  [BUGGY]  if(t  >  0)  {  setEquations(equations,  t);  }  else  {  setEquations(equations);  }  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  setEquations(equations,  t);  }  else  {  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  setEquations(equations,  t);  }  else  {  setEquations(equations);  }	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    setEquations(equations);    }    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	82	None	replace
392	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  }  else  {  setEquations(equations);  }  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  }  else  {  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  c);  }  else  {  setEquations(equations);  }	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    setEquations(equations);    }    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	82	None	replace
393	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  }  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  setEquations(stages);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	88	None	replace
394	[BUG]  [BUGGY]  if(t  >  sanityChecks)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  cannot  find  symbol  sanityChecks  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  sanityChecks)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  sanityChecks)  {  sanityChecks(equations,  t);  setEquations(equations);  }	  sanityChecks(equaries,    t);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  sanityChecks	66	None	replace
395	[BUG]  [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  setEquations(equations);  }	  sanityChecks(equaries,    t);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	66	None	replace
396	[BUG]  [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equaries,  t);  setEquations(equations);  }  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equaries,  t);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  sanityChecks())  {  sanityChecks(equaries,  t);  setEquations(equations);  }	  sanityChecks(equaries,    t);    setEquations(equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	66	None	replace
397	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(equivalences);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquations(equivalences);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquations(equivalences);  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equivalences);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
398	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getVisibleRange();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  ==  equations.getVisibleRange();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getVisibleRange();	  final    boolean    forward    =    t    ==    equations.getRange();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
399	[BUG]  [BUGGY]  boolean  forward  =  t  >>  equations.getTime();  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  t  >>  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	boolean  forward  =  t  >>  equations.getTime();	  final    boolean    forward    =    t    >=    equations.getTime();    final    boolean    forward    =    t    >>    equations.getTime();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	33	None	replace
400	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  final  boolean  forward  =  equations.getTime()  >  t  +  1);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  final  boolean  forward  =  equations.getTime()  >  t  +  1);  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t    +    1;    final  boolean  forward  =  equations.getTime()  >  t  +  1);	  timeout    	non-compiled	[CE]  ';'  expected	72	None	add
401	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  semifinal  boolean  forward  =  equations.getTime()  >  t  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t  +  1;  semifinal  boolean  forward  =  equations.getTime()  >  t  +  1;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final    boolean    forward    =    equations.getTime()    >    t    +    1;    semifinal  boolean  forward  =  equations.getTime()  >  t  +  1;	  timeout    	non-compiled	[CE]  not  a  statement	72	None	add
402	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getDifference();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t!=  equations.getDifference();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getDifference();	  final    boolean    forward    =    t    ==    equations.getDifference();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
403	[BUG]  [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  c);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,  t);  sanityChecks(equations,  c);  setEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	                sanityChecks(equations,        t);        setEquations(equations);        sanityChecks(equations,    t);    sanityChecks(equations,  c);  setEquations(equations);	  	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	41	None	add
404	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getVisible();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  ==  equations.getVisible();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getVisible();	  final    boolean    forward    =    t    ==    equations.getNext();    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
405	[BUG]  [BUGGY]  final  double  forward  =  equations.getSlope();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double  forward  =  equations.getSlope();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double  forward  =  equations.getSlope();	  final    double    forward    =    equations.getTime();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
406	[BUG]  [BUGGY]  t.report(JSError.make(t,  sanityChecks(),  c));  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  sanityChecks(),  c));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  sanityChecks(),  c));	  t.report(JSError.make(t,    sanityChecks()));    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	28	None	replace
407	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getVisibleRange();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t!=  equations.getVisibleRange();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getVisibleRange();	  final    boolean    forward    =    t!=    equations.getRange();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
408	[BUG]  [BUGGY]  if(t  >  scalEdge)  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }  [CE]  cannot  find  symbol  scalEdge  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  scalEdge)  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalEdge)  {  sanityChecks(equations,  t);  setEquations(equations,  c);  setEquations(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    c);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  scalEdge	38	None	replace
409	[BUG]  [BUGGY]  if(t!=  null)  {  sanityChecks(equations,  t);  setEquations(stages);  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t!=  null)  {  sanityChecks(equations,  t);  setEquations(stages);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t!=  null)  {  sanityChecks(equations,  t);  setEquations(stages);  }	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	79	None	replace
410	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getHeight();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t  ==  equations.getHeight();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getHeight();	  final    boolean    forward    =    t    ==    equations.getWidth();    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
411	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
412	[BUG]  [BUGGY]  t.report(JSError.make(t,  equations));  [CE]  cannot  find  symbol  JSError  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  t.report(JSError.make(t,  equations));  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	t.report(JSError.make(t,  equations));	  t.report(JSError.make(t,    sanityChecks));    	non-compiled	[CE]  cannot  find  symbol  JSError	26	None	replace
413	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	90	None	replace
414	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getStandardState();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  double[][]  c  =  equations.getStandardState();  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  double[][]  c  =  equations.getStandardState();	  final    double[][]    c    =    equations.getCurrentState();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
415	[BUG]  [BUGGY]  sanityChecks(equations,  c);  setEquivalences(stages);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  c);  setEquivalences(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c);  setEquivalences(stages);	  sanityChecks(equations,    t);    setEquivalences(stages);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	110	None	replace
416	[BUG]  [BUGGY]  sanityChecks(equates,  t);  setEquivalences(stages);  [CE]  cannot  find  symbol  equates  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equates,  t);  setEquivalences(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equates,  t);  setEquivalences(stages);	  sanityChecks(equations,    t);    setEquivalences(stages);    	non-compiled	[CE]  cannot  find  symbol  equates	110	None	replace
417	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  setEquations(equations);  }  [CE]  cannot  find  symbol  error  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  setEquations(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  setEquations(equations);  }	          sanityChecks(equations,    t);    sanityChecks(equations,    error);    setEquations(equations);    	non-compiled	[CE]  cannot  find  symbol  error	118	None	replace
418	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getWeeks();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  t!=  equations.getWeeks();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getWeeks();	  final    boolean    forward    =    t    ==    equations.getWeeks();    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
419	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquivalence(equations);  }  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquivalence(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  setEquivalence(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquivalence(equations);    	non-compiled	[CE]  while  expected	40	None	replace
420	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  sanityChecks(equations,  t);  setEquivalence(equations);  }  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  sanityChecks(equations,  t);  setEquivalence(equations);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  sanityChecks(equations,  t);  setEquivalence(equations);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquivalence(equations);    	non-compiled	[CE]  while  expected	40	None	replace
421	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  while  expected  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	non-compiled	[CE]  while  expected	9	None	replace
422	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }  [CE]  while  expected  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	non-compiled	[CE]  while  expected	9	None	replace
423	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null?  equations.getWrapped()  :  false;  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null?  equations.getWrapped()  :  false;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null?  equations.getWrapped()  :  false;	  final    boolean    forward    =    equations.getWrapped();    	non-compiled	[CE]  while  expected	84	None	replace
424	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null?  equations.getWrapped()  :  t;  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null?  equations.getWrapped()  :  t;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null?  equations.getWrapped()  :  t;	  final    boolean    forward    =    equations.getWrapped();    	non-compiled	[CE]  while  expected	84	None	replace
425	[BUG]  [BUGGY]  final  boolean  forward  =  equations!=  null?  equations.getWrapped()  :  error;  [CE]  while  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  final  boolean  forward  =  equations!=  null?  equations.getWrapped()  :  error;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations!=  null?  equations.getWrapped()  :  error;	  final    boolean    forward    =    equations.getWrapped();    	non-compiled	[CE]  while  expected	84	None	replace
426	[BUG]  [BUGGY]  int  forward  =  t  <  equations.getTime();  [CE]  while  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  int  forward  =  t  <  equations.getTime();  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	int  forward  =  t  <  equations.getTime();	  final    boolean    forward    =    t    <    equations.getTime();    boolean    forward    =    t    <    equations.getTime();    	non-compiled	[CE]  while  expected	53	None	replace
427	[BUG]  [BUGGY]  sanityChecks(equations,  c,  t);  [CE]  while  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  sanityChecks(equations,  c,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	sanityChecks(equations,  c,  t);	  sanityChecks(equations,    c);    	non-compiled	[CE]  while  expected	69	None	replace
428	[BUG]  [BUGGY]  boolean  forward  =  equations.getTime()  >  error;  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  boolean  forward  =  equations.getTime()  >  error;  [BUGGY]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	boolean  forward  =  equations.getTime()  >  error;	  final    boolean    forward    =    equations.getTime()    >    t;    boolean    forward    =    equations.getTime()    >    t;    	non-compiled	[CE]  while  expected	98	None	replace
429	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  }  [CE]  while  expected  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	37	None	replace
430	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  while  expected  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	37	None	replace
431	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  setEquations(equations,  t);  }  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  setEquations(equations,  t);  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  setEquations(equations,  t);  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	37	None	replace
432	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquations(equations,  t);  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }	          sanityChecks(equations,    t);    setEquations(equations);    sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	37	None	replace
