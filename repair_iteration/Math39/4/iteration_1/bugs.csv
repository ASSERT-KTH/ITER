bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	    sanityChecks(equations,  t);  setEquations(equations);		compilable	  [FE]  AssertionError  	8	1	add
2	[BUG]  [BUGGY]    sanityChecks(equations,  t);  setEquations(equations);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	    sanityChecks(equations,  t);  setEquations(equations);		compilable	  [FE]  AssertionError  	8	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    sanityChecks(equations,  t);  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	    sanityChecks(equations,  t);		compilable	  [FE]  AssertionError  	8	1	add
4	[BUG]  [BUGGY]    sanityChecks(equations,  t);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    sanityChecks(equations,  t);  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	    sanityChecks(equations,  t);		compilable	  [FE]  AssertionError  	8	1	add
5	[BUG]  [BUGGY]    final  double[][]  c  =  equations.getCompleteState();  [CE]  incompatible  types  [FE]        AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    final  double[][]  c  =  equations.getCompleteState();  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	    final  double[][]  c  =  equations.getCompleteState();		non-compiled	[CE]  incompatible  types	8	None	add
6	[BUG]  [BUGGY]    sanityChecks(equations,  t);  setEquations(equivalences);  [CE]  cannot  find  symbol  equivalences  [FE]          AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    sanityChecks(equations,  t);  setEquations(equivalences);  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	    sanityChecks(equations,  t);  setEquations(equivalences);		non-compiled	[CE]  cannot  find  symbol  equivalences	8	None	add
7	[BUG]  [BUGGY]    filteredNextIsLast  =  true;  [CE]  cannot  find  symbol  filteredNextIsLast  [FE]            AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    filteredNextIsLast  =  true;  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	    filteredNextIsLast  =  true;		non-compiled	[CE]  cannot  find  symbol  filteredNextIsLast	8	None	add
8	[BUG]  [BUGGY]  timeout  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  t  ==  equations.getTime();	final  boolean  forward  =  t  >  equations.getTime();  	compilable	timeout	7	1	replace
9	[BUG]  [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  timeout  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  ==  equations.getTime();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  ==  equations.getTime();	final  boolean  forward  =  t  >  equations.getTime();  	compilable	timeout	7	1	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  t  >=  equations.getTime();	final  boolean  forward  =  t  >  equations.getTime();  	compilable	  [FE]  AssertionError  	7	1	replace
11	[BUG]  [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  >=  equations.getTime();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  >=  equations.getTime();	final  boolean  forward  =  t  >  equations.getTime();  	compilable	  [FE]  AssertionError  	7	1	replace
12	[BUG]  [BUGGY]  timeout  [FE]        AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  equations.getTime()  >  t;	final  boolean  forward  =  t  >  equations.getTime();  	compilable	timeout	7	1	replace
13	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  timeout  [FE]        AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  equations.getTime()  >  t;  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime()  >  t;	final  boolean  forward  =  t  >  equations.getTime();  	compilable	timeout	7	1	replace
14	[BUG]  [BUGGY]  timeout  [FE]          AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  t  <  equations.getTime();	final  boolean  forward  =  t  >  equations.getTime();  	compilable	timeout	7	1	replace
15	[BUG]  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  timeout  [FE]          AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  <  equations.getTime();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t  <  equations.getTime();	final  boolean  forward  =  t  >  equations.getTime();  	compilable	timeout	7	1	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	add	final  boolean  forward  =  t!=  equations.getTime();	final  boolean  forward  =  t  >  equations.getTime();  	compilable	  [FE]  AssertionError  	7	2	replace
17	[BUG]  [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t!=  equations.getTime();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  t!=  equations.getTime();	final  boolean  forward  =  t  >  equations.getTime();  	compilable	  [FE]  AssertionError  	7	2	replace
18	[BUG]  [BUGGY]  final  boolean  forward  =  equations.getTime();  [CE]  incompatible  types  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  equations.getTime();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	final  boolean  forward  =  equations.getTime();	final  boolean  forward  =  t  >  equations.getTime();  	non-compiled	[CE]  incompatible  types	7	None	replace
19	[BUG]  [BUGGY]    sanityChecks(equations,  t);  setEquations(stages);  [CE]  cannot  find  symbol  stages  [FE]    AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    sanityChecks(equations,  t);  setEquations(stages);  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	    sanityChecks(equations,  t);  setEquations(stages);		non-compiled	[CE]  cannot  find  symbol  stages	8	None	add
20	[BUG]  [BUGGY]    sanityChecks(equations,  error);  setEquations(equations);  [CE]  cannot  find  symbol  error  [FE]      AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    sanityChecks(equations,  error);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	    sanityChecks(equations,  error);  setEquations(equations);		non-compiled	[CE]  cannot  find  symbol  error	8	None	add
21	[BUG]  [BUGGY]    sanityChecks(equations,  c);  setEquations(equations);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]        AssertionError  [CONTEXT]  throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  [BUGGY]    sanityChecks(equations,  c);  setEquations(equations);  [BUGGY]  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	196	196	1	replace	    sanityChecks(equations,  c);  setEquations(equations);		non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	8	None	add
