bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  <  String>  exp  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  List  <  String>  exp  =  Sets.newHashSet();  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	List  <  String>  exp  =  Sets.newHashSet();	      Set    <    String>    exp    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  ArrayList  <  String>  exp  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ArrayList  <  String>  exp  =  Sets.newHashSet();  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	ArrayList  <  String>  exp  =  Sets.newHashSet();	      Set    <    String>    exp    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet(false);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet(false);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  Sets.newHashSet(false);	      Set    <    String>    exp    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMinReduction(0);	      ((    RungeKuttaStepInterpolator)prototype).setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(2.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(2.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMinReduction(2.0);	      ((    RungeKuttaStepInterpolator)prototype).setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(1);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMinReduction(1);	      ((    RungeKuttaStepInterpolator)prototype).setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxReduction(2.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxReduction(2.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMaxReduction(2.0);	      ((    RungeKuttaStepInterpolator)prototype).setMaxReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxReduction(1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxReduction(1);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMaxReduction(1);	      ((    RungeKuttaStepInterpolator)prototype).setMaxReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  exp  =  -10.0  *  getOrder();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -10.0  *  getOrder();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -10.0  *  getOrder();	  exp    =    -10.0    /    getOrder();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  exp  =  -10.0  /  getMaxGrowth();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -10.0  /  getMaxGrowth();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -10.0  /  getMaxGrowth();	  exp    =    -10.0    /    getOrder();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  exp  =  -10.0  /  getOrder()  +  10.0;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -10.0  /  getOrder()  +  10.0;  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -10.0  /  getOrder()  +  10.0;	  exp    =    -10.0    /    getOrder();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
12	[BUG]  [BUGGY]  setMinGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setMinGrowth(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setMinGrowth(1.0);	      if(exp    >    0.0)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setMaxGrowth(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setMaxGrowth(1.0);	      setMinReduction(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  setMinReduction(0.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setMinReduction(0.0);  setMaxGrowth(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setMinReduction(0.0);  setMaxGrowth(1.0);	      setMinReduction(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  setMinReduction(1.0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setMinReduction(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setMinReduction(1.0);	      if(exp    >    0.0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  setMinGrowth(1.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setMinGrowth(1.0);  setMaxGrowth(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setMinGrowth(1.0);  setMaxGrowth(1.0);	      if(exp    >    0.0)    {    setMinGrowth(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
17	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(1);  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(1);  setMaxGrowth(1);  }  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	if(exp  >  0.0)  {  setMinGrowth(1);  setMaxGrowth(1);  }	      if(exp    >    0.0)    {    setMinGrowth(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
18	[BUG]  [BUGGY]  exp  =  -1.0  /  getScale()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  /  getScale()  +  1;  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  /  getScale()  +  1;	  exp    =    -1.0    /    getScale();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  exp  =  -1.0  /  getScale().doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  /  getScale().doubleValue();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  /  getScale().doubleValue();	  exp    =    -1.0    /    getScale();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  exp  =  -1.0  /  getMinGrowth();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  /  getMinGrowth();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  /  getMinGrowth();	  exp    =    -1.0    /    getMaxGrowth();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  exp  =  -1.0  /  getMaxGrowth()  +  10.0;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  /  getMaxGrowth()  +  10.0;  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  /  getMaxGrowth()  +  10.0;	  exp    =    -1.0    /    getMaxGrowth();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  exp  =  -1.0  *  getMaxGrowth();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  *  getMaxGrowth();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  *  getMaxGrowth();	  exp    =    -1.0    /    getMaxGrowth();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(00.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(00.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(00.0);	      ((    RungeKuttaStepInterpolator)prototype).setMaxGrowth(10.0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinGrowth(0.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinGrowth(0.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMinGrowth(0.0);	      ((    RungeKuttaStepInterpolator)prototype).setMaxGrowth(0.0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(0);	      ((    RungeKuttaStepInterpolator)prototype).setMaxGrowth(0.0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  if(exp  <  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  if(exp  <  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	if(exp  <  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setMinReduction(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  exp  =  -1.0  /  getOrder()  *  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  /  getOrder()  *  1;  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  /  getOrder()  *  1;	  exp    =    -1.0    /    getOrder()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  exp  =  -1.0  /  getMaxGrowth()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  /  getMaxGrowth()  +  1;  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  /  getMaxGrowth()  +  1;	  exp    =    -1.0    /    getOrder()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet();  setSafety(0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet();  setSafety(0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  Sets.newHashSet();  setSafety(0);	      Set    <    String>    exp    =    Sets.newHashSet();    setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet();  setSafety(1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet();  setSafety(1);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  Sets.newHashSet();  setSafety(1);	      Set    <    String>    exp    =    Sets.newHashSet();    setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  scalRelativeTolerance  =  scalRelativeTolerance;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  scalRelativeTolerance  =  scalRelativeTolerance;  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	scalRelativeTolerance  =  scalRelativeTolerance;	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  scalRelativeTolerance  =  scalRelativeTolerance.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  scalRelativeTolerance  =  scalRelativeTolerance.doubleValue();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	scalRelativeTolerance  =  scalRelativeTolerance.doubleValue();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  this.maxGrowth  =  maxGrowth  +  10.0;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  this.maxGrowth  =  maxGrowth  +  10.0;  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	this.maxGrowth  =  maxGrowth  +  10.0;	      this.maxGrowth    =    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  this.maxGrowth  =  maxGrowth  +  minReduction;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  this.maxGrowth  =  maxGrowth  +  minReduction;  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	this.maxGrowth  =  maxGrowth  +  minReduction;	      this.maxGrowth    =    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  this.maxGrowth  =  scalAbsoluteTolerance;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  this.maxGrowth  =  scalAbsoluteTolerance;  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	this.maxGrowth  =  scalAbsoluteTolerance;	      this.maxGrowth    =    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(1);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(1);	      ((    RungeKuttaStepInterpolator)prototype).setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinGrowth(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMinGrowth(1.0);	      ((    RungeKuttaStepInterpolator)prototype).setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
41	[BUG]  [BUGGY]  Settings  settings  =  getSettings();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Settings  settings  =  getSettings();  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Settings  settings  =  getSettings();	      if(exp    >    0.0)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
42	[BUG]  [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet();  setSafety(2.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet();  setSafety(2.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  Sets.newHashSet();  setSafety(2.0);	      Set    <    String>    exp    =    Sets.newHashSet();    setSafety(0.0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(exp  >  0.0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Preconditions.checkState(exp  >  0.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Preconditions.checkState(exp  >  0.0);	      if(exp    >    0.0)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  Set  <  String>  exp  =  setSafety(1.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  setSafety(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  setSafety(1.0);	      if(exp    >    0.0)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
45	[BUG]  [BUGGY]  luate(c,  minStep,  maxStep,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  luate(c,  minStep,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	luate(c,  minStep,  maxStep,  scalAbsoluteTolerance);	      if(exp    >    0.0)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
46	[BUG]  [BUGGY]  luate(c,  minStep,  maxStep,  scalAbsoluteTolerance));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  luate(c,  minStep,  maxStep,  scalAbsoluteTolerance));  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	luate(c,  minStep,  maxStep,  scalAbsoluteTolerance));	      if(exp    >    0.0)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
47	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(0.5);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(0.5);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(0.5);	      ((    RungeKuttaStepInterpolator)prototype).setMaxGrowth(10.0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  exp  =  -1.0  /  getMaxGrowth()  +  minStep;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  /  getMaxGrowth()  +  minStep;  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  /  getMaxGrowth()  +  minStep;	  exp    =    -1.0    /    getMaxGrowth();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(0.0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(0.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMinReduction(0.0);	      ((    RungeKuttaStepInterpolator)prototype).setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(0.5);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinReduction(0.5);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMinReduction(0.5);	      ((    RungeKuttaStepInterpolator)prototype).setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  exp  =  -1.0  /  getScaleRelativeTolerance();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  /  getScaleRelativeTolerance();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  /  getScaleRelativeTolerance();	  exp    =    -1.0    /    getScale();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  setMinReduction(1.0);  setMaxGrowth(2.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setMinReduction(1.0);  setMaxGrowth(2.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setMinReduction(1.0);  setMaxGrowth(2.0);	      setMinReduction(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
57	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxReduction(0.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxReduction(0.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMaxReduction(0.0);	      ((    RungeKuttaStepInterpolator)prototype).setMaxReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
58	[BUG]  [BUGGY]  this.maxGrowth  =  maxGrowth  +  minStep;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  this.maxGrowth  =  maxGrowth  +  minStep;  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	this.maxGrowth  =  maxGrowth  +  minStep;	      this.maxGrowth    =    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  this.maxGrowth  =  maxGrowth  -  minStep;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  this.maxGrowth  =  maxGrowth  -  minStep;  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	this.maxGrowth  =  maxGrowth  -  minStep;	      this.maxGrowth    =    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
60	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinGrowth(10.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMinGrowth(10.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMinGrowth(10.0);	      ((    RungeKuttaStepInterpolator)prototype).setMaxGrowth(10.0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
61	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(10.0,  exp);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(10.0,  exp);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(10.0,  exp);	      ((    RungeKuttaStepInterpolator)prototype).setMaxGrowth(10.0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
62	[BUG]  [BUGGY]  ArrayList  <  String>  exp  =  Sets.newHashSet();  setSafety(1.0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ArrayList  <  String>  exp  =  Sets.newHashSet();  setSafety(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	ArrayList  <  String>  exp  =  Sets.newHashSet();  setSafety(1.0);	      Set    <    String>    exp    =    Sets.newHashSet();    setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet(c);  setSafety(1.0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet(c);  setSafety(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  Sets.newHashSet(c);  setSafety(1.0);	      Set    <    String>    exp    =    Sets.newHashSet();    setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(2.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(2.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	((  RungeKuttaStepInterpolator)prototype).setMaxGrowth(2.0);	      ((    RungeKuttaStepInterpolator)prototype).setMaxGrowth(0.0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  setSafety(1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setSafety(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setSafety(1.0);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  setSafety(1.0);  setMinGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setSafety(1.0);  setMinGrowth(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setSafety(1.0);  setMinGrowth(1.0);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  setSafety(0.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setSafety(0.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setSafety(0.0);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  Set  <  String>  exp  =  setMinGrowth(1.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  setMinGrowth(1.0);  setMaxGrowth(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  setMinGrowth(1.0);  setMaxGrowth(1.0);	      if(exp    >    0.0)    {    setMinGrowth(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
70	[BUG]  [BUGGY]  Set  <  String>  exp  =  setSafety(1.0);  setMinReduction(1.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  setSafety(1.0);  setMinReduction(1.0);  setMaxGrowth(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  setSafety(1.0);  setMinReduction(1.0);  setMaxGrowth(1.0);	      if(exp    >    0.0)    {    setMinReduction(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
71	[BUG]  [BUGGY]  exp  =  -1.0  /  getMaxGrowth()  *  getMinGrowth();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -1.0  /  getMaxGrowth()  *  getMinGrowth();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -1.0  /  getMaxGrowth()  *  getMinGrowth();	  exp    =    -1.0    /    getMaxGrowth();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
72	[BUG]  [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet(a);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet(a);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  Sets.newHashSet(a);	      Set    <    String>    exp    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet(fsal);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  Sets.newHashSet(fsal);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  Sets.newHashSet(fsal);	      Set    <    String>    exp    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  exp  =  -10.0  /  getScale();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  exp  =  -10.0  /  getScale();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	exp  =  -10.0  /  getScale();	  exp    =    -10.0    /    getOrder();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
75	[BUG]  [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	if(exp  <  =  0.0)  {  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(exp    >    0.0)    {    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
76	[BUG]  [BUGGY]  ArrayList  <  String>  exp  =  Sets.newHashSet();  setSafety(0.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  ArrayList  <  String>  exp  =  Sets.newHashSet();  setSafety(0.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	ArrayList  <  String>  exp  =  Sets.newHashSet();  setSafety(0.0);	      Set    <    String>    exp    =    Sets.newHashSet();    setSafety(0.0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  Set  <  String>  exp  =  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  Set  <  String>  exp  =  setMaxGrowth(1.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	Set  <  String>  exp  =  setMaxGrowth(1.0);	      if(exp    >    0.0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
78	[BUG]  [BUGGY]  setMaxGrowth(0.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  setMaxGrowth(0.0);  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	setMaxGrowth(0.0);	      setMinReduction(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  this.maxGrowth  =  maxGrowth  /  getOrder();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  this.maxGrowth  =  maxGrowth  /  getOrder();  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	this.maxGrowth  =  maxGrowth  /  getOrder();	      this.maxGrowth    =    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
80	[BUG]  [BUGGY]  this.maxGrowth  =  maxGrowth  -  10.0;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;    [BUGGY]  this.maxGrowth  =  maxGrowth  -  10.0;  [BUGGY]    exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	123	123	1	replace	this.maxGrowth  =  maxGrowth  -  10.0;	      this.maxGrowth    =    maxGrowth;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
