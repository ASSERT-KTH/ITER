projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<stages;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(stepStart+c[k-1]*stepSize,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*stepSize,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*stepSize,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(k+c[k-1]*stepSize,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*stepSize,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*stepSize,yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*stepSize,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*stepSize,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*y0,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k-1],c[k-1],yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*y1,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*y1,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){for(intj=0;j<stages;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intk=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK,yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotTmp,c,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*sum,yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[1]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=a[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c.length-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=k.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c.length-2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=k;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*t,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k],c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],c,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=a[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],c,ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*yDotK[0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*t,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(k+c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*stepSize,k,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*stepSize,k,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[0][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp+c[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*sum,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yDotTmp+c[k-1]*sum,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yTmp[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[0][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[0],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*stepSize,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*error,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=a[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;j<stages;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK[k],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j].doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yDotK[0][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yDotK[0][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<y0.length;++k){for(intj=0;j<stages;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yTmp[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*y0,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=yTmp.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*yDotK[k],c,ySize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[1][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*y1,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*error,yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yTmp[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*stepSize,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*error,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=y[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*y0,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<y0.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yTmp[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,error]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,b[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*error,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*yDotK[0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*error,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<stages;++k){for(intj=0;j<stage.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*stepSize,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(k+c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp,c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1][0],c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k-1],c[k-1],k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=stages.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp,c[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*yDotK[k],c,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],c,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*y0,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*y0,c[k-1],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*y0,c[k-1],yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(yTmp+c[k-1]*yDotK[0],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(yTmp+c[k-1]*yDotK[0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(yTmp+c[k-1]*yDotK[0],yDotK[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(yTmp+c[k-1]*yDotK[0],yDotK[k]);}else{return;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*t,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(y0,yTmp[k-1]*t,c,yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(y0,yTmp[k-1]*t,c,yDotK[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(y0,yTmp[k-1]*t,c,yDotK[k]);}else{return;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,c[k-1]*yDotK[k],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp,c[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(y0,yTmp[k-1]*yDotK[k],c,ySize);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k],scale,ySize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],c,ySize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*yDotK[k],scale,ySize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[0],c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k],c,ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK[k],c,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],scale,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK[k],scale,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],c,yTmp[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c.length/2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[0][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[0][j]+3;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[0][j]/1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=k+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=0;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=k-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[1]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){for(intj=0;j<y0.length;++j){sum+=b[1]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=a[1]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*sum,yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],c,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1][0],c[k-1],yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1][0],c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1][0],c[k-1],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==1){computeDerivatives(t,y[k-1][0],c[k-1],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,error,sum);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK,yTmp,error]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262validateDerivatives(t+c[k-1]*yDotK,yTmp,error]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yDotK[0][j].doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yDotK[1][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y0+c[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<0;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[1]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*c,yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*c,yTmp,stepSize);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,0,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*c,yTmp,stepSize);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*error,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*error,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[k],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*c[k],yDotK[k],k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*yDotK[k],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=a[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[k-1][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[k-1][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262validateDerivatives(y0,yTmp[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0,yTmp[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp[k-1]*y0,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*c[k],yDotK[k],stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[k-1][0]*yTmp[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=a[k-1][0]*yTmp[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=a[k-1][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=a[k-1][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262validate(t,y[k-1]*yDotTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotTmp,a[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotTmp,b[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp,b[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(yTmp,c[k-1]*yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(yTmp,c[k-1]*yDotK[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[0][0]*yDotK[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[0][0]*yTmp[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<0;++k){doublestepSize=c[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK[0],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[0],yTmp,j]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[0],yTmp,0,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t+c[k-1]*yDotK[0],yTmp,k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp[k-1]*y1,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,yTmp[k-1]*y1,c[k-1],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*y1,b[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[1][j]/2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[1][j]-2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[0][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[0][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[0][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;j<y0.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(yTmp+c[k-1]*error,yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(yTmp+c[k-1]*error,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[1][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[1][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[1][0]*yTmp[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*y0,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,j]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(y0+c[k-1]*yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(y0+c[k-1]*yDotK[k]);}else{System.arraycopy(yTmp,0,yTmp,0,yTmp.length);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*y1,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*y1,c,yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*y1,c,yDotK[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=a[k-1][0]*yDotK[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yTmp[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[0][0]*yTmp[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<stage.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){for(intj=0;j<stage.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stage.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<stage.length;++j){sum+=b[1]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK,yTmp,0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yDotK[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y0,c[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp,c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp,c[k-1]*sum,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yDotTmp,c[k-1]*sum,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotTmp,c,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotTmp,b,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262validateDerivatives(t,y[k-1]*yDotTmp,c,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotTmp,j,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK[k-1],c[k-1],yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(y[k-1]!=yDotK[k-1],c[k-1],yTmp[k]){computeDerivatives(t,y[k-1]*yDotK[k-1],c[k-1],yTmp[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k-1],b[k-1],yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yDotK[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp[k-1]*yDotK[k-1],c[k-1],k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,yTmp[k-1]*yDotK[k-1],c[k-1],k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k-1],c[k-1],k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(yTmp[k-1]!=yDotK[k-1],c[k-1],k]){computeDerivatives(t,yTmp[k-1]*yDotK[k-1],c[k-1],k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<0;++k){doublestepSize=c[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[k],yTmp,0,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k],k,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[k],yTmp,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*t,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*yDotK[0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(yTmp[k-1]*c,yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(yTmp[k-1]*c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yTmp,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotTmp,c,sum,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp,0,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp+c[k-1]*sum,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*sum,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*sum,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*sum,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*yDotK[0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp+c[k-1]*yDotK[0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,yDotTmp+c[k-1]*yDotK[0],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,yDotTmp+c[k-1]*yDotK[0],yDotK[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],k,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*y1,k,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[0],k,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],k,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK,yTmp,0,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK,yTmp,1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK,j,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0+c[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){for(intj=0;j<stages;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<y1.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[0],k,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*c,k,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[1,k,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[l],k,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){for(intj=0;j<y0.length;++j){sum+=a[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=k.length-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=k.length-2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=k.length+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*yDotK[0],c,yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK[0],scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(k+c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],k,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(d+c[k-1]*yDotK[k],yTmp,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(yTmp+c[k-1]*t,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(yTmp+c[k-1]*t,yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*t,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yTmp[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yTmp[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,b[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,b[k-1]*yDotK,yTmp,0,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,b[k-1]*yDotK,yTmp,stepSize]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,b[k-1]*yDotK,yTmp,stepSize]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0,c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,c[k-1]*yDotTmp,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,c[k-1]*yDotTmp,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(k+c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(d+c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*t,yTmp,yMean[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[1][j]/1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[1][j]+3;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[1][j].doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yDotK[1][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp+c[k-1]*error,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*error,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*y1,c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*y1,c[k-1],yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*y1,c[k-1],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y0+c[k-1]*scale,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*sum,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*yDotK[k],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK,yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK,k,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(steps!=null){for(intk=0;k<y0.length;++k){for(intj=0;j<stages;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){for(intj=0;j<stages;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){for(intj=0;j<stages;++j){sum+=b[1]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262validate(t,y[k-1]*yDotK,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(d[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK,yTmp,j]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j].doubleValue()+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=y[k-1][0]*yDotK[0][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=stages.length-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k],c,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k],scale,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0,yTmp[k-1]*yDotK[k],c,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=y[k-1][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=y[k-1][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,j,1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;j<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=1;j<stages;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;j<k;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[k-1][0]*yDotK[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[k-1][0]*yDotK[0][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(stepStart==0){for(intk=0;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK,yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(yTmp!=null){computeDerivatives(t,y[k-1]*yDotK,yTmp,c[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK,c,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(yTmp!=null){computeDerivatives(t,y[k-1]*yDotK,yTmp,c[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c.length/1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yDotTmp+c[k-1]*sum,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yDotTmp+c[k-1]*sum,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,yDotTmp+c[k-1]*sum,yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yDotK[0][j].doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp[k-1]*yDotK[k],c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yDotK[k-1]*yDotK[k],c,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k],scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,yTmp+c[k-1]*yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK[k],c,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],scale,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],b,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],c,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intk=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262Integerk=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intk=1;k<y0.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yTmp[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,ySize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,y0.length]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,sum);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*error,yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,error,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*c,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,0,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*c,yTmp,stepSize]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*c,yTmp,stepSize]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK,yTmp,0,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0+c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(yTmp+c[k-1]*yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(yTmp+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=yTmp.length-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=yTmp.length-2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=yTmp.length+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yDotK[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*t,yDotTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*error,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;j<y0.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yTmp[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[0][0]*yTmp[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK[k],c,ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],scale,ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(t,y[k-1]*yDotK[k],c,ySize[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK[k],scale,ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262validate(t,yTmp[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[0][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[0][j]+3;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+b[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-2][0]*yDotK[0][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(steps!=null){for(intk=0;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(steps!=null){for(intk=0;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=y[0][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*d,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(yTmp[k-1]*c,yDotK[k]);}else{for(intk=0;k<y0.length;++k){sum+=b[0]*y
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k-1],c[k-1],yTmp[j]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yDotTmp+c[k-1]*scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262blek=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[0][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stageSize;++k){for(intj=0;j<y0.length;++j){sum+=a[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yTmp[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yTmp[1][j]+2;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp[k-1]*yDotK[k],scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],c,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*yDotK[k],scale,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*yDotK[k],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+b[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(j<0){for(intj=0;j<stages;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,b[k-1]*yDotK,yTmp,error]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,b[0]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,b[k-1]*yDotK,yTmp,0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=y[k-1][0]*yDotK[1][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp,b,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp,scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp,0,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],c,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y[k-1]*yDotK[k],c,k);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*yDotK[k],c,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK[k],yTmp,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*y1,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*y1,b,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*error,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1][0],b[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(t,y[k-1][0],c[k-1],yDotK[k]);}else{System.arraycopy(yTmp,0,yTmp,0,yTmp.length);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp[k],scale,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,b[k-1]*yDotK[0],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp,b[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,x,y[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp[k],c,ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],b,ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yTmp[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*error,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*error,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=y[k-1][0]*yDotK[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stageSize;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*scale,yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*y0,k,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,error]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){for(intj=0;j<stage.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*y0,b[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*y0,b[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp,a[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(yTmp,c[k-1]*yDotK[k]);}else{System.arraycopy(yTmp,0,yTmp,0,yTmp.length);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*error,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*value,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*scale,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,error]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotTmp,c,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp,c,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[0]*yDotTmp,c,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[k-1][0]*yTmp[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c.length-3;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stageSize;++k){for(intj=0;j<y0.length;++j){sum+=b[1]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[1]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*t,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;k<y0.length;++k){for(intj=0;j<stages;++j){sum+=b[1]*yDotK[2][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[0]*sum,yTmp,c[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[1,yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stageSize;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*t,scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*t,b,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*t,scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[0][0]*yTmp[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,b[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,c[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp,c[k-1]*t,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*yDotK[1],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp,b[k-1]*yDotK[0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(yTmp+c[k-1]*yDotK[0],yDotK[k]);}else{return;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,c[k-1]*yDotK,yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*yDotK,yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp[0],scale,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yTmp[0],c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*y0,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*error,yTmp,ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k-1],b[k-1],k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k-1],b[k-1],k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k-1],c[k-1],j]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,k+c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,y0.length));
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages;++k){doublestepSize=b[k-1][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*error,yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*y0,k,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK,k,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*y0,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotTmp,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[1][j]-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp,y[k-1]*yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=y[k-1][0]*yDotK[1][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<yTmp.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=a[k-1][0]*yTmp[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=y[k-1][0]*yTmp[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*t,yTmp,ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,b[k-1]*yDotK,yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,3]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-1][0]*yTmp[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[0],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,b[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp+c[k-1]*yDotK[1],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp+c[k-1]*yDotK[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp+c[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK,yTmp,error]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=j;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0,yTmp[k-1]*yDotK[k],scale,ySize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp,y[k-1]*yDotK[k],scale,ySize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK[0],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK[l],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1]*yDotK[k],c,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+b[k-1]*yDotK,yTmp,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK,yTmp,0,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK,0,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-2][0]*yDotK[1][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],b,yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=stages;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*t,yTmp,0,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(y0,c[k-1]*t,yTmp,yDotK[k]);}else{System.arraycopy(y0,0,yTmp,0,yTmp.length);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(y0,c[k-1]*t,yTmp,yDotK[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(d,c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*yDotK[k],0,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(y0,yTmp[k-1]*yDotK[k],c,stepSize);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp[k-1][0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(k+c[k-1]*t,yTmp,yDotK[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(k+c[k-1]*t,yTmp,y[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0+c[k-1]*yDotK[k],yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(y0+c[k-1]*yDotK[k],yTmp,k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yDotTmp+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*c,k,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*j,k,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*d,k,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[0][j]-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;j<k;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;j<stages;++k){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK,yTmp,1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],c,0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],c,yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yTmp[0][j]+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y0+c[k-1]*stepSize,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y0+c[k-1]*yDotK[k]),yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(yTmp[k-1]==y0,c[k-1],yDotK[k]);elsecomputeDerivatives(t,yTmp[k-1]*y0,c[k-1],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(yTmp[k-1]!=y0){computeDerivatives(t,yTmp[k-1]*y0,c[k-1],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intk=1<<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262booleank=1;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262booleank=1<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stageSize;++k){for(intj=0;j<stages;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK,c[k-1],yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*t,b,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0,yTmp[k-1]*t,c,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(d0+c[k-1]*t,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(j<1){for(intj=0;j<stages;++j){sum+=b[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=steps.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k>0){computeDerivatives(k+c[k-1]*yDotK[k],yTmp,stepSize);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;k<stages;++k){for(intj=0;j<y0.length;++j){sum+=a[0]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[0][j]/1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],b,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[0],stage,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK[k],yTmp,0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262t.append(c[k-1]*yDotK[0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yDotTmp+c[k-1]*yDotK[0],yTolerance[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yDotTmp+c[k-1]*yDotK[0],ySize[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;j<stages;++j){sum+=b[1]*yDotK[1][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(k==0){computeDerivatives(y0,yTmp[k-1]*yDotK[k],c,ySize);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,yTmp[k-1]*yDotK[k],0,ySize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(yTmp,y[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1][0]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;j<k;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;j<0;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intj=0;j<stages;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k-1],c[k-1],j]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(yTmp[k-1]!=yDotK[k-1],c[k-1],k]){computeDerivatives(t,yTmp[k-1],y[k-1],k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=a[k-2][0]*yDotK[1][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(yTmp[k-1]==yDotK[k-1]){computeDerivatives(t,yTmp[k-1]*y1,c[k-1],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262t.report(JSError.make(t,y0,k),c[k-1],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1],c[k-1],yTmp[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0,c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*yDotK[1][j]/1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262test(t,y[k-1]*error,yTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(yTmp.length==0){computeDerivatives(t,y[k-1]*yDotK,yTmp,c[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yTmp,c[k-1]*yDotK[0],yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yMean,c[k-1]*stepSize,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=c[k-1][0]*YDotK[0][j].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[1][j]-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=c[k-1][0]*yDotK[1][j]/1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[0][0]*yDotK[1][j]+error;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t+c[k-1]*yDotK,yTmp,1,stepSize]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,yDotTmp+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(c[k-1]==yDotK[k]){computeDerivatives(yTmp,c[k-1]*yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(c[k-1]==yDotK[k]){computeDerivatives(yTmp,c[k-1]*yDotK[k]);}else{System.arraycopy(yTmp,0,yTmp,0,yTmp.length);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(c[k-1]==yDotK[k]){computeDerivatives(yTmp,c[k-1]*yDotK[k]);}else{for(intk=0;k<y0.length;++k){sum+=b[0]*y
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK[k],yTmp,0,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0+c[k-1]*yDotK[k],yTmp,stepSize);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(c[k-1]==yDotK[k]){computeDerivatives(yTmp+c[k-1]*yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(c[k-1]==yDotK[k]){computeDerivatives(yTmp+c[k-1]*yDotK[k]);}else{System.arraycopy(yTmp,0,yTmp,0,yTmp.length);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(c[k-1]<yDotK[0],yDotK[k]){computeDerivatives(yTmp+c[k-1]*yDotK[0],yDotK[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(c[k-1]<yDotK[0],yDotK[k]){computeDerivatives(yTmp+c[k-1]*yDotK[0],yDotK[k]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(c[k-1]<yDotK[0],yDotK[k]){computeDerivatives(yTmp+c[k-1]*yDotK[0],yDotK[k]);}else{return;}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262t.report(null,y[k-1]*yDotK,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262test(t,y[k-1]*yDotTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[0-1]*yDotTmp,c[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=1;j<stage.length;++k){for(intj=0;j<y0.length;++j){sum+=b[0]*yDotK[0][j];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0+c[k-1]*error,yTmp,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(t,y0+c[k-1]*yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yTmp[k-1]*yDotK[k],k,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],k,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*yDotK[k],b,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t+c[k-1]*yDotK,yTmp,0,l));
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(y0+c[k-1]*yDotK,yTmp,0,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262ensureCapacity(y0+c[k-1]*yDotK,yTmp,k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(stepSize==1){computeDerivatives(t,b[k-1]*yDotK,yTmp,stepSize]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(stepSize==1){computeDerivatives(t,b[k-1]*yDotK,yTmp,stepSize]);}else{System.arraycopy(yTmp,0,yTmp,0,stepSize);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,y[k-1]*c,yTmp,0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262computeDerivatives(t,yDotTmp,c[k-1]*sum,yDotK[k]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(stepSize==0){for(intk=0;k<y0.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262booleanstepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262intstepSize=b[0][0]*yDotK[0][j]-1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262for(intk=0;k<stages.length;++k){doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<stages;++k){sum+=b[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(y[k-1]==yDotK[k-1],c[k-1],yTmp[k]);else{computeDerivatives(t,y[k-1]*yDotK[k-1],c[k-1],yTmp[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262if(y[k-1]!=yDotK[k-1],c[k-1],yTmp[k]){computeDerivatives(t,y[k-1]*yDotK[k-1],b[k-1],yTmp[k]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java262doublestepSize=b[0][1]*yDotK[0][j];
