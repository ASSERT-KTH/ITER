bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquals(stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  t);  setEquals(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  t);  setEquals(stages);	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
2	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquals(equations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  t);  setEquals(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  t);  setEquals(equations);	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
3	[BUG]  [BUGGY]  safeSanityChecks(equations,  t);  setEquations(equations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  safeSanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	safeSanityChecks(equations,  t);  setEquations(equations);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
4	[BUG]  [BUGGY]  if(t)  {  sanityChecks(equations,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t)  {  sanityChecks(equations,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t)  {  sanityChecks(equations,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }	  if(error)    {    sanityChecks(equations,    error);    setEquations(equations);    }    else    {    throw    new    MathIllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
5	[BUG]  [BUGGY]  sanityChecks(equations,  Equivalence);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  Equivalence);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  Equivalence);	  sanityChecks(t,    Equivalence);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  sanityChecks(t,  Equation.DECEMBER);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equation.DECEMBER);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equation.DECEMBER);	  sanityChecks(t,    Equivalence);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  sanityChecks(t,  Equation.NONE);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equation.NONE);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equation.NONE);	  sanityChecks(t,    Equivalence);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  sanityChecks(c,  t);  setEquations(stages);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  t);  setEquations(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  t);  setEquations(stages);	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  sanityChecks(c.length,  t);  setEquations(stages);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c.length,  t);  setEquations(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c.length,  t);  setEquations(stages);	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  sanityChecks(stages,  c);  setEquations(stages);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  c);  setEquations(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  c);  setEquations(stages);	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  sanityChecks(c,  t);  setEquals(stages);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  t);  setEquals(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  t);  setEquals(stages);	  sanityChecks(stages,    t);    setEquals(stages);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  sanityChecks(stages,  c);  setEquals(stages);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  c);  setEquals(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  c);  setEquals(stages);	  sanityChecks(stages,    t);    setEquals(stages);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  nes.addAll(sanityChecks(equations,  t));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  nes.addAll(sanityChecks(equations,  t));  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	nes.addAll(sanityChecks(equations,  t));	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
14	[BUG]  [BUGGY]  t  =  equations.getTime()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t  =  equations.getTime()  +  1;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t  =  equations.getTime()  +  1;	  t    =    equations.getTime();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  gedNextIsLast  =  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  gedNextIsLast  =  false;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	gedNextIsLast  =  false;	  gedNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
16	[BUG]  [BUGGY]  gedNextIsLast  =  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  gedNextIsLast  =  null;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	gedNextIsLast  =  null;	  gedNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
17	[BUG]  [BUGGY]  geNextIsLast  =  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  geNextIsLast  =  false;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	geNextIsLast  =  false;	  gedNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
18	[BUG]  [BUGGY]  ensureCapacity(t,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  ensureCapacity(t,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	ensureCapacity(t,  c);	  ensureCapacity(t,    equations);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
19	[BUG]  [BUGGY]  ensureCapacity(t,  scaledH);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  ensureCapacity(t,  scaledH);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	ensureCapacity(t,  scaledH);	  ensureCapacity(t,    equations);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
20	[BUG]  [BUGGY]  ensureCapacity(t,  c.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  ensureCapacity(t,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	ensureCapacity(t,  c.length);	  ensureCapacity(t,    equations);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
21	[BUG]  [BUGGY]  sanityChecks(equations,  error);  setEquations(stages);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  error);  setEquations(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  error);  setEquations(stages);	  sanityChecks(stages,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
22	[BUG]  [BUGGY]  sanityChecks(stages,  t);  setEquations(equations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  t);  setEquations(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  t);  setEquations(equations);	  sanityChecks(stages,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
23	[BUG]  [BUGGY]  sanityChecks(c,  error);  setEquations(equations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  error);  setEquations(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  error);  setEquations(equations);	  sanityChecks(stages,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
24	[BUG]  [BUGGY]  setSanityChecks(equations,  t);  setEquations(equations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  setSanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	setSanityChecks(equations,  t);  setEquations(equations);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
25	[BUG]  [BUGGY]  sanityChecks(error,stages);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(error,stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(error,stages);	  sanityChecks(stages,    error);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
26	[BUG]  [BUGGY]  sanityChecks(t,  filteredNextIsLast);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  filteredNextIsLast);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  filteredNextIsLast);	  sanityChecks(t,    error);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  sanityChecks(t,  error,  scale);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  error,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  error,  scale);	  sanityChecks(t,    error);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  sanityChecks(t,  filteredNextT);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  filteredNextT);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  filteredNextT);	  sanityChecks(t,    error);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
29	[BUG]  [BUGGY]  sanityChecks(scale,stages);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(scale,stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(scale,stages);	  sanityChecks(stages,    scale);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
30	[BUG]  [BUGGY]  sanityChecks(c,  scale);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  scale);	  sanityChecks(stages,    scale);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
31	[BUG]  [BUGGY]  sanityChecks(t,  scale);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  scale);	  sanityChecks(stages,    scale);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
32	[BUG]  [BUGGY]  sanityChecks(equals,  error);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equals,  error);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equals,  error);	  sanityChecks(equals,    t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  sanityChecks(t,  equals);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  equals);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  equals);	  sanityChecks(equals,    t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  sanityChecks(equals,  scaledH);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equals,  scaledH);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equals,  scaledH);	  sanityChecks(equals,    t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  sanityChecks(stages,  t,  deficiencies);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  t,  deficiencies);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  t,  deficiencies);	  sanityChecks(equations,    t,    stages);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
36	[BUG]  [BUGGY]  sanityChecks(equations,  stages,  t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  stages,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  stages,  t);	  sanityChecks(equations,    t,    stages);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
37	[BUG]  [BUGGY]  sanityChecks(t,  Equations.STRICT);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equations.STRICT);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equations.STRICT);	  sanityChecks(equations,    t,    stages);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
38	[BUG]  [BUGGY]  sanityChecks(t,  c,  equations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  c,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  c,  equations);	  sanityChecks(t,    equations,    c);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  sanityChecks(t,  errors,  c);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  errors,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  errors,  c);	  sanityChecks(t,    equations,    c);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  sanityChecks(t,  equations,  scale);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  equations,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  equations,  scale);	  sanityChecks(t,    equations,    c);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  SanityChecks(equations,  t);  setEquations(equivalence);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  SanityChecks(equations,  t);  setEquations(equivalence);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	SanityChecks(equations,  t);  setEquations(equivalence);	  if(t    >    scalAbsoluteTolerance)    {    sanityChecks(equations,    t);    setEquations(equivalence);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
42	[BUG]  [BUGGY]  safeSanityChecks(equations,  t);  setEquations(equivalence);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  safeSanityChecks(equations,  t);  setEquations(equivalence);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	safeSanityChecks(equations,  t);  setEquations(equivalence);	  if(t    >    scalAbsoluteTolerance)    {    sanityChecks(equations,    t);    setEquations(equivalence);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
43	[BUG]  [BUGGY]  t  =  equations.getStart()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t  =  equations.getStart()  +  1;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t  =  equations.getStart()  +  1;	  t    =    equations.getStart();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
44	[BUG]  [BUGGY]  t  =  equations.getEnd();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t  =  equations.getEnd();  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t  =  equations.getEnd();	  t    =    equations.getStart();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
45	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getEquations();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  final  double[][]  b  =  equations.getEquations();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	final  double[][]  b  =  equations.getEquations();	  final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
46	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getEquivalenceState();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  final  double[][]  b  =  equations.getEquivalenceState();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	final  double[][]  b  =  equations.getEquivalenceState();	  final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
47	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getTime();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  final  double[][]  b  =  equations.getTime();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	final  double[][]  b  =  equations.getTime();	  final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
48	[BUG]  [BUGGY]  sanityChecks(c,stages);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,stages);	  sanityChecks(stages,    c);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
49	[BUG]  [BUGGY]  sanityChecks(b,  stages,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(b,  stages,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(b,  stages,  c);	  sanityChecks(stages,    c);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
50	[BUG]  [BUGGY]  sanityChecks(equations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations);	  setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
51	[BUG]  [BUGGY]  setEquations(equations,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  setEquations(equations,  t);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	setEquations(equations,  t);	  setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
52	[BUG]  [BUGGY]  if(t)  {  sanityChecks(equations,  error);  setEquations(equations);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t)  {  sanityChecks(equations,  error);  setEquations(equations);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t)  {  sanityChecks(equations,  error);  setEquations(equations);  }	  if(error)    {    sanityChecks(equations,    error);    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
53	[BUG]  [BUGGY]  sanityChecks(equations,  errors,  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  errors,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  errors,  stages);	  sanityChecks(equations,    error,    stages);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
54	[BUG]  [BUGGY]  sanityChecks(stages,  error,  equations);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  error,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  error,  equations);	  sanityChecks(equations,    error,    stages);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
55	[BUG]  [BUGGY]  sanityChecks(equations,  error,  stages,  scale);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  error,  stages,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  error,  stages,  scale);	  sanityChecks(equations,    error,    stages);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
56	[BUG]  [BUGGY]  double[][]  b  =  equations.getScale();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  double[][]  b  =  equations.getScale();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	double[][]  b  =  equations.getScale();	  double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
57	[BUG]  [BUGGY]  double[][]  b  =  equations.getTime();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  double[][]  b  =  equations.getTime();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	double[][]  b  =  equations.getTime();	  double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
58	[BUG]  [BUGGY]  double[][]  b  =  equations.getEquivalenceState();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  double[][]  b  =  equations.getEquivalenceState();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	double[][]  b  =  equations.getEquivalenceState();	  double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
59	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  t.getMessage());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  System.err.println( "Unexpected  error: "  +  t.getMessage());  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	System.err.println( "Unexpected  error: "  +  t.getMessage());	  t.printStackTrace();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
60	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  t.toString());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  System.err.println( "Unexpected  error: "  +  t.toString());  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	System.err.println( "Unexpected  error: "  +  t.toString());	  t.printStackTrace();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
61	[BUG]  [BUGGY]  setSanityChecks(equations,  t);  setEquations(equivalence);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  setSanityChecks(equations,  t);  setEquations(equivalence);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	setSanityChecks(equations,  t);  setEquations(equivalence);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equivalence);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
62	[BUG]  [BUGGY]  ensureCapacity(equivalence);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  ensureCapacity(equivalence);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	ensureCapacity(equivalence);	  setEquations(equivalence);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
63	[BUG]  [BUGGY]  sanityChecks(b,  scale);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(b,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(b,  scale);	  sanityChecks(b,    c);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
64	[BUG]  [BUGGY]  sanityChecks(c,  b);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  b);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  b);	  sanityChecks(b,    c);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
65	[BUG]  [BUGGY]  sanityChecks(b,  t);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(b,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(b,  t);	  sanityChecks(b,    c);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
66	[BUG]  [BUGGY]  int  k  =  Math.min(equations.size(),  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.size(),  1);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.size(),  1);	  int    k    =    Math.min(equations.size(),    error);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
67	[BUG]  [BUGGY]  int  k  =  Math.max(equations.size(),  error);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.max(equations.size(),  error);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.max(equations.size(),  error);	  int    k    =    Math.min(equations.size(),    error);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
68	[BUG]  [BUGGY]  int  k  =  Math.min(equations.size(),  c.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.size(),  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.size(),  c.length);	  int    k    =    Math.min(equations.size(),    error);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
69	[BUG]  [BUGGY]  sanityChecks(e,  t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(e,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(e,  t);	  sanityChecks(eq,    t);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
70	[BUG]  [BUGGY]  sanityChecks(eq,  t,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(eq,  t,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(eq,  t,  c);	  sanityChecks(eq,    t);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
71	[BUG]  [BUGGY]  sanityChecks(this.stages,  t);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(this.stages,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(this.stages,  t);	  sanityChecks(t,    this.stages);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
72	[BUG]  [BUGGY]  sanityChecks(t,  this.stages,  error);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  this.stages,  error);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  this.stages,  error);	  sanityChecks(t,    this.stages);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
73	[BUG]  [BUGGY]  sanityChecks(t,  this.stages,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  this.stages,  null);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  this.stages,  null);	  sanityChecks(t,    this.stages);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
74	[BUG]  [BUGGY]  sanityChecks(t,  this.stages,  errors);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  this.stages,  errors);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  this.stages,  errors);	  sanityChecks(t,    this.stages);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
75	[BUG]  [BUGGY]  eredNextIsLast  =  false;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  eredNextIsLast  =  false;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	eredNextIsLast  =  false;	  filteredNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
76	[BUG]  [BUGGY]  t  =  equations.getStartTime()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t  =  equations.getStartTime()  +  1;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t  =  equations.getStartTime()  +  1;	  t    =    equations.getStartTime();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
77	[BUG]  [BUGGY]  t  =  equations.getEndTime();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t  =  equations.getEndTime();  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t  =  equations.getEndTime();	  t    =    equations.getStartTime();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
78	[BUG]  [BUGGY]  sanityChecks(c,  t,stages);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  t,stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  t,stages);	  sanityChecks(stages,    t,    c);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
79	[BUG]  [BUGGY]  sanityChecks(t,stages,  c);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,stages,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,stages,  c);	  sanityChecks(stages,    t,    c);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
80	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquivalence(equivalence);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  t);  setEquivalence(equivalence);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  t);  setEquivalence(equivalence);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equivalence);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
81	[BUG]  [BUGGY]  sanityChecks(exp,  equations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(exp,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(exp,  equations);	  sanityChecks(error,    equations);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
82	[BUG]  [BUGGY]  int  k  =  Math.min(equations.length,  errors.length  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.length,  errors.length  +  1);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.length,  errors.length  +  1);	  int    k    =    Math.min(equations.length,    errors.length);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
83	[BUG]  [BUGGY]  int  k  =  Math.max(equations.length,  errors.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.max(equations.length,  errors.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.max(equations.length,  errors.length);	  int    k    =    Math.min(equations.length,    errors.length);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
84	[BUG]  [BUGGY]  int  k  =  Math.min(errors.length,  errors.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(errors.length,  errors.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(errors.length,  errors.length);	  int    k    =    Math.min(equations.length,    errors.length);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
85	[BUG]  [BUGGY]  sanityChecks(t,  b);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  b);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  b);	  sanityChecks(t,    c);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
86	[BUG]  [BUGGY]  int  k  =  Math.min(equations.size());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.size());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.size());	  int    k    =    Math.min(equations.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
87	[BUG]  [BUGGY]  int  k  =  Math.max(equations.size());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.max(equations.size());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.max(equations.size());	  int    k    =    Math.min(equations.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
88	[BUG]  [BUGGY]  int  k  =  Math.min(equations.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.size()  +  1);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.size()  +  1);	  int    k    =    Math.min(equations.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
89	[BUG]  [BUGGY]  int  k  =  Math.min(EQUATIONS.size());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(EQUATIONS.size());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(EQUATIONS.size());	  int    k    =    Math.min(equations.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
90	[BUG]  [BUGGY]  sanityChecks(c,  t,  equations.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  t,  equations.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  t,  equations.length);	  sanityChecks(equations,    t,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
91	[BUG]  [BUGGY]  sanityChecks(t,  equations.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  equations.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  equations.length);	  sanityChecks(equations,    t,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
92	[BUG]  [BUGGY]  sanityChecks(c,  t,  Equations.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  t,  Equations.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  t,  Equations.length);	  sanityChecks(equations,    t,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
93	[BUG]  [BUGGY]  sanityChecks(equations,  t,  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  t,  c.length  +  1);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  t,  c.length  +  1);	  sanityChecks(equations,    t,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
94	[BUG]  [BUGGY]  sanityChecks(t,  errors,  scale);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  errors,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  errors,  scale);	  sanityChecks(t,    errors);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
95	[BUG]  [BUGGY]  t  =  equations.nextIsLast();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t  =  equations.nextIsLast();  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t  =  equations.nextIsLast();	  t    =    equations.next();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
96	[BUG]  [BUGGY]  t  =  equations.nextToken();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t  =  equations.nextToken();  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t  =  equations.nextToken();	  t    =    equations.next();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
97	[BUG]  [BUGGY]  sanityChecks(equations,  error,  scaledH);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  error,  scaledH);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  error,  scaledH);	  sanityChecks(equations,    error,    scale);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
98	[BUG]  [BUGGY]  sanityChecks(equations,  errors,  scale);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  errors,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  errors,  scale);	  sanityChecks(equations,    error,    scale);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
99	[BUG]  [BUGGY]  sanityChecks(scale,  error,  equations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(scale,  error,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(scale,  error,  equations);	  sanityChecks(equations,    error,    scale);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
100	[BUG]  [BUGGY]  int  k  =  Math.max(equations.size(),  errors);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.max(equations.size(),  errors);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.max(equations.size(),  errors);	  int    k    =    Math.min(equations.size(),    errors);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
101	[BUG]  [BUGGY]  int  k  =  Math.min(equations.size(),  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.size(),  2);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.size(),  2);	  int    k    =    Math.min(equations.size(),    errors);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
102	[BUG]  [BUGGY]  int  k  =  Math.min(equations.size(),  errors,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.size(),  errors,  1);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.size(),  errors,  1);	  int    k    =    Math.min(equations.size(),    errors);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
103	[BUG]  [BUGGY]  sanityChecks(equations,  Equivalence.DECEMBER);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  Equivalence.DECEMBER);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  Equivalence.DECEMBER);	  sanityChecks(t,    Equivalence.DECEMBER);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
104	[BUG]  [BUGGY]  sanityChecks(t,  Equivalence.DECEMBER,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equivalence.DECEMBER,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equivalence.DECEMBER,  c);	  sanityChecks(t,    Equivalence.DECEMBER);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
105	[BUG]  [BUGGY]  sanityChecks(t,  Equivalence.DECEMBER,  scaledH);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equivalence.DECEMBER,  scaledH);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equivalence.DECEMBER,  scaledH);	  sanityChecks(t,    Equivalence.DECEMBER);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
106	[BUG]  [BUGGY]  ensureCapacity(t,  Equivalence.DECEMBER);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  ensureCapacity(t,  Equivalence.DECEMBER);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	ensureCapacity(t,  Equivalence.DECEMBER);	  sanityChecks(t,    Equivalence.DECEMBER);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
107	[BUG]  [BUGGY]  sanityChecks(equations,  Equivalence.EQUIP);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  Equivalence.EQUIP);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  Equivalence.EQUIP);	  sanityChecks(t,    Equivalence.EQUIP);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
108	[BUG]  [BUGGY]  sanityChecks(t,  Equivalence.EQUIP,  c);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equivalence.EQUIP,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equivalence.EQUIP,  c);	  sanityChecks(t,    Equivalence.EQUIP);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
109	[BUG]  [BUGGY]  sanityChecks(t,  Equivalence.EQUIP,  filteredNextIsLast);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equivalence.EQUIP,  filteredNextIsLast);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equivalence.EQUIP,  filteredNextIsLast);	  sanityChecks(t,    Equivalence.EQUIP);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
110	[BUG]  [BUGGY]  sanityChecks(t,  Equation.EQUIP,  filteredNextIsLast);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equation.EQUIP,  filteredNextIsLast);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equation.EQUIP,  filteredNextIsLast);	  sanityChecks(t,    Equivalence.EQUIP);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
111	[BUG]  [BUGGY]  sanityChecks(stages,  deficiencies);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  deficiencies);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  deficiencies);	  sanityChecks(equations,    stages);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
112	[BUG]  [BUGGY]  sanityChecks(equations,  stages,  c);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  stages,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  stages,  c);	  sanityChecks(equations,    stages);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
113	[BUG]  [BUGGY]  sanityChecks(stages,  equations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  equations);	  sanityChecks(equations,    stages);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
114	[BUG]  [BUGGY]  sanityChecks(t,  c,  Equations.EMPTY);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  c,  Equations.EMPTY);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  c,  Equations.EMPTY);	  sanityChecks(equations,    c,    t);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
115	[BUG]  [BUGGY]  sanityChecks(c,  equations,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  equations,  t);	  sanityChecks(equations,    c,    t);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
116	[BUG]  [BUGGY]  ensureCapacity(t,  echivalence);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  ensureCapacity(t,  echivalence);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	ensureCapacity(t,  echivalence);	  sanityChecks(t,    echivalence);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
117	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquivalence(t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  t);  setEquivalence(t);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  t);  setEquivalence(t);	  setEquivalence(t);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
118	[BUG]  [BUGGY]  sanityChecks(scale,  equations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(scale,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(scale,  equations);	  sanityChecks(equations,    scale);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
119	[BUG]  [BUGGY]  sanityChecks(equations,  scaledH);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  scaledH);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  scaledH);	  sanityChecks(equations,    scale);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
120	[BUG]  [BUGGY]  sanityChecks(b,  t,  equations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(b,  t,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(b,  t,  equations);	  sanityChecks(c,    t,    equations);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
121	[BUG]  [BUGGY]  sanityChecks(c,  error,  equations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  error,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  error,  equations);	  sanityChecks(c,    t,    equations);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
122	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getRangeScale();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  final  double[][]  b  =  equations.getRangeScale();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	final  double[][]  b  =  equations.getRangeScale();	  final    double[][]    b    =    equations.getScale();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
123	[BUG]  [BUGGY]  sanityChecks(c,  error);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  error);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  error);	  sanityChecks(c,    t);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
124	[BUG]  [BUGGY]  sanityChecks(equations,  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  c.length  +  1);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  c.length  +  1);	  sanityChecks(equations,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
125	[BUG]  [BUGGY]  sanityChecks(c,  equations.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  equations.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  equations.length);	  sanityChecks(equations,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
126	[BUG]  [BUGGY]  sanityChecks(t,  c.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  c.length);	  sanityChecks(equations,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
127	[BUG]  [BUGGY]  sanityChecks(c,  deficiencies);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(c,  deficiencies);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(c,  deficiencies);	  sanityChecks(equations,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
128	[BUG]  [BUGGY]  sanityChecks(equaries,  t);  setEquations(stages);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equaries,  t);  setEquations(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equaries,  t);  setEquations(stages);	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
129	[BUG]  [BUGGY]  SanityChecks(equations,  t);  setEquations(equations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  SanityChecks(equations,  t);  setEquations(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	SanityChecks(equations,  t);  setEquations(equations);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
130	[BUG]  [BUGGY]  filteredNextIsLast  =  t;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  filteredNextIsLast  =  t;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	filteredNextIsLast  =  t;	  filteredNextIsLast    =    null;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
131	[BUG]  [BUGGY]  filteredNextIsLast  =  firstTime;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  filteredNextIsLast  =  firstTime;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	filteredNextIsLast  =  firstTime;	  filteredNextIsLast    =    null;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
132	[BUG]  [BUGGY]  filteredNextIsLast  =  this;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  filteredNextIsLast  =  this;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	filteredNextIsLast  =  this;	  filteredNextIsLast    =    null;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
133	[BUG]  [BUGGY]  filteredNextIsLast  =  new  double[1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  filteredNextIsLast  =  new  double[1];  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	filteredNextIsLast  =  new  double[1];	  filteredNextIsLast    =    null;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
134	[BUG]  [BUGGY]  sanityChecks(t,stages,  error);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,stages,  error);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,stages,  error);	  sanityChecks(t,stages);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
135	[BUG]  [BUGGY]  sanityChecks(t,stages,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,stages,  null);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,stages,  null);	  sanityChecks(t,stages);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
136	[BUG]  [BUGGY]  sanityChecks(t,stages,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,stages,  false);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,stages,  false);	  sanityChecks(t,stages);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
137	[BUG]  [BUGGY]  sanityChecks(equivalence,  errors);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equivalence,  errors);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equivalence,  errors);	  sanityChecks(equations,    errors);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
138	[BUG]  [BUGGY]  sanityChecks(b,  equations);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(b,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(b,  equations);	  sanityChecks(c,    equations);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
139	[BUG]  [BUGGY]  sanityChecks(scale,  t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(scale,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(scale,  t);	  sanityChecks(equations,    t,    scale);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
140	[BUG]  [BUGGY]  sanityChecks(equations,  scale,  stage);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  scale,  stage);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  scale,  stage);	  sanityChecks(equations,    t,    scale);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
141	[BUG]  [BUGGY]  int  k  =  Math.min(errors.length,  equations.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(errors.length,  equations.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(errors.length,  equations.length);	  int    k    =    Math.min(equations.length,    errors.length);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
142	[BUG]  [BUGGY]  t.printStackTrace(System.err);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t.printStackTrace(System.err);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t.printStackTrace(System.err);	  t.printStackTrace();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
143	[BUG]  [BUGGY]  t.printStackTrace(error);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t.printStackTrace(error);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t.printStackTrace(error);	  t.printStackTrace();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
144	[BUG]  [BUGGY]  t.println();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t.println();  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t.println();	  t.printStackTrace();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
145	[BUG]  [BUGGY]  double[][]  b  =  equations.getEquations();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  double[][]  b  =  equations.getEquations();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	double[][]  b  =  equations.getEquations();	  double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
146	[BUG]  [BUGGY]  sanityChecks(error,  equations,  t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(error,  equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(error,  equations,  t);	  sanityChecks(error,    equations);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
147	[BUG]  [BUGGY]  luate(equations,  error);  setEquations(equations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  luate(equations,  error);  setEquations(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	luate(equations,  error);  setEquations(equations);	  if(error)    {    sanityChecks(equations,    error);    setEquations(equations);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
148	[BUG]  [BUGGY]  sanityChecks(stages,  scale,  filteredNextIsLast);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  scale,  filteredNextIsLast);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  scale,  filteredNextIsLast);	  sanityChecks(stages,    scale);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
149	[BUG]  [BUGGY]  sanityChecks(stages,  scale,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  scale,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  scale,  t);	  sanityChecks(stages,    scale);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
150	[BUG]  [BUGGY]  MutableState.checkNotNull(stages);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  MutableState.checkNotNull(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	MutableState.checkNotNull(stages);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
151	[BUG]  [BUGGY]  t  =  equations.getSlope();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t  =  equations.getSlope();  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t  =  equations.getSlope();	  t    =    equations.getScale();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
152	[BUG]  [BUGGY]  sanityChecks(t,  error,  equations,  c);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  error,  equations,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  error,  equations,  c);	  sanityChecks(t,    equations,    c);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
153	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }	  sanityChecks(stages,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
154	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }	  sanityChecks(stages,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
155	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sanityChecks(stages,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
156	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  IllegalStateException( " ");  }	  sanityChecks(stages,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
157	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getEquivalenceScale();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  final  double[][]  b  =  equations.getEquivalenceScale();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	final  double[][]  b  =  equations.getEquivalenceScale();	  final    double[][]    b    =    equations.getScale();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
158	[BUG]  [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }	  sanityChecks(stages,    t);    setEquals(stages);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
159	[BUG]  [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  else  {  throw  new  MathIllegalStateException( " ");  }	  sanityChecks(stages,    t);    setEquals(stages);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
160	[BUG]  [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sanityChecks(stages,    t);    setEquals(stages);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
161	[BUG]  [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  stages)  {  sanityChecks(stages,  t);  setEquals(stages);  }  else  {  throw  new  IllegalStateException( " ");  }	  sanityChecks(stages,    t);    setEquals(stages);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
162	[BUG]  [BUGGY]  sanityChecks(stages,  Equations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  Equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  Equations);	  sanityChecks(equations,    stages);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
163	[BUG]  [BUGGY]  sanityChecks(stages,  Equations.DECEMBER);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  Equations.DECEMBER);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  Equations.DECEMBER);	  sanityChecks(equations,    stages);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
164	[BUG]  [BUGGY]  sanityChecks(stages,  error,  scale);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  error,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  error,  scale);	  sanityChecks(equations,    error,    scale);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
165	[BUG]  [BUGGY]  sanityChecks(equations,  error,  scale,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  error,  scale,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  error,  scale,  stages);	  sanityChecks(equations,    error,    scale);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
166	[BUG]  [BUGGY]  sanityChecks(t,  Equation.EQUIP);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equation.EQUIP);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equation.EQUIP);	  sanityChecks(t,    Equivalence.EQUIP);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
167	[BUG]  [BUGGY]  sanityChecks(t,  Equivalence.EQUIP,  b);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equivalence.EQUIP,  b);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equivalence.EQUIP,  b);	  sanityChecks(t,    Equivalence.EQUIP);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
168	[BUG]  [BUGGY]  sanityChecks(stages,  t,  scale);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  t,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  t,  scale);	  sanityChecks(equations,    t,    scale);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
169	[BUG]  [BUGGY]  sanityChecks(equations,  scale,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  scale,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  scale,  stages);	  sanityChecks(equations,    t,    scale);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
170	[BUG]  [BUGGY]  escapedNextIsLast  =  false;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  escapedNextIsLast  =  false;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	escapedNextIsLast  =  false;	  eredNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
171	[BUG]  [BUGGY]  if(error)  {  sanityChecks(t,  error);  setEquations(equations);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(error)  {  sanityChecks(t,  error);  setEquations(equations);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(error)  {  sanityChecks(t,  error);  setEquations(equations);  }	  sanityChecks(t,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
172	[BUG]  [BUGGY]  if(error)  {  sanityChecks(t,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(error)  {  sanityChecks(t,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(error)  {  sanityChecks(t,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }	  sanityChecks(t,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
173	[BUG]  [BUGGY]  sanityChecks(stages,  error,  Equations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  error,  Equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  error,  Equations);	  sanityChecks(equations,    error,    stages);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
174	[BUG]  [BUGGY]  sanityChecks(stages,  error,  deficiencies);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  error,  deficiencies);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  error,  deficiencies);	  sanityChecks(equations,    error,    stages);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
175	[BUG]  [BUGGY]  sanityChecks(t,  Equation.EQUIPMENT);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equation.EQUIPMENT);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equation.EQUIPMENT);	  sanityChecks(t,    Equivalence);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
176	[BUG]  [BUGGY]  sanityChecks(equations,  c);  setEquations(stages);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  c);  setEquations(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  c);  setEquations(stages);	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
177	[BUG]  [BUGGY]  sanityChecks(stages,  c,  t);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  c,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  c,  t);	  sanityChecks(equations,    c,    t);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
178	[BUG]  [BUGGY]  sanityChecks(equations,  scale,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  scale,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  scale,  t);	  sanityChecks(equations,    c,    t);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
179	[BUG]  [BUGGY]  sanityChecks(equations,  c,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  c,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  c,  stages);	  sanityChecks(equations,    c,    t);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
180	[BUG]  [BUGGY]  sanityChecks(t,stages,  filteredNextIsLast);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,stages,  filteredNextIsLast);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,stages,  filteredNextIsLast);	  sanityChecks(t,stages);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
181	[BUG]  [BUGGY]  int  k  =  Math.min(equations.size(),  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.size(),  0);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.size(),  0);	  int    k    =    Math.min(equations.size(),    error);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
182	[BUG]  [BUGGY]  sanityChecks(stages,  t,  equations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  t,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  t,  equations);	  sanityChecks(equations,    t,    stages);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
183	[BUG]  [BUGGY]  sanityChecks(stages,  t,  Equations.DECEMBER);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  t,  Equations.DECEMBER);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  t,  Equations.DECEMBER);	  sanityChecks(equations,    t,    stages);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
184	[BUG]  [BUGGY]  sanityChecks(stages,  t,  Equations.EMPTY);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  t,  Equations.EMPTY);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  t,  Equations.EMPTY);	  sanityChecks(equations,    t,    stages);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
185	[BUG]  [BUGGY]  final  filteredNextIsLast  =  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  final  filteredNextIsLast  =  true;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	final  filteredNextIsLast  =  true;	  filteredNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
186	[BUG]  [BUGGY]  sanityChecks(stages,  t,  c.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  t,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  t,  c.length);	  sanityChecks(equations,    t,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
187	[BUG]  [BUGGY]  sanityChecks(t,  equations,  c.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  equations,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  equations,  c.length);	  sanityChecks(equations,    t,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
188	[BUG]  [BUGGY]  sanityChecks(equations,  c.length,  t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  c.length,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  c.length,  t);	  sanityChecks(equations,    t,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
189	[BUG]  [BUGGY]  sanityChecks(equations,  echivalence);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  echivalence);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  echivalence);	  sanityChecks(t,    echivalence);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
190	[BUG]  [BUGGY]  sanityChecks(t,  c,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  c,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  c,  stages);	  sanityChecks(t,    c);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
191	[BUG]  [BUGGY]  int  k  =  Math.min(equations.size(),  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.size(),  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.size(),  stages);	  int    k    =    Math.min(equations.size(),    errors);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
192	[BUG]  [BUGGY]  int  k  =  Math.min(errors.size(),  equations.size());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(errors.size(),  equations.size());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(errors.size(),  equations.size());	  int    k    =    Math.min(equations.size(),    errors);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
193	[BUG]  [BUGGY]  sanityChecks(t,  Equivalence.DECEMBER,  scale);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equivalence.DECEMBER,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equivalence.DECEMBER,  scale);	  sanityChecks(t,    Equivalence.DECEMBER);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
194	[BUG]  [BUGGY]  sanityChecks(e,  Equivalence.DECEMBER);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(e,  Equivalence.DECEMBER);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(e,  Equivalence.DECEMBER);	  sanityChecks(t,    Equivalence.DECEMBER);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
195	[BUG]  [BUGGY]  filteredNextIsLast  =  error;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  filteredNextIsLast  =  error;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	filteredNextIsLast  =  error;	  filteredNextIsLast    =    null;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
196	[BUG]  [BUGGY]  setEquations(stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  setEquations(stages);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	setEquations(stages);	  setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
197	[BUG]  [BUGGY]  sanityChecks(t,  error,  c);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  error,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  error,  c);	  sanityChecks(t,    error);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
198	[BUG]  [BUGGY]  luate(equations,  t);  setEquations(equivalence);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  luate(equations,  t);  setEquations(equivalence);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	luate(equations,  t);  setEquations(equivalence);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equivalence);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
199	[BUG]  [BUGGY]  t  =  equations.getStart()  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t  =  equations.getStart()  +  2;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t  =  equations.getStart()  +  2;	  t    =    equations.getStart();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
200	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  t);  setEquations(stages);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  t);  setEquations(stages);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(stages!=  null)  {  sanityChecks(stages,  t);  setEquations(stages);  }	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
201	[BUG]  [BUGGY]  if(t  >  stages.length)  {  sanityChecks(stages,  t);  setEquations(stages);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  stages.length)  {  sanityChecks(stages,  t);  setEquations(stages);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  stages.length)  {  sanityChecks(stages,  t);  setEquations(stages);  }	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
202	[BUG]  [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquations(stages);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquations(stages);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  stages)  {  sanityChecks(stages,  t);  setEquations(stages);  }	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
203	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  t);  setEquations(stages);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  t);  setEquations(stages);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(stages!=  null)  {  sanityChecks(stages,  t);  setEquations(stages);  }  else  {  throw  new  MathIllegalStateException( " ");  }	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
204	[BUG]  [BUGGY]  sanityChecks(b,  c,  scale);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(b,  c,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(b,  c,  scale);	  sanityChecks(b,    c);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
205	[BUG]  [BUGGY]  sanityChecks(b,  c.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(b,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(b,  c.length);	  sanityChecks(b,    c);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
206	[BUG]  [BUGGY]  sanityChecks(equations,  errors);  setEquations(equations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  errors);  setEquations(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  errors);  setEquations(equations);	  if(error)    {    sanityChecks(equations,    error);    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
207	[BUG]  [BUGGY]  sanityChecks(equations,  error);  setEquations(equations);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  error);  setEquations(equations);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  error);  setEquations(equations);  }	  if(error)    {    sanityChecks(equations,    error);    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
208	[BUG]  [BUGGY]  sanityChecks(stages,  c.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  c.length);	  sanityChecks(equations,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
209	[BUG]  [BUGGY]  sanityChecks(equations,  stages.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  stages.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  stages.length);	  sanityChecks(equations,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
210	[BUG]  [BUGGY]  ensureCapacity(t,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  ensureCapacity(t,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	ensureCapacity(t,  stages);	  ensureCapacity(t,    equations);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
211	[BUG]  [BUGGY]  if(filteredNextIsLast)  {  gedNextIsLast  =  true;  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(filteredNextIsLast)  {  gedNextIsLast  =  true;  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(filteredNextIsLast)  {  gedNextIsLast  =  true;  }  else  {  throw  new  MathIllegalStateException( " ");  }	  gedNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
212	[BUG]  [BUGGY]  if(filteredNextIsLast)  {  gedNextIsLast  =  true;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(filteredNextIsLast)  {  gedNextIsLast  =  true;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(filteredNextIsLast)  {  gedNextIsLast  =  true;  }  else  {  throw  new  IllegalStateException( " ");  }	  gedNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
213	[BUG]  [BUGGY]  sanityChecks(t,  this.stages,  c);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  this.stages,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  this.stages,  c);	  sanityChecks(t,    this.stages);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
214	[BUG]  [BUGGY]  sanityChecks(stages,  errors);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  errors);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  errors);	  sanityChecks(equations,    errors);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
215	[BUG]  [BUGGY]  sanityChecks(errors,  equations);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(errors,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(errors,  equations);	  sanityChecks(equations,    errors);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
216	[BUG]  [BUGGY]  setEquations(t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  setEquations(t);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	setEquations(t);	  setEquations(equivalence);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
217	[BUG]  [BUGGY]  t.printStackTrace(e);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  t.printStackTrace(e);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	t.printStackTrace(e);	  t.printStackTrace();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
218	[BUG]  [BUGGY]  sanityChecks(equations,  t,  Equivalence.DECEMBER);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  t,  Equivalence.DECEMBER);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  t,  Equivalence.DECEMBER);	  sanityChecks(t,    Equivalence.DECEMBER);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
219	[BUG]  [BUGGY]  sanityChecks(t,  Equivalence.DECEMBER,  c.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  Equivalence.DECEMBER,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  Equivalence.DECEMBER,  c.length);	  sanityChecks(t,    Equivalence.DECEMBER);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
220	[BUG]  [BUGGY]  sanityChecks(stages,  surveys);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  surveys);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  surveys);	  sanityChecks(equations,    stages);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
221	[BUG]  [BUGGY]  sanityChecks(equations,  c);  setEquations(equivalence);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  c);  setEquations(equivalence);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  c);  setEquations(equivalence);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equivalence);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
222	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  error);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  error);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  error);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(error)    {    sanityChecks(equations,    error);    setEquations(equations);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
223	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  error);  setEquations(equations);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  error);  setEquations(equations);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  error);  setEquations(equations);  }	  if(error)    {    sanityChecks(equations,    error);    setEquations(equations);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
224	[BUG]  [BUGGY]  trimmedNextIsLast  =  false;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  trimmedNextIsLast  =  false;  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	trimmedNextIsLast  =  false;	  eredNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
225	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalStateException( " ");  }	  if(error)    {    sanityChecks(equations,    error);    setEquations(equations);    }    else    {    throw    new    MathIllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
226	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equivalence);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equivalence);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equivalence);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equivalence);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
227	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquivalence(equivalence);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  setEquivalence(equivalence);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  setEquivalence(equivalence);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equivalence);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
228	[BUG]  [BUGGY]  if(t  >  stages.length)  {  sanityChecks(stages,  t);  setEquals(stages);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  stages.length)  {  sanityChecks(stages,  t);  setEquals(stages);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  stages.length)  {  sanityChecks(stages,  t);  setEquals(stages);  }	  sanityChecks(stages,    t);    setEquals(stages);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
229	[BUG]  [BUGGY]  sanityChecks(equals,  t,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equals,  t,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equals,  t,  c);	  sanityChecks(equals,    t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
230	[BUG]  [BUGGY]  sanityChecks(equals,  t,  a);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equals,  t,  a);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equals,  t,  a);	  sanityChecks(equals,    t);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
231	[BUG]  [BUGGY]  sanityChecks(b,  c,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(b,  c,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(b,  c,  t);	  sanityChecks(b,    c);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
232	[BUG]  [BUGGY]  Annotations.checkState(t);  setEquations(equations);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  Annotations.checkState(t);  setEquations(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	Annotations.checkState(t);  setEquations(equations);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
233	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  t);  setEquations(equations);  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
234	[BUG]  [BUGGY]  sanityChecks(equations,  t);  setEquations(equates);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  t);  setEquations(equates);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  t);  setEquations(equates);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
235	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(stages!=  null)  {  sanityChecks(stages,  error);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }	  sanityChecks(stages,    error);    setEquations(equations);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
236	[BUG]  [BUGGY]  if(t  >  sanityChecks(equations,  t))  {  setEquations(stages);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  sanityChecks(equations,  t))  {  setEquations(stages);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  sanityChecks(equations,  t))  {  setEquations(stages);  }	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
237	[BUG]  [BUGGY]  if(t  >  sanityChecks(equations,  t))  {  throw  new  MathIllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  sanityChecks(equations,  t))  {  throw  new  MathIllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  sanityChecks(equations,  t))  {  throw  new  MathIllegalArgumentException( " ");  }	  if(stages!=    null)    {    sanityChecks(equations,    t);    setEquations(stages);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
238	[BUG]  [BUGGY]  sanityChecks(equations,  c);  setEquations(equations);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  c);  setEquations(equations);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  c);  setEquations(equations);	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
239	[BUG]  [BUGGY]  this.filteredNextIsLast  =  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  this.filteredNextIsLast  =  true;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	this.filteredNextIsLast  =  true;	  filteredNextIsLast    =    true;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
240	[BUG]  [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquations(stages);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  stages)  {  sanityChecks(stages,  t);  setEquations(stages);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  stages)  {  sanityChecks(stages,  t);  setEquations(stages);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
241	[BUG]  [BUGGY]  if(t  >  stages.getTime())  {  sanityChecks(stages,  t);  setEquations(stages);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  stages.getTime())  {  sanityChecks(stages,  t);  setEquations(stages);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  stages.getTime())  {  sanityChecks(stages,  t);  setEquations(stages);  }	  sanityChecks(stages,    t);    setEquations(stages);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
242	[BUG]  [BUGGY]  sanityChecks(equations,  error,  factor);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(equations,  error,  factor);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(equations,  error,  factor);	  sanityChecks(equations,    error,    scale);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
243	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
244	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
245	[BUG]  [BUGGY]  sanityChecks(e,  Equivalence.EQUIP);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(e,  Equivalence.EQUIP);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(e,  Equivalence.EQUIP);	  sanityChecks(t,    Equivalence.EQUIP);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
246	[BUG]  [BUGGY]  int  k  =  Math.min(stages.length,  errors.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(stages.length,  errors.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(stages.length,  errors.length);	  int    k    =    Math.min(equations.length,    errors.length);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
247	[BUG]  [BUGGY]  int  k  =  Math.min(equations.length,  c.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  int  k  =  Math.min(equations.length,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	int  k  =  Math.min(equations.length,  c.length);	  int    k    =    Math.min(equations.length,    errors.length);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
248	[BUG]  [BUGGY]  if(t  >  sanityChecks(equations,  error))  {  setEquations(equations);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  sanityChecks(equations,  error))  {  setEquations(equations);  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  sanityChecks(equations,  error))  {  setEquations(equations);  }	  if(error)    {    sanityChecks(equations,    error);    setEquations(equations);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
249	[BUG]  [BUGGY]  sanityChecks(t,  errors,  equations,  c);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  errors,  equations,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  errors,  equations,  c);	  sanityChecks(t,    equations,    c);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
250	[BUG]  [BUGGY]  sanityChecks(t,  b,  c);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  b,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  b,  c);	  sanityChecks(t,    equations,    c);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
251	[BUG]  [BUGGY]  sanityChecks(scale,  t,  equations);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(scale,  t,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(scale,  t,  equations);	  sanityChecks(equations,    t,    scale);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
252	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  0)  {  sanityChecks(equations,  c);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
253	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c.length);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  c.length);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	if(t  >  0)  {  sanityChecks(equations,  c.length);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(t    >    0)    {    sanityChecks(equations,    t);    setEquations(equations);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
254	[BUG]  [BUGGY]  ScannedSanityChecks  sanityChecks(equations,  t);  setEquations(equivalence);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  ScannedSanityChecks  sanityChecks(equations,  t);  setEquations(equivalence);  [BUGGY]      sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	ScannedSanityChecks  sanityChecks(equations,  t);  setEquations(equivalence);	  if(t    >    scalAbsoluteTolerance)    {    sanityChecks(equations,    t);    setEquations(equivalence);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
255	[BUG]  [BUGGY]  sanityChecks(t,  c,  Equations.MULTIPLE);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  c,  Equations.MULTIPLE);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  c,  Equations.MULTIPLE);	  sanityChecks(equations,    c,    t);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
256	[BUG]  [BUGGY]  sanityChecks(t,  equations,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(t,  equations,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(t,  equations,  stages);	  sanityChecks(equations,    t,    stages);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
257	[BUG]  [BUGGY]  sanityChecks(stages,  t,  surveys);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  t,  surveys);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  t,  surveys);	  sanityChecks(equations,    t,    stages);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
258	[BUG]  [BUGGY]  sanityChecks(e,  Equivalence);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(e,  Equivalence);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(e,  Equivalence);	  sanityChecks(t,    Equivalence);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
259	[BUG]  [BUGGY]  sanityChecks(e,  errors);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(e,  errors);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(e,  errors);	  sanityChecks(t,    errors);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
260	[BUG]  [BUGGY]  sanityChecks(stages,  error,  errors);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {      [BUGGY]  sanityChecks(stages,  error,  errors);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	194	194	1	replace	sanityChecks(stages,  error,  errors);	  sanityChecks(equations,    error,    stages);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
