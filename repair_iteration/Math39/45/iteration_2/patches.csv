bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  setMaxGrowth(0.5);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMaxGrowth(0.5);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMaxGrowth(0.5);	  setMaxGrowth(10.0);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2	[BUG]  [BUGGY]  if(exp  <  0.0)  {  setMinReduction(1.0);  setMaxGrowth(10.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  <  0.0)  {  setMinReduction(1.0);  setMaxGrowth(10.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  <  0.0)  {  setMinReduction(1.0);  setMaxGrowth(10.0);  }	  if(exp    >    0.0)    {    setMinReduction(1.0);    setMaxGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
3	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Settings  settings  =  Settings.getInstance();  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Settings  settings  =  Settings.getInstance();	  if(exp    >    0)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
4	[BUG]  [BUGGY]  Settings.checkState(exp  >  0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Settings.checkState(exp  >  0);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Settings.checkState(exp  >  0);	  if(exp    >    0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
5	[BUG]  [BUGGY]  Set  <  K>  setMinGrowth(0.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Set  <  K>  setMinGrowth(0.0);  setMaxGrowth(1.0);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Set  <  K>  setMinGrowth(0.0);  setMaxGrowth(1.0);	  Set    <    K>    setMinGrowth(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
6	[BUG]  [BUGGY]  Set  <  K>  setMinGrowth(2.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Set  <  K>  setMinGrowth(2.0);  setMaxGrowth(1.0);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Set  <  K>  setMinGrowth(2.0);  setMaxGrowth(1.0);	  Set    <    K>    setMinGrowth(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
7	[BUG]  [BUGGY]  Settings  settings  =  Settings.newHashSet();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Settings  settings  =  Settings.newHashSet();  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Settings  settings  =  Settings.newHashSet();	  if(exp    >    0.0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
8	[BUG]  [BUGGY]  setMinGrowth(0.2);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinGrowth(0.2);  setMaxGrowth(1.0);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinGrowth(0.2);  setMaxGrowth(1.0);	  setMinGrowth(0.5);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  setMinReduction(1.0  /  exp);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinReduction(1.0  /  exp);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinReduction(1.0  /  exp);	  setMinReduction(1.0    -    exp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  setMinReduction(1.0  -  exp  +  10.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinReduction(1.0  -  exp  +  10.0);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinReduction(1.0  -  exp  +  10.0);	  setMinReduction(1.0    -    exp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  setMaxReduction(1.0  -  exp);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMaxReduction(1.0  -  exp);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMaxReduction(1.0  -  exp);	  setMinReduction(1.0    -    exp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  if(exp  ==  1.0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  ==  1.0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  ==  1.0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  if(exp    ==    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  Settings.checkState(exp  >  0.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Settings.checkState(exp  >  0.0);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Settings.checkState(exp  >  0.0);	  if(exp    >    0.0)    {    setMinReduction(0.0);    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
14	[BUG]  [BUGGY]  setMinReduction(exp);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinReduction(exp);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinReduction(exp);	  setMinReduction(1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  setMinReduction(2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinReduction(2);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinReduction(2);	  setMinReduction(1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  setMinGrowth(2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinGrowth(2);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinGrowth(2);	  setMinGrowth(1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  setMinGrowth(exp);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinGrowth(exp);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinGrowth(exp);	  setMinGrowth(1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setMinReduction(0.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >=  0.0)  {  setMinReduction(0.0);  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >=  0.0)  {  setMinReduction(0.0);  setMaxGrowth(1.0);  }	  if(exp!=    0.0)    {    setMinReduction(0.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  Settings  settings  =  Settings.newHashSet();  setSafety(1.0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Settings  settings  =  Settings.newHashSet();  setSafety(1.0);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Settings  settings  =  Settings.newHashSet();  setSafety(1.0);	  if(exp    >    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  Settings  settings  =  Settings.getInstance();  setSafety(1.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Settings  settings  =  Settings.getInstance();  setSafety(1.0);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Settings  settings  =  Settings.getInstance();  setSafety(1.0);	  if(exp    >    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  setMinGrowth(1);  setMaxGrowth(2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinGrowth(1);  setMaxGrowth(2);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinGrowth(1);  setMaxGrowth(2);	  setMinGrowth(1);    setMaxGrowth(1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
22	[BUG]  [BUGGY]  setMinGrowth(2);  setMaxGrowth(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinGrowth(2);  setMaxGrowth(1);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinGrowth(2);  setMaxGrowth(1);	  setMinGrowth(1);    setMaxGrowth(1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
23	[BUG]  [BUGGY]  setScaleAbsoluteTolerance(1.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setScaleAbsoluteTolerance(1.0);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setScaleAbsoluteTolerance(1.0);	  if(exp    >    0.0)    {    setMaxGrowth(1.0);    }    else    {    setScaleAbsoluteTolerance(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
24	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(0.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(0.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  0.0)  {  setMinGrowth(0.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    setMinReduction(0.0);    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
25	[BUG]  [BUGGY]  if(exp  >  1.0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  1.0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  1.0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  if(exp    >    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet();  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Set  <  String>  setSafety  =  Sets.newHashSet();	  if(exp    >    0)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
27	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(exp);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(exp);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Set  <  String>  setSafety  =  Sets.newHashSet(exp);	  if(exp    >    0)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
28	[BUG]  [BUGGY]  if(exp  <  0.0)  {  setMinReduction(0.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  <  0.0)  {  setMinReduction(0.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  <  0.0)  {  setMinReduction(0.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(exp    >    0.0)    {    setMinReduction(0.0);    setMaxGrowth(1.0);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
29	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setMinReduction(1.0);  setMaxGrowth(10.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >=  0.0)  {  setMinReduction(1.0);  setMaxGrowth(10.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >=  0.0)  {  setMinReduction(1.0);  setMaxGrowth(10.0);  }	  if(exp    >    0.0)    {    setMinReduction(1.0);    setMaxGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
30	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >=  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >=  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    setMinReduction(1.0);    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
31	[BUG]  [BUGGY]  if(exp  >  1.0)  {  setMaxGrowth(1.0);  }  else  {  setScaleAbsoluteTolerance(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  1.0)  {  setMaxGrowth(1.0);  }  else  {  setScaleAbsoluteTolerance(1.0);  }  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  1.0)  {  setMaxGrowth(1.0);  }  else  {  setScaleAbsoluteTolerance(1.0);  }	  if(exp    >    0.0)    {    setMaxGrowth(1.0);    }    else    {    setScaleAbsoluteTolerance(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
32	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(1.0);  }  else  {  setScaleAbsoluteTolerance(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(1.0);  }  else  {  setScaleAbsoluteTolerance(1.0);  }  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  0.0)  {  setMinGrowth(1.0);  }  else  {  setScaleAbsoluteTolerance(1.0);  }	  if(exp    >    0.0)    {    setMaxGrowth(1.0);    }    else    {    setScaleAbsoluteTolerance(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
33	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >=  0.0)  {  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >=  0.0)  {  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
34	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinReduction(0.2);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  0.0)  {  setMinReduction(0.2);  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  0.0)  {  setMinReduction(0.2);  setMaxGrowth(1.0);  }	  setMinReduction(0.2);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinReduction(0.2);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  0.0)  {  setMinReduction(0.2);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  0.0)  {  setMinReduction(0.2);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  setMinReduction(0.2);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  Set  <  String>  setMaxGrowth  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Set  <  String>  setMaxGrowth  =  Sets.newHashSet();  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Set  <  String>  setMaxGrowth  =  Sets.newHashSet();	  if(exp    >    0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
37	[BUG]  [BUGGY]  Set  <  String>  setMaxGrowth  =  Sets.newHashSet(exp);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Set  <  String>  setMaxGrowth  =  Sets.newHashSet(exp);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Set  <  String>  setMaxGrowth  =  Sets.newHashSet(exp);	  if(exp    >    0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
38	[BUG]  [BUGGY]  setMinReduction(0.0  -  exp);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMinReduction(0.0  -  exp);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMinReduction(0.0  -  exp);	  setMinReduction(1.0    -    exp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setMinReduction(0.5);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >=  0.0)  {  setMinReduction(0.5);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >=  0.0)  {  setMinReduction(0.5);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    setMinReduction(0.5);    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
40	[BUG]  [BUGGY]  double  setMinGrowth(1.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  double  setMinGrowth(1.0);  setMaxGrowth(1.0);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	double  setMinGrowth(1.0);  setMaxGrowth(1.0);	  Set    <    K>    setMinGrowth(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
41	[BUG]  [BUGGY]  this.maxGrowth  =  exp  >  0.0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  this.maxGrowth  =  exp  >  0.0;  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	this.maxGrowth  =  exp  >  0.0;	  if(exp    >    0.0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
42	[BUG]  [BUGGY]  this.maxGrowth  =  exp;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  this.maxGrowth  =  exp;  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	this.maxGrowth  =  exp;	  if(exp    >    0.0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
43	[BUG]  [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  <  =  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }	  if(exp    <    0.0)    {    setMinReduction(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
44	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0.0);  }	  if(exp    >    0.0)    {    setMinReduction(1.0);    setMaxGrowth(10.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
45	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(exp    >    0.0)    {    setMinReduction(0.0);    setMaxGrowth(1.0);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
46	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(0.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(0.0);  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  0.0)  {  setMinGrowth(0.0);  setMaxGrowth(1.0);  }	  setMinGrowth(0.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  setMaxGrowth(1.0  -  exp);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  setMaxGrowth(1.0  -  exp);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	setMaxGrowth(1.0  -  exp);	  setMinReduction(1.0    -    exp);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  Set  <  Math>  setMaxGrowth  =  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Set  <  Math>  setMaxGrowth  =  setMaxGrowth(1.0);  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Set  <  Math>  setMaxGrowth  =  setMaxGrowth(1.0);	  if(exp    >    0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
49	[BUG]  [BUGGY]  Set  <  Math>  setMaxGrowth  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  Set  <  Math>  setMaxGrowth  =  Sets.newHashSet();  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	Set  <  Math>  setMaxGrowth  =  Sets.newHashSet();	  if(exp    >    0)    {    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
50	[BUG]  [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  <  =  0.0)  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    setMinReduction(1.0);    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
51	[BUG]  [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(1.0);  setMaxGrowth(10.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(1.0);  setMaxGrowth(10.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  <  =  0.0)  {  setMinReduction(1.0);  setMaxGrowth(10.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    setMinReduction(1.0);    setMaxGrowth(10.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
52	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(0.5);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  0.0)  {  setMinGrowth(0.5);  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  0.0)  {  setMinGrowth(0.5);  setMaxGrowth(1.0);  }	  setMinGrowth(0.5);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(0.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  <  =  0.0)  {  setMinReduction(0.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  <  =  0.0)  {  setMinReduction(0.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    setMinReduction(0.0);    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
54	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);      [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  }  [BUGGY]      setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	127	127	1	replace	if(exp  >  0.0)  {  setSafety(1.0);  }	  if(exp    ==    0.0)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
