bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getSecondState();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getSecondState();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getSecondState();	  final    double[][]    c    =    equations.getCurrentState();    	non-compiled	[CE]  while  expected	25	None	replace
2	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getSecondaryMappers();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getSecondaryMappers();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getSecondaryMappers();	  final    double[][]    c    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	26	None	replace
3	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getFirstSecondaryMapper();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getFirstSecondaryMapper();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getFirstSecondaryMapper();	  final    double[][]    c    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	26	None	replace
4	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentMapper();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getCurrentMapper();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getCurrentMapper();	  final    double[][]    c    =    equations.getPrimaryMapper();    	non-compiled	[CE]  while  expected	42	None	replace
5	[BUG]  [BUGGY]  sanityChecks(equations,  t);  [CE]  while  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  sanityChecks(equations,  t);  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	sanityChecks(equations,  t);	  setEquations(equations);    	non-compiled	[CE]  while  expected	20	None	replace
6	[BUG]  [BUGGY]  final  double[]  y0  =  equations.getCompleteState();  [CE]  while  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  y0  =  equations.getCompleteState();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  y0  =  equations.getCompleteState();	  setEquations(equations);    	non-compiled	[CE]  while  expected	20	None	replace
7	[BUG]  [BUGGY]  setEquations(y0);  [CE]  while  expected  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(y0);  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(y0);	  setEquations(equations);    	non-compiled	[CE]  while  expected	20	None	replace
8	[BUG]  [BUGGY]  sanityChecks(equations);  [CE]  while  expected  [FE]                            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  sanityChecks(equations);  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	sanityChecks(equations);	  setEquations(equations);    	non-compiled	[CE]  while  expected	20	None	replace
9	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])y0.getCompleteState();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =(double[][])y0.getCompleteState();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =(double[][])y0.getCompleteState();	  final    double[][]    c    =(double[][])equations.getCompleteState();    	non-compiled	[CE]  while  expected	38	None	replace
10	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])y0.clone();  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =(double[][])y0.clone();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =(double[][])y0.clone();	  final    double[][]    c    =(double[][])equations.getCompleteState();    	non-compiled	[CE]  while  expected	38	None	replace
11	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])equations.getEquivalenceState();  [CE]  while  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =(double[][])equations.getEquivalenceState();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =(double[][])equations.getEquivalenceState();	  final    double[][]    c    =(double[][])equations.getCompleteState();    	non-compiled	[CE]  while  expected	38	None	replace
12	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCount();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getCount();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getCount();	  final    double[][]    c    =    equations.getRangeState();    	non-compiled	[CE]  while  expected	27	None	replace
13	[BUG]  [BUGGY]  setEquations(y0.getCompleteState());  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(y0.getCompleteState());  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(y0.getCompleteState());	  setEquations(equations.getCompleteState());    	non-compiled	[CE]  while  expected	24	None	replace
14	[BUG]  [BUGGY]  final  double[]  b  =  equations.getCompleteState();  [CE]  while  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  b  =  equations.getCompleteState();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  b  =  equations.getCompleteState();	  setEquations(equations.getCompleteState());    	non-compiled	[CE]  while  expected	24	None	replace
15	[BUG]  [BUGGY]  setEquations(equations.getSecondaryMapper());  [CE]  while  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(equations.getSecondaryMapper());  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(equations.getSecondaryMapper());	  setEquations(equations.getCompleteState());    	non-compiled	[CE]  while  expected	24	None	replace
16	[BUG]  [BUGGY]  final  double[]  c  =(t  ==  null)?  t  :  b.clone();  [CE]  while  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(t  ==  null)?  t  :  b.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(t  ==  null)?  t  :  b.clone();	  final    double[]    c    =(t    ==    null)?    t    :    t.clone();    	non-compiled	[CE]  while  expected	46	None	replace
17	[BUG]  [BUGGY]  final  double[]  c  =(t  ==  null)?  b  :  t.clone();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(t  ==  null)?  b  :  t.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(t  ==  null)?  b  :  t.clone();	  final    double[]    c    =(t    ==    null)?    t    :    t.clone();    	non-compiled	[CE]  while  expected	46	None	replace
18	[BUG]  [BUGGY]  final  double[]  c  =(y0!=  null)?  t  :  t.clone();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y0!=  null)?  t  :  t.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y0!=  null)?  t  :  t.clone();	  final    double[]    c    =(t!=    null)?    t    :    y0.clone();    	non-compiled	[CE]  while  expected	21	None	replace
19	[BUG]  [BUGGY]  final  double[]  c  =(y0  ==  null)?  t  :  t.clone();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y0  ==  null)?  t  :  t.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y0  ==  null)?  t  :  t.clone();	  final    double[]    c    =(t!=    null)?    t    :    y0.clone();    	non-compiled	[CE]  while  expected	21	None	replace
20	[BUG]  [BUGGY]  final  double[]  c  =  equations.getFirstSecondaryMappers();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getFirstSecondaryMappers();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getFirstSecondaryMappers();	  final    double[]    c    =    equations.getSecondaryMappers();    	non-compiled	[CE]  while  expected	28	None	replace
21	[BUG]  [BUGGY]  final  double[]  c  =  equations.getSegments();  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getSegments();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getSegments();	  final    double[]    c    =    equations.getSegment();    	non-compiled	[CE]  while  expected	7	None	replace
22	[BUG]  [BUGGY]  final  double[]  c  =(y0  ==  null)?  t.clone()  :  y0.clone();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y0  ==  null)?  t.clone()  :  y0.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y0  ==  null)?  t.clone()  :  y0.clone();	  final    double[]    c    =(t    ==    null)?    y0    :    y0.clone();    	non-compiled	[CE]  while  expected	17	None	replace
23	[BUG]  [BUGGY]  final  double[]  c  =(y0  ==  null)?  y0  :  y0.clone();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y0  ==  null)?  y0  :  y0.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y0  ==  null)?  y0  :  y0.clone();	  final    double[]    c    =(t    ==    null)?    y0    :    y0.clone();    	non-compiled	[CE]  while  expected	17	None	replace
24	[BUG]  [BUGGY]  final  double[]  c  =(x0  ==  null)?  x0  :  y0.clone();  [CE]  while  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(x0  ==  null)?  x0  :  y0.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(x0  ==  null)?  x0  :  y0.clone();	  final    double[]    c    =(x0    ==    null)?    x0    :    x0.clone();    	non-compiled	[CE]  while  expected	41	None	replace
25	[BUG]  [BUGGY]  final  double[]  c  =(x0!=  null)?  x0  :  x0.clone();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(x0!=  null)?  x0  :  x0.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(x0!=  null)?  x0  :  x0.clone();	  final    double[]    c    =(x0    ==    null)?    x0    :    x0.clone();    	non-compiled	[CE]  while  expected	41	None	replace
26	[BUG]  [BUGGY]  final  double[]  c  =(x0  ==  null)?  x0  :  x1.clone();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(x0  ==  null)?  x0  :  x1.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(x0  ==  null)?  x0  :  x1.clone();	  final    double[]    c    =(x0    ==    null)?    x0    :    x0.clone();    	non-compiled	[CE]  while  expected	41	None	replace
27	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCount();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCount();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCount();	  final    double[]    c    =    equations.getRangeState();    	non-compiled	[CE]  while  expected	12	None	replace
28	[BUG]  [BUGGY]  final  double[]  c  =  equations.getSecondState();  [CE]  while  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getSecondState();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getSecondState();	  final    double[]    c    =    equations.getCurrentState();    	non-compiled	[CE]  while  expected	11	None	replace
29	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCommonState();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCommonState();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCommonState();	  final    double[]    c    =    equations.getEmptyState();    	non-compiled	[CE]  while  expected	49	None	replace
30	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getPrimaryMapper();  setEquations(b);  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  b  =  equations.getPrimaryMapper();  setEquations(b);  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  b  =  equations.getPrimaryMapper();  setEquations(b);	  final    double[][]    b    =    equations.getSecondaryMapper();    setEquations(b);    	non-compiled	[CE]  while  expected	23	None	replace
31	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCurrentSecondMapper();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCurrentSecondMapper();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCurrentSecondMapper();	  final    double[]    c    =    equations.getCurrentMapper();    	non-compiled	[CE]  while  expected	30	None	replace
32	[BUG]  [BUGGY]  final  double[]  c  =  equations.getNext();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getNext();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getNext();	  final    double[]    c    =    equations.getNextSegment();    	non-compiled	[CE]  while  expected	6	None	replace
33	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])equations.getSecondaryMappers();  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =(double[][])equations.getSecondaryMappers();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =(double[][])equations.getSecondaryMappers();	  final    double[][]    c    =(double[][])equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	39	None	replace
34	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])y0.getSecondaryMapper();  [CE]  while  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =(double[][])y0.getSecondaryMapper();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =(double[][])y0.getSecondaryMapper();	  final    double[][]    c    =(double[][])equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	39	None	replace
35	[BUG]  [BUGGY]  final  double[]  c  =(t!=  null)?  t  :  b.clone();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(t!=  null)?  t  :  b.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(t!=  null)?  t  :  b.clone();	  final    double[]    c    =(t!=    null)?    t    :    t.clone();    	non-compiled	[CE]  while  expected	44	None	replace
36	[BUG]  [BUGGY]  final  double[]  c  =  equations.getRangeSegment();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getRangeSegment();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getRangeSegment();	  final    double[]    c    =    equations.getCompleteSegment();    	non-compiled	[CE]  while  expected	5	None	replace
37	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getSecondaryMappers();  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  b  =  equations.getSecondaryMappers();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  b  =  equations.getSecondaryMappers();	  final    double[][]    b    =    equations.getPrimaryMapper();    	non-compiled	[CE]  while  expected	43	None	replace
38	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getCompleteState();  [CE]  while  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  b  =  equations.getCompleteState();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  b  =  equations.getCompleteState();	  final    double[][]    b    =    equations.getPrimaryMapper();    	non-compiled	[CE]  while  expected	43	None	replace
39	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getEquivalenceMapper();  [CE]  while  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  b  =  equations.getEquivalenceMapper();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  b  =  equations.getEquivalenceMapper();	  final    double[][]    b    =    equations.getPrimaryMapper();    	non-compiled	[CE]  while  expected	43	None	replace
40	[BUG]  [BUGGY]  final  double[]  c  =  equations.getLastSecondaryMapper();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getLastSecondaryMapper();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getLastSecondaryMapper();	  final    double[]    c    =    equations.getFirstSecondaryMapper();    	non-compiled	[CE]  while  expected	29	None	replace
41	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCurrentSecondaryMapper();  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCurrentSecondaryMapper();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCurrentSecondaryMapper();	  final    double[]    c    =    equations.getFirstSecondaryMapper();    	non-compiled	[CE]  while  expected	29	None	replace
42	[BUG]  [BUGGY]  final  double[]  y0  =  a.clone();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  y0  =  a.clone();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  y0  =  a.clone();	  final    double[]    y0    =    b.clone();    	non-compiled	[CE]  while  expected	3	None	replace
43	[BUG]  [BUGGY]  final  double[]  c  =(y0!=  null)?  t  :  y1.clone();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y0!=  null)?  t  :  y1.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y0!=  null)?  t  :  y1.clone();	  final    double[]    c    =(y1!=    null)?    t    :    y0.clone();    	non-compiled	[CE]  while  expected	31	None	replace
44	[BUG]  [BUGGY]  final  double[]  c  =(y0  ==  null)?  t  :  y1.clone();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y0  ==  null)?  t  :  y1.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y0  ==  null)?  t  :  y1.clone();	  final    double[]    c    =(y1!=    null)?    t    :    y0.clone();    	non-compiled	[CE]  while  expected	31	None	replace
45	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getFirstSecondaryMapper();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  b  =  equations.getFirstSecondaryMapper();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  b  =  equations.getFirstSecondaryMapper();	  final    double[][]    b    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	22	None	replace
46	[BUG]  [BUGGY]  setEquations(equations.getSecondaryMappers());  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(equations.getSecondaryMappers());  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(equations.getSecondaryMappers());	  setEquations(equations.getPrimaryMapper());    	non-compiled	[CE]  while  expected	18	None	replace
47	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCurrentSegment()  +  2;  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCurrentSegment()  +  2;  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCurrentSegment()  +  2;	  final    double[]    c    =    equations.getCurrentSegment()    +    1;    	non-compiled	[CE]  while  expected	40	None	replace
48	[BUG]  [BUGGY]  final  double[]  y  =  y0.length;  [CE]  while  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  y  =  y0.length;  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  y  =  y0.length;	  final    double[]    y    =    c.length;    	non-compiled	[CE]  while  expected	47	None	replace
49	[BUG]  [BUGGY]  final  double[]  y  =  c.length  +  1;  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  y  =  c.length  +  1;  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  y  =  c.length  +  1;	  final    double[]    y    =    c.length;    	non-compiled	[CE]  while  expected	47	None	replace
50	[BUG]  [BUGGY]  final  double[]  y  =  b.length;  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  y  =  b.length;  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  y  =  b.length;	  final    double[]    y    =    c.length;    	non-compiled	[CE]  while  expected	47	None	replace
51	[BUG]  [BUGGY]  final  double[]  y  =  a.length;  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  y  =  a.length;  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  y  =  a.length;	  final    double[]    y    =    c.length;    	non-compiled	[CE]  while  expected	47	None	replace
52	[BUG]  [BUGGY]  setEquations(equations.getCurrentState());  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(equations.getCurrentState());  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(equations.getCurrentState());	  final    double[]    c    =    equations.getCurrentState();    setEquations(c);    	non-compiled	[CE]  while  expected	34	None	replace
53	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCompleteStatement();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getCompleteStatement();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getCompleteStatement();	  final    double[][]    c    =    equations.getEmptyStatement();    	non-compiled	[CE]  while  expected	45	None	replace
54	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentStatement();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getCurrentStatement();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getCurrentStatement();	  final    double[][]    c    =    equations.getEmptyStatement();    	non-compiled	[CE]  while  expected	45	None	replace
55	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getExprStatement();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getExprStatement();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getExprStatement();	  final    double[][]    c    =    equations.getEmptyStatement();    	non-compiled	[CE]  while  expected	45	None	replace
56	[BUG]  [BUGGY]  final  double[]  b  =  b.clone();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  b  =  b.clone();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  b  =  b.clone();	  final    double[]    y0    =    b.clone();    	non-compiled	[CE]  while  expected	3	None	replace
57	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCurrentState()  +  1;  [CE]  while  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCurrentState()  +  1;  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCurrentState()  +  1;	  final    double[]    c    =    equations.getCurrentState();    	non-compiled	[CE]  while  expected	11	None	replace
58	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])equations.getFirstSecondaryMapper();  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =(double[][])equations.getFirstSecondaryMapper();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =(double[][])equations.getFirstSecondaryMapper();	  final    double[][]    c    =(double[][])equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	39	None	replace
59	[BUG]  [BUGGY]  final  double[]  c  =  equations.getSegment()  +  1;  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getSegment()  +  1;  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getSegment()  +  1;	  final    double[]    c    =    equations.getSegment();    	non-compiled	[CE]  while  expected	7	None	replace
60	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCurrentSegment()  +  3;  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCurrentSegment()  +  3;  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCurrentSegment()  +  3;	  final    double[]    c    =    equations.getCurrentSegment()    +    1;    	non-compiled	[CE]  while  expected	40	None	replace
61	[BUG]  [BUGGY]  final  double[]  c  =  equations.getSecondaryMapper()  +  2;  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getSecondaryMapper()  +  2;  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getSecondaryMapper()  +  2;	  final    double[]    c    =    equations.getSecondaryMapper()    +    1;    	non-compiled	[CE]  while  expected	35	None	replace
62	[BUG]  [BUGGY]  final  double[]  c  =  equations.getSecondSegment();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getSecondSegment();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getSecondSegment();	  final    double[]    c    =    equations.getNextSegment();    	non-compiled	[CE]  while  expected	6	None	replace
63	[BUG]  [BUGGY]  sanityChecks(y0,  t);  [CE]  while  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  sanityChecks(y0,  t);  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	sanityChecks(y0,  t);	  setEquations(equations);    	non-compiled	[CE]  while  expected	20	None	replace
64	[BUG]  [BUGGY]  final  double[]  c  =  equations.getSecondaryMappers()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getSecondaryMappers()  +  1;  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getSecondaryMappers()  +  1;	  final    double[]    c    =    equations.getSecondaryMappers();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
65	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentRangeState();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getCurrentRangeState();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getCurrentRangeState();	  final    double[][]    c    =    equations.getRangeState();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
66	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])equations.getEmptyState();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =(double[][])equations.getEmptyState();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =(double[][])equations.getEmptyState();	  final    double[][]    c    =(double[][])equations.getCompleteState();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
67	[BUG]  [BUGGY]  final  double[]  c  =(y1  ==  null)?  t  :  y0.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y1  ==  null)?  t  :  y0.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y1  ==  null)?  t  :  y0.clone();	  final    double[]    c    =(y1!=    null)?    t    :    y0.clone();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
68	[BUG]  [BUGGY]  final  double[]  c  =(t!=  null)?  t0  :  t.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(t!=  null)?  t0  :  t.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(t!=  null)?  t0  :  t.clone();	  final    double[]    c    =(t!=    null)?    t    :    t.clone();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
69	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getEndMapper();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  b  =  equations.getEndMapper();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  b  =  equations.getEndMapper();	  final    double[][]    b    =    equations.getPrimaryMapper();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
70	[BUG]  [BUGGY]  final  double[]  y0  =  y2.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  y0  =  y2.clone();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  y0  =  y2.clone();	  final    double[]    y0    =    y1.clone();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
71	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentState()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getCurrentState()  +  1;  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getCurrentState()  +  1;	  final    double[][]    c    =    equations.getCurrentState();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
72	[BUG]  [BUGGY]  final  double[]  c  =  equations.getFirstSecondaryMapper();  setEquations(c);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getFirstSecondaryMapper();  setEquations(c);  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getFirstSecondaryMapper();  setEquations(c);	  final    double[]    c    =    equations.getSecondaryMapper();    setEquations(c);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
73	[BUG]  [BUGGY]  final  double[]  c  =(y0  ==  null)?  x0  :  y0.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y0  ==  null)?  x0  :  y0.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y0  ==  null)?  x0  :  y0.clone();	  final    double[]    c    =(t    ==    null)?    y0    :    y0.clone();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
74	[BUG]  [BUGGY]  final  double[]  c  =(y0  ==  null)?  y0  :  y.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y0  ==  null)?  y0  :  y.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y0  ==  null)?  y0  :  y.clone();	  final    double[]    c    =(t    ==    null)?    y0    :    y0.clone();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
75	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getSecondaryMapper(t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  b  =  equations.getSecondaryMapper(t);  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  b  =  equations.getSecondaryMapper(t);	  final    double[][]    b    =    equations.getSecondaryMapper();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
76	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getFirstSecondaryMapper();  setEquations(b);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  b  =  equations.getFirstSecondaryMapper();  setEquations(b);  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  b  =  equations.getFirstSecondaryMapper();  setEquations(b);	  final    double[][]    b    =    equations.getSecondaryMapper();    setEquations(b);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
77	[BUG]  [BUGGY]  final  double[]  c  =  c.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  c.clone();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  c.clone();	  final    double[]    y0    =    c.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
78	[BUG]  [BUGGY]  final  double[]  c  =(t  ==  null)?  t0  :  t.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(t  ==  null)?  t0  :  t.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(t  ==  null)?  t0  :  t.clone();	  final    double[]    c    =(t    ==    null)?    t    :    t.clone();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
79	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCurrentMapper()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCurrentMapper()  +  1;  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCurrentMapper()  +  1;	  final    double[]    c    =    equations.getCurrentMapper();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
80	[BUG]  [BUGGY]  final  double[]  c  =  equations.getSecondMapper();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getSecondMapper();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getSecondMapper();	  final    double[]    c    =    equations.getCurrentMapper();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
81	[BUG]  [BUGGY]  setEquations(y0.clone());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(y0.clone());  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(y0.clone());	  setEquations(equations.getPrimaryMapper());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
82	[BUG]  [BUGGY]  setEquations(equations.getTime());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(equations.getTime());  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(equations.getTime());	  setEquations(equations.getCompleteState());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
83	[BUG]  [BUGGY]  setEquations(equations.getState());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(equations.getState());  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(equations.getState());	  setEquations(equations.getCompleteState());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
84	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getSecondaryStatement();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getSecondaryStatement();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getSecondaryStatement();	  final    double[][]    c    =    equations.getEmptyStatement();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
85	[BUG]  [BUGGY]  setEquations(equations.getComplete());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(equations.getComplete());  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(equations.getComplete());	  setEquations(equations.getCompleteState());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
86	[BUG]  [BUGGY]  setEquations(equations.getStandardState());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setEquations(equations.getStandardState());  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setEquations(equations.getStandardState());	  setEquations(equations.getCompleteState());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
87	[BUG]  [BUGGY]  final  double[]  y  =  t.length;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  y  =  t.length;  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  y  =  t.length;	  final    double[]    y    =    c.length;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
88	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCurrentMappers();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCurrentMappers();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCurrentMappers();	  final    double[]    c    =    equations.getSecondaryMappers();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
89	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getRangeState(t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =  equations.getRangeState(t);  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =  equations.getRangeState(t);	  final    double[][]    c    =    equations.getRangeState();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
90	[BUG]  [BUGGY]  final  double[]  c  =(y0  ==  null)?  error  :  y0.clone();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(y0  ==  null)?  error  :  y0.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(y0  ==  null)?  error  :  y0.clone();	  final    double[]    c    =(t    ==    null)?    y0    :    y0.clone();    	non-compiled	[CE]  while  expected	17	None	replace
91	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getBooleanValues();  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  b  =  equations.getBooleanValues();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  b  =  equations.getBooleanValues();	  final    double[][]    b    =    equations.getPrimaryMapper();    	non-compiled	[CE]  while  expected	43	None	replace
92	[BUG]  [BUGGY]  setStandardEquals(y0);  [CE]  while  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  setStandardEquals(y0);  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	setStandardEquals(y0);	  setEquations(equations);    	non-compiled	[CE]  while  expected	20	None	replace
93	[BUG]  [BUGGY]  final  double[]  c  =  equations.getColumnState();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getColumnState();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getColumnState();	  final    double[]    c    =    equations.getRangeState();    	non-compiled	[CE]  while  expected	12	None	replace
94	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCurrentSegment()  +  t;  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getCurrentSegment()  +  t;  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getCurrentSegment()  +  t;	  final    double[]    c    =    equations.getCurrentSegment()    +    1;    	non-compiled	[CE]  while  expected	40	None	replace
95	[BUG]  [BUGGY]  final  double[]  c  =  equations.getSecondaryState();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getSecondaryState();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getSecondaryState();	  final    double[]    c    =    equations.getEmptyState();    	non-compiled	[CE]  while  expected	49	None	replace
96	[BUG]  [BUGGY]  final  double[]  c  =(t!=  null)?  t.clone()  :  t.clone();  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(t!=  null)?  t.clone()  :  t.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(t!=  null)?  t.clone()  :  t.clone();	  final    double[]    c    =(t!=    null)?    t    :    t.clone();    	non-compiled	[CE]  while  expected	44	None	replace
97	[BUG]  [BUGGY]  final  double[]  c  =(t  ==  null)?  t.clone()  :  t.clone();  [CE]  while  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =(t  ==  null)?  t.clone()  :  t.clone();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =(t  ==  null)?  t.clone()  :  t.clone();	  final    double[]    c    =(t!=    null)?    t    :    t.clone();    	non-compiled	[CE]  while  expected	44	None	replace
98	[BUG]  [BUGGY]  final  double[]  y1  =  c.length;  [CE]  while  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  y1  =  c.length;  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  y1  =  c.length;	  final    double[]    y1    =    c.clone();    	non-compiled	[CE]  while  expected	13	None	replace
99	[BUG]  [BUGGY]  Set  <  E>  c  =  equations.getCurrentState();  setEquations(c);  [CE]  while  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  Set  <  E>  c  =  equations.getCurrentState();  setEquations(c);  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	Set  <  E>  c  =  equations.getCurrentState();  setEquations(c);	  final    double[]    c    =    equations.getCurrentState();    setEquations(c);    	non-compiled	[CE]  while  expected	34	None	replace
100	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])equations.clone();  [CE]  while  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[][]  c  =(double[][])equations.clone();  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[][]  c  =(double[][])equations.clone();	  final    double[][]    c    =(double[][])equations.getCompleteState();    	non-compiled	[CE]  while  expected	38	None	replace
101	[BUG]  [BUGGY]  Set  <  E>  b  =  equations.getSecondaryMapper();  setEquations(b);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  Set  <  E>  b  =  equations.getSecondaryMapper();  setEquations(b);  [BUGGY]      final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	Set  <  E>  b  =  equations.getSecondaryMapper();  setEquations(b);	  final    double[][]    b    =    equations.getSecondaryMapper();    setEquations(b);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
102	[BUG]  [BUGGY]  final  double[]  c  =  equations.getEmptySegment();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();      [BUGGY]  final  double[]  c  =  equations.getEmptySegment();  [BUGGY]      final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	200	200	1	replace	final  double[]  c  =  equations.getEmptySegment();	  final    double[]    c    =    equations.getCompleteSegment();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
