projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecAbsoluteTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,firstTime,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||vecRelativeTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,x,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length==1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length==2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(hNew,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,filteredNextIsLast,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(hNew,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(firstTime,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[outputSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[double[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[stepStart];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||vecRelativeTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||vecRelativeTolerance!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||scale.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scale.length<2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length<2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[scala.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[scaleAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||!filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,nextT);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,factor);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yTmp[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance!=null||vecRelativeTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||!filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalRelativeTolerance!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[stepSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,stepStart,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null&&scale.length>0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||!fsal){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecRelativeTolerance==null||scale.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||!fsal){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[1],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scale.length<1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scale.length<1||scale.length<2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,factor,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(forward,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,factor,yNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235int[][]scale=newint[length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(firstTime,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(secondTime,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(firstTime,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(firstTime,getOrder(),scale,stepStart,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance,factor);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||vecRelativeTolerance!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||scale.length!=0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,hNew,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,hNew,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(hNew,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,hNew,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,errors,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(hNew,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(nextIsLast,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length>0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scale.length>0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null&&scale.length>1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,hNew,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,hNew,scale[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,errors,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,b,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,error,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,hNew,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(lastTime,getOrder(),scale,error,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast!=null||scale.length>0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast==null||scale.length>0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,factor,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,factor,yNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,max,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,hNew,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew,y,yTmp[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew,y,yDotK[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew,yTmp[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,stepStart,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,y,stepStart,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,hNew,y,stepStart,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,hNew,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[runSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[outputSetDimension-1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||!filteredNextT){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[scaleAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235int[][]scale=newint[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(hNew,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(forward,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(x,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,hNew,yDotK[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vNew,scale[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast||scale==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||filteredNextIsLast||scale.length<2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scale.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||scale.length==1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,factor);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,hNew,x,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,x,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,hNew,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scale.length==2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[stepStart];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(lastTime,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,errors,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew,vecAbsoluteTolerance,nextT);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew,scale[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,b,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[1],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[double[2];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[double[1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[double[0];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[double[length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,errors,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,vecAbsoluteTolerance,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,vNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[scala.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(forward,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(nextIsLast,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,hNew,scale[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,t,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,vNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,y,yDotK[1],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast||scale.length==1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length<1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length<1||scale.length<2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,error,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,error,y,vecAbsoluteTolerance,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,factor,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,factor,yNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,maxGrow,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,hNew,scale[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,bNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,hNew,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[stepSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,error,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,hNew,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scale.length==1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scalAbsoluteTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(forward,getOrder(),scale,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast||scale!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[1],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,yDotK[1],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew,yDotK[1],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[size];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,yDotK[0],hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||vecRelativeTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||!filteredNextT){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew,vecAbsoluteTolerance,factor);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(forward,getOrder(),scale,stepStart,y,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(forward,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,hNew,scale[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,out,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,hNew[0],yDotTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,factor,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,factor,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(hNew,getOrder(),scale,error,x,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,factor,yNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,error,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,y,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[double[3];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235long[][]scale=newlong[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecRelativeTolerance==null||scale.length==1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecRelativeTolerance==null||scale.length==2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(lastTime,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null&&filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||!firstTime){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,errors,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235Double[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,errors,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,errors,y,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[outputSetDimension+1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y0,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,minGrowth);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,maxGrowth,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,hNew,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,vNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,y,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[outputSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null&&scale.length>0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(x,getOrder(),scale,stepStart,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null&&!filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,y,vecAbsoluteTolerance[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vNew,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew,vecAbsoluteTolerance,next);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(x,getOrder(),scale,stepStart,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,y,yDotK[1],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotTmp[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,errors,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,errors,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,yDotK[0],hNew,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||vecAbsoluteTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||vecAbsoluteTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,b,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,b,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[dimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,yDotK[1],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,x,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null&&scale.length<2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scale.length!=2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,error,y,yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,y,hNew,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,hNew,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,hNew,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,x,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,hNew,vNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(x,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vecAbsoluteTolerance[0],yPosition,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,factor);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(x,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,factor);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,hNew,scale[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(lastTime,getOrder(),scale,error,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,errors,y,hNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,stepStart,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance!=null&&vecRelativeTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecRelativeTolerance==null||scale!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(secondTime,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance!=null||vecRelativeTolerance!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||vecRelativeTolerance.length!=2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,hNew,stepStart,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||!filteredNextIsLast&&scale.length>0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[scale.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||!error){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235Double[][]scale=newDouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,yDotK[0],yTmp,hNew[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,t,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,y,yDotK[0],yTmp,hNew[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,hNew,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yDotTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,y,vecAbsoluteTolerance[1],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,yTmp,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,nextIsLast);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,error,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(firstTime,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,yDotK[0],yTmp,stepStart,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,hNew,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotTmp[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,break,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,yDotTmp,vecAbsoluteTolerance,factor);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,yDotK[0],yTmp,hNew[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast!=scale.length){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,hNew[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,y,vecAbsoluteTolerance,factor);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,hNew[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,stepStart,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,yDotTmp,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||scalRelativeTolerance.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||vecRelativeTolerance.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||vecAbsoluteTolerance.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,y,vecAbsoluteTolerance,nextIsLast);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,vNew[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,nextT,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast==scale.length||filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,nextIsLast,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,y,vecAbsoluteTolerance[0],yDotK[1],hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecRelativeTolerance==null||vecAbsoluteTolerance.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecRelativeTolerance==null||vecRelativeTolerance.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,y,yDotK[0],yTmp,yNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,hNew,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,hNew,stepStart);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,yTmp,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,stepStart,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null&&!fsal){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||!error){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null&&scale.length==1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,hNew,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,hNew,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,vecAbsoluteTolerance,y,vecTmp,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,hNew,stepStart);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,hNew,scale,stepStart);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,hNew,scale,nextIsLast);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(hNew,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(filteredNextIsLast||filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||!filteredNextIsLast&&scale.length>0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,t,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,hNew,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,yTmp,hNew,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null&&scale.length==2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,t,y,yDotK[0],yTmp,yDotK[1]);
