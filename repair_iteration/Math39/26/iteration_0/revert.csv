projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecAbsoluteTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,firstTime,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||vecRelativeTolerance==null){
