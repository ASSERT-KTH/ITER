projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecAbsoluteTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,firstTime,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,firstTime,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||vecRelativeTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,x,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length==1){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length==2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,minGrowth,y,yDotK[0],yTmp,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(hNew,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,filteredNextIsLast,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(hNew,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(x,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(firstTime,getOrder(),scale,stepStart,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[outputSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235finaldouble[][]scale=newdouble[double[mainSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[stepStart];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||vecRelativeTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||vecRelativeTolerance!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance==null||scale.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||scale.length<2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||scale.length<2){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(firstTime,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[scala.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[scaleAbsoluteTolerance];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||!filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,vecAbsoluteTolerance,nextT);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,factor);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,error,y,yTmp[0],yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,y,yDotK[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalAbsoluteTolerance!=null||vecRelativeTolerance==null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,error,y,vNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||!filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,error,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,errors,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scalRelativeTolerance!=null){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235double[][]scale=newdouble[stepSetDimension];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,y,vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance,hNew);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,vecAbsoluteTolerance,y,stepStart,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null&&scale.length>0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||!fsal){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale!=null||filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(vecRelativeTolerance==null||scale.length==0){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(t,getOrder(),scale,stepStart,y,hNew,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextT=initializeStep(out,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||!fsal){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235if(scale==null||filteredNextIsLast){
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,hNew,y,yDotK[0],yTmp,yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,vecAbsoluteTolerance[0],yTmp);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java235filteredNextIsLast=initializeStep(next,getOrder(),scale,stepStart,y,yDotK[1],yTmp);
