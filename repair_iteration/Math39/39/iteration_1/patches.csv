bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  ==  null)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(c!=    null)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
2	[BUG]  [BUGGY]  if(c  ==  null)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  setSafety(1.0);  }	      if(c!=    null)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
3	[BUG]  [BUGGY]  if(c!=  null)  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null)  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null)  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }	  if(c!=    null)    {    this.c    =    c;    }    else    {    System.arraycopy(c,    0,    this.c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  if(c  ==  null)  {  this.c  =  c;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  this.c  =  c;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  this.c  =  c;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }	  if(c!=    null)    {    this.c    =    c;    }    else    {    System.arraycopy(c,    0,    this.c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(c,  0,  this.c,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  System.arraycopy(c,  0,  this.c,  0,  c.length);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	System.arraycopy(c,  0,  this.c,  0,  c.length);	  if(c!=    null)    {    this.c    =    c;    }    else    {    System.arraycopy(c,    0,    this.c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  setMaxGrowth(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safely(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safely(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  setSafety(1.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  setSafety(1.0);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	setSafety(1.0);	      if(fsal)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1);  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safely(fsal)  {  setSafety(1);  }  else  {  setMaxGrowth(1);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safely(fsal)  {  setSafety(1);  }  else  {  setMaxGrowth(1);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0);  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safely(fsal)  {  setSafety(0);  }  else  {  setMaxGrowth(1);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safely(fsal)  {  setSafety(0);  }  else  {  setMaxGrowth(1);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  this.c  =  c[1];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  c[1];  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  c[1];	  this.c    =    c[0];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  if(c  ==  null)  {  this.c  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  this.c  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  this.c  =  c;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(c!=    null)    {    this.c    =    c;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  if(c!=  null)  {  this.c  =  c;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null)  {  this.c  =  c;  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null)  {  this.c  =  c;  }	  if(c!=    null)    {    this.c    =    c;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  if(c!=  null  ||  c.length  ==  0)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null  ||  c.length  ==  0)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null  ||  c.length  ==  0)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	      if(c!=    null)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  if(c!=  null)  {  setSafety(0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null)  {  setSafety(0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null)  {  setSafety(0);  }  else  {  setSafety(1.0);  }	      if(c!=    null)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
18	[BUG]  [BUGGY]  if(c  ==  null)  {  this.c  =  c;  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  this.c  =  c;  }  else  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  this.c  =  c;  }  else  {  setSafety(1.0);  }	  if(c!=    null)    {    this.c    =    c;    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(0);  }	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  While(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  While(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	While(fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safely())  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  safely(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safely(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safely(fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  nes.add(new  RungeKuttaIntegrator(name,  fsal));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  nes.add(new  RungeKuttaIntegrator(name,  fsal));  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	nes.add(new  RungeKuttaIntegrator(name,  fsal));	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  if(c  ==  null)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	      if(c!=    null)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  safety(fsal);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safety(fsal);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safety(fsal);	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  safely(fsal);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safely(fsal);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safely(fsal);	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  this.c  =  c  +  2;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  c  +  2;  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  c  +  2;	  this.c    =    c    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  this.c  =  c  *  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  c  *  1;  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  c  *  1;	  this.c    =    c    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  if(c  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    if(c    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  if(fsal)  {  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    if(c    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  if(fsal)  {  if(b  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  if(b  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  if(b  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    if(c    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  safely(fsal)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safely(fsal)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safely(fsal)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  safety(fsal)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safety(fsal)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safety(fsal)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  safety(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safety(fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safety(fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  this.c  =  name;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  name;  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  name;	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  this.c  =  c,  b);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  c,  b);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  c,  b);	  this.c    =    c,    a);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  this.c  =  c,  a,  b);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  c,  a,  b);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  c,  a,  b);	  this.c    =    c,    a);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  this.c  =  c,  a,  fsal);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  c,  a,  fsal);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  c,  a,  fsal);	  this.c    =    c,    a);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  'n'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  'n'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  'n'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  setSafety(1.0);  }	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  if(fsal)  {  if(a  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  if(a  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  if(a  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    if(c    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  luate(c,  a,  maxStep,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  luate(c,  a,  maxStep,  scalAbsoluteTolerance);  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	luate(c,  a,  maxStep,  scalAbsoluteTolerance);	      if(fsal)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(0.0);  }  else  {  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setMaxGrowth(1);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(0);  }  else  {  setMaxGrowth(1);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safely())  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  ((  a  ==  null)&&(b  ==  null))  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  ((  a  ==  null)&&(b  ==  null))  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	((  a  ==  null)&&(b  ==  null))  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(0.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(0.0);  }	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  safely()  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safely()  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safely()  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  safeThan  <  double>fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safeThan  <  double>fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safeThan  <  double>fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  safeThan  <  Double>fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  safeThan  <  Double>fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	safeThan  <  Double>fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(0);  }  else  {  setSafety(1);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1);  }  else  {  setSafety(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(1);  }  else  {  setSafety(1);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(1);  }  else  {  setSafety(1);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  if(c!=  null)  {  setSafety(0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null)  {  setSafety(0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null)  {  setSafety(0);  }	      if(c!=    null)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  if(c  ==  null)  {  setSafety(1);  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  setSafety(1);  }  else  {  setMaxGrowth(1);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  setSafety(1);  }  else  {  setMaxGrowth(1);  }	      if(c!=    null)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
57	[BUG]  [BUGGY]  if(c!=  null)  {  setSafety(0);  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null)  {  setSafety(0);  }  else  {  setMaxGrowth(1);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null)  {  setSafety(0);  }  else  {  setMaxGrowth(1);  }	      if(c!=    null)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
58	[BUG]  [BUGGY]  this.c  =  c,  a,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  c,  a,  scalAbsoluteTolerance);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  c,  a,  scalAbsoluteTolerance);	  this.c    =    c,    a);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
59	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
60	[BUG]  [BUGGY]  if(c  ==  null)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	      if(c!=    null)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  if(c  ==  null)  {  setSafety(0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null)  {  setSafety(0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null)  {  setSafety(0);  }  else  {  setSafety(1.0);  }	      if(c!=    null)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
62	[BUG]  [BUGGY]  if(a!=  null)  {  this.c  =  c;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(a!=  null)  {  this.c  =  c;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(a!=  null)  {  this.c  =  c;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }	  if(c!=    null)    {    this.c    =    c;    }    else    {    System.arraycopy(c,    0,    this.c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
63	[BUG]  [BUGGY]  if(fsal)  {  this.c  =  c;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  this.c  =  c;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  this.c  =  c;  }  else  {  System.arraycopy(c,  0,  this.c,  0,  c.length);  }	  if(c!=    null)    {    this.c    =    c;    }    else    {    System.arraycopy(c,    0,    this.c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
64	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null  &&  c.length  >  0)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	      if(c!=    null)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
66	[BUG]  [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null  &&  c.length  >  0)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }	      if(c!=    null)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
67	[BUG]  [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null  &&  c.length  >  0)  {  setSafety(1.0);  }	      if(c!=    null)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
68	[BUG]  [BUGGY]  this.c  =  c,  b,  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  c,  b,  scalAbsoluteTolerance);  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  c,  b,  scalAbsoluteTolerance);	  this.c    =    c,    a);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
69	[BUG]  [BUGGY]  this.c  =  c[0],  c[1];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  c[0],  c[1];  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  c[0],  c[1];	  this.c    =    c[0];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  if(fsal  ||  c  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal  ||  c  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal  ||  c  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  setSafety(1.0);  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  if(fsal  ||  c  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal  ||  c  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal  ||  c  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  setMaxGrowth(1.0d);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  setMaxGrowth(1.0d);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  setMaxGrowth(1.0d);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(1.0,  c);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
76	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	try  {  [Delete]  catch(IOException  ioe)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(1.0d);  }	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  this.c  =  fsal;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  this.c  =  fsal;  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	this.c  =  fsal;	      if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
79	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setMaxGrowth(1.0d);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(fsal)  {  setSafety(1.0d);  }  else  {  setMaxGrowth(1.0d);  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(fsal)  {  setSafety(1.0d);  }  else  {  setMaxGrowth(1.0d);  }	      if(fsal)    {    setSafety(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
80	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  this.c  =  a;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  this.c  =  a;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  this.c  =  a;  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  this.c  =  a;  }	  this.c    =    a;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  this.c  =  c;  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null  &&  c.length  >  0)  {  this.c  =  c;  }  else  {  setSafety(1.0);  }  [BUGGY]    this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null  &&  c.length  >  0)  {  this.c  =  c;  }  else  {  setSafety(1.0);  }	  if(c!=    null)    {    this.c    =    c;    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  if(c  ==  null  ||  fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null  ||  fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null  ||  fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    if(c    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
84	[BUG]  [BUGGY]  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    if(c    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  if(c  ==  null  ||!fsal)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  EmbeddedRungeKuttaIntegrator(final  String  name,  final  boolean  fsal,  final  double[]  c,  final  double[][]  a,  final  double[]  b,  final  RungeKuttaStepInterpolator  prototype,  final  double  minStep,  final  double  maxStep,  final  double  scalAbsoluteTolerance,  final  double  scalRelativeTolerance)  {  super(name,  minStep,  maxStep,  scalAbsoluteTolerance,  scalRelativeTolerance);  this.fsal=  fsal;    [BUGGY]  if(c  ==  null  ||!fsal)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();  setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	118	118	1	replace	if(c  ==  null  ||!fsal)  {  throw  new  IllegalArgumentException( " ");  }	      if(fsal)    {    if(c    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
