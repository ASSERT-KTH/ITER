bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[][]  b  =(double[][])c.clone();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =(double[][])c.clone();  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =(double[][])c.clone();	      final    double[][]    b    =(double[][])equivalence.clone();    	non-compiled	[CE]  not  a  statement	2	None	replace
2	[BUG]  [BUGGY]  final  double[][]  b  =(double[][])a.clone();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =(double[][])a.clone();  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =(double[][])a.clone();	      final    double[][]    b    =(double[][])equivalence.clone();    	non-compiled	[CE]  not  a  statement	2	None	replace
3	[BUG]  [BUGGY]  final  double[][]  b  =(double[][])equals.clone();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =(double[][])equals.clone();  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =(double[][])equals.clone();	      final    double[][]    b    =(double[][])equations.clone();    	non-compiled	[CE]  not  a  statement	5	None	replace
4	[BUG]  [BUGGY]  final  double[][]  a  =  b.length;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  b.length;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  b.length;	      final    double[][]    a    =    c.length;    	non-compiled	[CE]  not  a  statement	16	None	replace
5	[BUG]  [BUGGY]  final  double[][]  a  =  t;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  t;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  t;	      final    double[][]    a    =    c.length;    	non-compiled	[CE]  not  a  statement	16	None	replace
6	[BUG]  [BUGGY]  final  double[]  yTmp=  c.length  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[]  yTmp=  c.length  +  1;  [BUGGY]    final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[]  yTmp=  c.length  +  1;	  final    double[]    yTmp=    c.length.clone();    	non-compiled	[CE]  not  a  statement	18	None	replace
7	[BUG]  [BUGGY]  final  double[]  yTmp=  c.length;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[]  yTmp=  c.length;  [BUGGY]    final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[]  yTmp=  c.length;	  final    double[]    yTmp=    c.length.clone();    	non-compiled	[CE]  not  a  statement	18	None	replace
8	[BUG]  [BUGGY]  final  double[]  yTmp  =  a.clone();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[]  yTmp  =  a.clone();  [BUGGY]    final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[]  yTmp  =  a.clone();	  final    double[]    yTmp    =    c.clone();    	non-compiled	[CE]  not  a  statement	6	None	replace
9	[BUG]  [BUGGY]  final  double[][]  a  =  c.clone();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  c.clone();  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  c.clone();	      final    double[][]    a    =    b.clone();    	non-compiled	[CE]  not  a  statement	3	None	replace
10	[BUG]  [BUGGY]  final  double[][]  a  =  t.clone();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  t.clone();  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  t.clone();	      final    double[][]    a    =    b.clone();    	non-compiled	[CE]  not  a  statement	3	None	replace
11	[BUG]  [BUGGY]  final  double[][]  a  =  y.clone();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  y.clone();  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  y.clone();	      final    double[][]    a    =    b.clone();    	non-compiled	[CE]  not  a  statement	3	None	replace
12	[BUG]  [BUGGY]  final  double[][]  b  =  c.length  +  2;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  c.length  +  2;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  c.length  +  2;	      final    double[][]    b    =    c.length    +    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
13	[BUG]  [BUGGY]  final  double[][]  b  =  y.length  +  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  y.length  +  1;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  y.length  +  1;	      final    double[][]    b    =    c.length    +    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
14	[BUG]  [BUGGY]  final  double[][]  b  =  c.length  +  3;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  c.length  +  3;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  c.length  +  3;	      final    double[][]    b    =    c.length    +    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
15	[BUG]  [BUGGY]  final  double[]  yTmp  =  v.clone();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[]  yTmp  =  v.clone();  [BUGGY]    final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[]  yTmp  =  v.clone();	  final    double[]    yTmp    =    y.clone();    	non-compiled	[CE]  not  a  statement	9	None	replace
16	[BUG]  [BUGGY]  final  double[]  yTmp  =  equations.clone();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[]  yTmp  =  equations.clone();  [BUGGY]    final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[]  yTmp  =  equations.clone();	  final    double[]    yTmp    =    t.clone();    	non-compiled	[CE]  not  a  statement	7	None	replace
17	[BUG]  [BUGGY]  final  double[][]  b  =  a.length;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  a.length;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  a.length;	      final    double[][]    b    =    c.length;    	non-compiled	[CE]  not  a  statement	17	None	replace
18	[BUG]  [BUGGY]  final  double[][]  b  =(double[][])scales.clone();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =(double[][])scales.clone();  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =(double[][])scales.clone();	      final    double[][]    b    =(double[][])stages.clone();    	non-compiled	[CE]  not  a  statement	11	None	replace
19	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[stages][y.length  +  2];  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[stages][y.length  +  2];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[stages][y.length  +  2];	      final    double[][]    b    =    new    double[stages][y.length    +    1];    	non-compiled	[CE]  not  a  statement	12	None	replace
20	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[c.length  +  1];  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[c.length  +  1];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[c.length  +  1];	      final    double[][]    b    =    new    double[stages][y.length    +    1];    	non-compiled	[CE]  not  a  statement	12	None	replace
21	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[c.length][y.length];  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[c.length][y.length];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[c.length][y.length];	      final    double[][]    b    =    new    double[stages][y.length];    	non-compiled	[CE]  not  a  statement	10	None	replace
22	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[stages][c.length];  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[stages][c.length];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[stages][c.length];	      final    double[][]    b    =    new    double[stages][y.length];    	non-compiled	[CE]  not  a  statement	10	None	replace
23	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[y0][stages.length];  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[y0][stages.length];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[y0][stages.length];	      final    double[][]    b    =    new    double[stages][y.length];    	non-compiled	[CE]  not  a  statement	10	None	replace
24	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[stages][c.length  +  2];  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[stages][c.length  +  2];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[stages][c.length  +  2];	      final    double[][]    b    =    new    double[stages][c.length    +    1];    	non-compiled	[CE]  not  a  statement	13	None	replace
25	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[stages][c.length  +  3];  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[stages][c.length  +  3];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[stages][c.length  +  3];	      final    double[][]    b    =    new    double[stages][c.length    +    1];    	non-compiled	[CE]  not  a  statement	13	None	replace
26	[BUG]  [BUGGY]  final  double[][]  a  =  c.length  +  2;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  c.length  +  2;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  c.length  +  2;	      final    double[][]    a    =    c.length    +    1;    	non-compiled	[CE]  not  a  statement	14	None	replace
27	[BUG]  [BUGGY]  final  double[][]  a  =  b.length  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  b.length  +  1;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  b.length  +  1;	      final    double[][]    a    =    c.length    +    1;    	non-compiled	[CE]  not  a  statement	14	None	replace
28	[BUG]  [BUGGY]  final  double[][]  a  =  y.length  +  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  y.length  +  1;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  y.length  +  1;	      final    double[][]    a    =    c.length    +    1;    	non-compiled	[CE]  not  a  statement	14	None	replace
29	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[c.length  +  2][y.length];  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[c.length  +  2][y.length];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[c.length  +  2][y.length];	      final    double[][]    b    =    new    double[c.length    +    1][y.length];    	non-compiled	[CE]  not  a  statement	1	None	replace
30	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[c.length  +  3][y.length];  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[c.length  +  3][y.length];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[c.length  +  3][y.length];	      final    double[][]    b    =    new    double[c.length    +    1][y.length];    	non-compiled	[CE]  not  a  statement	1	None	replace
31	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[y.length  +  1][c.length];  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[y.length  +  1][c.length];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[y.length  +  1][c.length];	      final    double[][]    b    =    new    double[c.length    +    1][y.length];    	non-compiled	[CE]  not  a  statement	1	None	replace
32	[BUG]  [BUGGY]  final  double[][]  b  =(double[][])c.length  +  1;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =(double[][])c.length  +  1;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =(double[][])c.length  +  1;	      final    double[][]    b    =(double[][])c.length;    	non-compiled	[CE]  not  a  statement	4	None	replace
33	[BUG]  [BUGGY]  final  double[][]  b  =(double[][])c.length  +  2;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =(double[][])c.length  +  2;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =(double[][])c.length  +  2;	      final    double[][]    b    =(double[][])c.length;    	non-compiled	[CE]  not  a  statement	4	None	replace
34	[BUG]  [BUGGY]  final  double[][]  b  =(double[][])equations.length;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =(double[][])equations.length;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =(double[][])equations.length;	      final    double[][]    b    =(double[][])c.length;    	non-compiled	[CE]  not  a  statement	4	None	replace
35	[BUG]  [BUGGY]  final  double[][]  a  =  c.length  +  3;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  c.length  +  3;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  c.length  +  3;	      final    double[][]    a    =    c.length    +    1;    	non-compiled	[CE]  not  a  statement	14	None	replace
36	[BUG]  [BUGGY]  final  double[][]  a  =  y.length;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  y.length;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  y.length;	      final    double[][]    a    =    c.length;    	non-compiled	[CE]  not  a  statement	16	None	replace
37	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[stages  +  1][y.length];  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[stages  +  1][y.length];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[stages  +  1][y.length];	      final    double[][]    b    =    new    double[c.length    +    1][y.length];    	non-compiled	[CE]  not  a  statement	1	None	replace
38	[BUG]  [BUGGY]  final  double[][]  b  =(double[][])scale.clone();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =(double[][])scale.clone();  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =(double[][])scale.clone();	      final    double[][]    b    =(double[][])equations.clone();    	non-compiled	[CE]  not  a  statement	5	None	replace
39	[BUG]  [BUGGY]  final  double[][]  b  =  y0.length;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  y0.length;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  y0.length;	      final    double[][]    b    =    c.length;    	non-compiled	[CE]  not  a  statement	17	None	replace
40	[BUG]  [BUGGY]  final  double[][]  b  =  a.length  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  a.length  +  1;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  a.length  +  1;	      final    double[][]    b    =    c.length    +    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
41	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[stages][y.length  +  3];  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[stages][y.length  +  3];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[stages][y.length  +  3];	      final    double[][]    b    =    new    double[stages][y.length    +    1];    	non-compiled	[CE]  not  a  statement	12	None	replace
42	[BUG]  [BUGGY]  final  double[]  yTmp=  c.length  +  2;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[]  yTmp=  c.length  +  2;  [BUGGY]    final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[]  yTmp=  c.length  +  2;	  final    double[]    yTmp=    c.length.clone();    	non-compiled	[CE]  not  a  statement	18	None	replace
43	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[stages][y0.length];  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[stages][y0.length];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[stages][y0.length];	      final    double[][]    b    =    new    double[stages][y.length];    	non-compiled	[CE]  not  a  statement	10	None	replace
44	[BUG]  [BUGGY]  final  double[][]  b  =  b.clone();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  b.clone();  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  b.clone();	      final    double[][]    a    =    b.clone();    	non-compiled	[CE]  not  a  statement	3	None	replace
45	[BUG]  [BUGGY]  final  double[][]  b  =(double[][])a.length;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =(double[][])a.length;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =(double[][])a.length;	      final    double[][]    b    =(double[][])c.length;    	non-compiled	[CE]  not  a  statement	4	None	replace
46	[BUG]  [BUGGY]  final  double[][]  b  =  t.length;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  t.length;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  t.length;	      final    double[][]    b    =    c.length;    	non-compiled	[CE]  not  a  statement	17	None	replace
47	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[stages][t.length  +  1];  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[stages][t.length  +  1];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[stages][t.length  +  1];	      final    double[][]    b    =    new    double[stages][y.length    +    1];    	non-compiled	[CE]  not  a  statement	12	None	replace
48	[BUG]  [BUGGY]  final  double[][]  b  =  new  double[stages][t.length];  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  new  double[stages][t.length];  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  new  double[stages][t.length];	      final    double[][]    b    =    new    double[stages][y.length];    	non-compiled	[CE]  not  a  statement	10	None	replace
49	[BUG]  [BUGGY]  final  double[][]  b  =  t.length  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  b  =  t.length  +  1;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  b  =  t.length  +  1;	      final    double[][]    b    =    c.length    +    1;    	non-compiled	[CE]  not  a  statement	15	None	replace
50	[BUG]  [BUGGY]  final  double[][]  a  =  t.length;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[][]  a  =  t.length;  [BUGGY]    final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[][]  a  =  t.length;	      final    double[][]    a    =    c.length;    	non-compiled	[CE]  not  a  statement	16	None	replace
51	[BUG]  [BUGGY]  final  double[]  yTmp  =  t.toString();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[]  yTmp  =  t.toString();  [BUGGY]    final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[]  yTmp  =  t.toString();	  final    double[]    yTmp    =    t.clone();    	non-compiled	[CE]  not  a  statement	7	None	replace
52	[BUG]  [BUGGY]  final  double[]  yTmp  =  t.toArray();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];    [BUGGY]  final  double[]  yTmp  =  t.toArray();  [BUGGY]    final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	203	203	1	replace	final  double[]  yTmp  =  t.toArray();	  final    double[]    yTmp    =    t.clone();    	non-compiled	[CE]  not  a  statement	7	None	replace
