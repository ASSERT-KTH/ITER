bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]    initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;  [BUGGY]  initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	    initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;		non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	add
2	[BUG]  [BUGGY]    initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  true;  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]    initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  true;  [BUGGY]  initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	    initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  true;		non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	add
3	[BUG]  [BUGGY]    initIntegration(equations.getTime(),  y0,  t);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]    initIntegration(equations.getTime(),  y0,  t);  [BUGGY]  initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	    initIntegration(equations.getTime(),  y0,  t);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	add
4	[BUG]  [BUGGY]    initIntegration(equations.getTime(),  y0,  error);  isLastStep  =  true;  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]    initIntegration(equations.getTime(),  y0,  error);  isLastStep  =  true;  [BUGGY]  initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	    initIntegration(equations.getTime(),  y0,  error);  isLastStep  =  true;		non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	add
5	[BUG]  [BUGGY]    initIntegration(equations.getTime(),  y0,  error);  isLastStep  =  false;  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]    initIntegration(equations.getTime(),  y0,  error);  isLastStep  =  false;  [BUGGY]  initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	    initIntegration(equations.getTime(),  y0,  error);  isLastStep  =  false;		non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	add
6	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  stepStart,  t);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]  initIntegration(equations.getTime(),  stepStart,  t);  [BUGGY]    isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	initIntegration(equations.getTime(),  stepStart,  t);	initIntegration(equations.getTime(),  y0,  t);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
7	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  stepEnd,  t);  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]  initIntegration(equations.getTime(),  stepEnd,  t);  [BUGGY]    isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	initIntegration(equations.getTime(),  stepEnd,  t);	initIntegration(equations.getTime(),  y0,  t);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
8	[BUG]  [BUGGY]  initInteger(equations.getTime(),  stepStart,  t);  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]  initInteger(equations.getTime(),  stepStart,  t);  [BUGGY]    isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	initInteger(equations.getTime(),  stepStart,  t);	initIntegration(equations.getTime(),  y0,  t);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
9	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  stepStart,  y0,  t);  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]  initIntegration(equations.getTime(),  stepStart,  y0,  t);  [BUGGY]    isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	initIntegration(equations.getTime(),  stepStart,  y0,  t);	initIntegration(equations.getTime(),  y0,  t);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
10	[BUG]  [BUGGY]    initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  firstTime;  [CE]  invalid  method  declaration;  return  type  required  [FE]    AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]    initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  firstTime;  [BUGGY]  initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	    initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  firstTime;		non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	add
11	[BUG]  [BUGGY]    initIntegration(equations.getTime(),  x0,  t);  isLastStep  =  false;  [CE]  invalid  method  declaration;  return  type  required  [FE]      AssertionError  [CONTEXT]    final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  [BUGGY]    initIntegration(equations.getTime(),  x0,  t);  isLastStep  =  false;  [BUGGY]  initIntegration(equations.getTime(),  y0,  t);  isLastStep  =  false;  do  {  interpolator.shift();  double  error  =  10;  while  (error  >=  1.0)  {  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	216	216	1	replace	    initIntegration(equations.getTime(),  x0,  t);  isLastStep  =  false;		non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	add
