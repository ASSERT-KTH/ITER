compilation error,204,add,[CE] variable yDotK is already defined in method integrate(ExpandableStatefulODE,double),,  final double[][] yDotK = new double[stages][y.length];
compilation error,204,add,[CE] variable y is already defined in method integrate(ExpandableStatefulODE,double),,  final double[][] y = y.clone();
compilation error,204,add,[CE] variable yTmp is already defined in method integrate(ExpandableStatefulODE,double),,  final double[][] yTmp = y.clone();
compilation error,204,add,[CE] variable yDotK is already defined in method integrate(ExpandableStatefulODE,double),,  final double[][] yDotK = new double[stages][y.length].clone();
compilation error,204,add,[CE] incompatible types,,  final double[][] yDotTmp = y.clone();
compilation error,199,replace,[CE] double cannot be dereferenced,final double[] y0= equations.getCompleteState(); ,final double[] y0 = t.getCompleteState();
compilation error,199,replace,[CE] incompatible types,final double[] y0= equations.getCompleteState(); ,final double[] y0=(equations == null)? t : equations.getCompleteState();
compilation error,199,replace,[CE] incompatible types,final double[] y0= equations.getCompleteState(); ,final double[] y0=(equations == null)? 0 : equations.getCompleteState();
compilation error,199,replace,[CE] cannot find symbol y0,final double[] y0= equations.getCompleteState(); , 
increase failing tests,202,replace, [FE] ArrayIndexOutOfBoundsException testBackward,final double[][] yDotK = new double[stages][y.length]; ,final double[][] yDotK = new double[c.length][y.length];
increase failing tests,202,replace, [FE] ArrayIndexOutOfBoundsException testBackward,final double[][] yDotK = new double[stages][y.length]; ,final double[][] yDotK = new double[0][y.length];
increase failing tests,202,replace, [FE] ArrayIndexOutOfBoundsException testBackward,final double[][] yDotK = new double[stages][y.length]; ,final double[][] yDotK = new double[2][y.length];
compilation error,202,replace,[CE] cannot find symbol yDotK,final double[][] yDotK = new double[stages][y.length]; , 
increase failing tests,237,replace, [FE] NullPointerException testBackward,scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); ,scale[i] = vecAbsoluteTolerance[i] + scalRelativeTolerance * FastMath.abs(y[i]);
compilation error,237,replace,[CE] bad operand types for binary operator '+',scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); ,scale[i] = vecAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]);
compilation error,237,replace,[CE] bad operand types for binary operator '*',scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); ,scale[i] = vecAbsoluteTolerance * scalRelativeTolerance * FastMath.abs(y[i]);
compilation error,200,add,[CE] cannot find symbol,,  final double[] c =(double[])equals.getCompleteState();
compilation error,200,add,[CE] cannot find symbol,,  final double[] c = y0.clone();
compilation error,200,add,[CE] cannot find symbol,,  final double[] c =(double[])equals.clone();
compilation error,200,add,[CE] cannot find symbol,,  final double[] c =(double[])equivalence.clone();
compilation error,200,add,[CE] cannot find symbol,,  final double[] c =(double[])equations.getCompleteState();
compilation error,201,replace,[CE] cannot find symbol,final int stages = c.length + 1; ,final int stages = y.length + 1;
compilation error,201,replace,[CE] cannot find symbol,final int stages = c.length + 1; ,final int stages = x.length + 1;
compilation error,201,replace,[CE] cannot find symbol,final int stages = c.length + 1; ,final int stages = c.length + 2;
compilation error,201,replace,[CE] cannot find symbol,final int stages = c.length + 1; , 
compilation error,196,add,[CE] cannot find symbol,,  setStandardDeviation(standardDeviation);
compilation error,196,add,[CE] cannot find symbol,,  sanityChecks(equations, t);
compilation error,196,add,[CE] cannot find symbol,,  setStandardDeviation(t);
compilation error,196,add,[CE] cannot find symbol,,  sanityChecks(equations);
compilation error,196,add,[CE] cannot find symbol,,  setScale(scale);
compilation error,202,add,[CE] cannot find symbol,,  final int stages = c.length + 2;
compilation error,202,add,[CE] cannot find symbol,,  final int stages = c.length + 1;
compilation error,202,add,[CE] cannot find symbol,,  final double[][] y = y0.clone();
compilation error,202,add,[CE] illegal start of expression,,  if(stages > 0) { for(int i = 0; i < stages; i++) { scaledH = scaledH.clone(); }
compilation error,202,add,[CE] illegal start of expression,,  if(stages > 0) { for(int i = 0; i < stages; i++) { break; }
compilation error,201,add,[CE] cannot find symbol,,  final double[] c =(double[])equals.getCompleteState();
compilation error,201,add,[CE] cannot find symbol,,  final double[] c =(double[])equals.clone();
compilation error,201,add,[CE] cannot find symbol,,  final double[][] c =(double[][])equals.getCompleteState();
compilation error,201,add,[CE] cannot find symbol,,  final double[][] c =(double[][])equals.clone();
compilation error,201,add,[CE] cannot find symbol,,  final double[] c = y.clone();
compilation error,200,replace,[CE] cannot find symbol,final double[] y = y0.clone(); ,final double[] y = y.clone();
compilation error,200,replace,[CE] cannot find symbol,final double[] y = y0.clone(); ,final double[] y = t.clone();
compilation error,199,add,[CE] cannot find symbol,,  final double[][] c =(double[][])prototype.clone();
compilation error,199,add,[CE] cannot find symbol,,  final double[][] c =(double[][])equations.getCompleteState();
compilation error,199,add,[CE] cannot find symbol,,  final double[] c =(double[])equations.getCompleteState();
compilation error,199,add,[CE] cannot find symbol,,  final double[][] c =(double[][])equals.getCompleteState();
compilation error,199,add,[CE] cannot find symbol,,  final double[][] c =(double[][])equivalence.clone();
compilation error,236,replace,[CE] illegal start of expression,for (int i = 0; i < scale.length; ++i) { ,for(int i = 1; i < scale.length; ++i) {
compilation error,236,replace,[CE] illegal start of expression,for (int i = 0; i < scale.length; ++i) { ,for(int i = 0; i < mainSetDimension.length; ++i) {
compilation error,236,replace,[CE] illegal start of expression,for (int i = 0; i < scale.length; ++i) { ,for(int i = 0; i < size.length; ++i) {
compilation error,236,replace,[CE] cannot find symbol,for (int i = 0; i < scale.length; ++i) { , 
compilation error,195,add,[CE] ';' expected,,  sanityChecks(equations, t);
compilation error,195,add,[CE] ';' expected,,  sanityChecks(equations);
compilation error,195,add,[CE] ';' expected,,  sanityChecks(t, c);
compilation error,195,add,[CE] ';' expected,,  setStandardDeviation(t);
compilation error,195,add,[CE] ';' expected,,  sanityChecks(equivalence, t);
compilation error,203,add,[CE] cannot find symbol,,  final double[][] a = y0.clone();
compilation error,203,add,[CE] cannot find symbol,,  final double[][] a = y.clone();
compilation error,203,add,[CE] cannot find symbol,,  final double[][] y = y.clone();
compilation error,203,add,[CE] cannot find symbol,,  final double[][] a =(double[][])equals.clone();
compilation error,203,add,[CE] <identifier> expected,,  final rungeKuttaStepInterpolator.initialize(equivalence, forward);
compilation error,196,replace,[CE] cannot find symbol,final boolean forward = t > equations.getTime(); ,final boolean forward = t < equations.getTime();
compilation error,196,replace,[CE] cannot find symbol,final boolean forward = t > equations.getTime(); ,final boolean forward = t == equations.getTime();
compilation error,196,replace,[CE] cannot find symbol,final boolean forward = t > equations.getTime(); ,final boolean forward = t >= equations.getTime();
compilation error,236,add,[CE] cannot find symbol,,  scale = new double[mainSetDimension]; vecAbsoluteTolerance = vecRelativeTolerance * FastMath.abs(y[0]);
compilation error,236,add,[CE] cannot find symbol,,  scale[0] = vecAbsoluteTolerance.doubleValue();
compilation error,236,add,[CE] cannot find symbol,,  scale = new double[mainSetDimension];
compilation error,236,add,[CE] cannot find symbol,,  scale = new double[mainSetDimension]; vecAbsoluteTolerance = vecRelativeTolerance * FastMath.abs(y[1]);
compilation error,236,add,[CE] cannot find symbol,,  scale = new double[mainSetDimension]; vecAbsoluteTolerance = vecRelativeTolerance * FastMath.abs(scale);
compilation error,204,replace,[CE] cannot find symbol,final double[] yDotTmp = new double[y.length]; ,final double[] yDotTmp = new double[stages][y.length];
compilation error,204,replace,[CE] ']' expected,final double[] yDotTmp = new double[y.length]; ,final double[] yDotTmp = new double[stages [y.length];
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,setStandardDeviation(equations);
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,setState(equations);
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,setStep(t);
compilation error,237,add,[CE] cannot find symbol,,  scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]);
compilation error,237,add,[CE] cannot find symbol,,  scale[i] = vecRelativeTolerance[i] * FastMath.abs(y[i]);
compilation error,237,add,[CE] cannot find symbol,,  scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(scale[i]);
compilation error,203,replace,[CE] cannot find symbol,final double[] yTmp= y0.clone(); ,final double[] yTmp= yDotK.clone();
compilation error,203,replace,[CE] cannot find symbol,final double[] yTmp= y0.clone(); ,final double[] yTmp = y.clone();
compilation error,199,replace,[CE] cannot find symbol,final double[] y0= equations.getCompleteState(); ,final double[] y0= equations.getNext();
compilation error,199,replace,[CE] cannot find symbol,final double[] y0= equations.getCompleteState(); ,final double[] y0= equations.getNull();
compilation error,199,replace,[CE] cannot find symbol,final double[] y0= equations.getCompleteState(); ,final double[] y0= equations.getTarget();
compilation error,236,replace,[CE] illegal start of expression,for (int i = 0; i < scale.length; ++i) { ,for(int i = 0; i < mainSetDimension; ++i) {
compilation error,236,replace,[CE] illegal start of expression,for (int i = 0; i < scale.length; ++i) { ,for(int i = 0; i < scale.length - 1; ++i) {
compilation error,237,replace,[CE] cannot find symbol,scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); ,scale[i] = vecRelativeTolerance[i] + scalAbsoluteTolerance * FastMath.abs(y[i]);
compilation error,237,replace,[CE] cannot find symbol,scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); ,scale[i] = vecRelativeTolerance[i] + scalRelativeTolerance * FastMath.abs(y[i]);
compilation error,237,replace,[CE] cannot find symbol,scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); ,scale[i] = vecAbsoluteTolerance[i] + scalRelativeTolerance * FastMath.abs(x[i]);
compilation error,200,replace,[CE] cannot find symbol,final double[] y = y0.clone(); ,final double[] y =(y0 == 0.0)? y0.clone() : Double.POSITIVE_INFINITY;
compilation error,200,replace,[CE] cannot find symbol,final double[] y = y0.clone(); ,final double[] y =(y0 == 0.0)? y0.clone() : Double.NEGATIVE_INFINITY;
compilation error,204,replace,[CE] cannot find symbol,final double[] yDotTmp = new double[y.length]; ,final double[] yDotTmp = new double[stages];
compilation error,204,replace,[CE] ';' expected,final double[] yDotTmp = new double[y.length]; ,final double[] yDotTmp = new double[stages](y.length];
compilation error,236,add,[CE] cannot find symbol,,  scale = vecRelativeTolerance.doubleValue();
compilation error,236,add,[CE] cannot find symbol,,  scale = Math.max(scale, vecRelativeTolerance);
compilation error,236,add,[CE] cannot find symbol,,  scale = Math.sqrt(mainSetDimension);
compilation error,236,add,[CE] cannot find symbol,,  scale = calculateScaleAbsoluteTolerance(mainSetDimension);
compilation error,203,add,[CE] <identifier> expected,,  final rungeKuttaStepInterpolator =(RangeKuttaStepInterpolator)prototype.clone();
compilation error,203,add,[CE] <identifier> expected,,  final rungeKuttaStepInterpolator =(RungeKuttaStepInterpolator)prototype.clone();
compilation error,203,add,[CE] cannot find symbol,,  final rungeKuttaStepInterpolator proto =(RangeKuttaStepInterpolator)prototype.clone();
compilation error,203,add,[CE] cannot find symbol,,  final RungeKuttaStepInterpolator prototype =(RangeKuttaStepInterpolator)prototype.clone();
compilation error,203,add,[CE] cannot find symbol,,  final RungeKuttaStepInterpolator proto =(RangeKuttaStepInterpolator)prototype.clone();
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,setEquals(equals);
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,setEdge(equations, t);
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,setEquivalence(equivalence);
compilation error,202,add,[CE] cannot find symbol,,  final double[] stages = c.length + 1;
compilation error,202,add,[CE] cannot find symbol,,  final int stages = stages.length - 1;
compilation error,202,add,[CE] cannot find symbol,,  final int stages = stages.getMean();
compilation error,202,add,[CE] cannot find symbol,,  final double[] stages = c.length;
compilation error,200,add,[CE] cannot find symbol,,  final double[] c =(double[])y0.clone();
compilation error,200,add,[CE] cannot find symbol,,  final boolean forward = t < equations.getCompleteState();
compilation error,200,add,[CE] cannot find symbol,,  final double[] c = t.clone();
compilation error,200,add,[CE] cannot find symbol,,  final double[] c = x0.clone();
compilation error,201,replace,[CE] cannot find symbol,final int stages = c.length + 1; ,final int stages = c.length * 1;
compilation error,201,replace,[CE] cannot find symbol,final int stages = c.length + 1; ,final int stages = c.length;
compilation error,201,replace,[CE] cannot find symbol,final int stages = c.length + 1; ,final int stages = c.length * 2;
compilation error,204,add,[CE] cannot find symbol,,  final rungeKuttaStepInterpolator proto =(rungeKuttaStepInterpolator)c.clone();
compilation error,204,add,[CE] cannot find symbol,,  final rungeKuttaStepInterpolator proto =(RangeKuttaStepInterpolator)prototype.clone();
compilation error,204,add,[CE] cannot find symbol,,  final rungeKuttaStepInterpolator proto =(rungeKuttaStepInterpolator)c.clone(); stages = c.length + 1;
compilation error,204,add,[CE] cannot find symbol,,  final rungeKuttaStepInterpolator prototype =(rungeKuttaStepInterpolator)c.clone();
compilation error,204,add,[CE] cannot find symbol,,  final rungeKuttaStepInterpolator prototype =(rungeKuttaStepInterpolator)c.clone(); stages = stages + 1;
compilation error,203,replace,[CE] cannot find symbol,final double[] yTmp= y0.clone(); ,final double[] yTmp = t.clone();
compilation error,203,replace,[CE] cannot find symbol,final double[] yTmp= y0.clone(); ,final double[] yTmp = c.clone();
compilation error,201,add,[CE] cannot find symbol,,  final double[] c =(double[])y0.clone();
compilation error,201,add,[CE] cannot find symbol,,  final double[] c =(double[])y.clone();
compilation error,201,add,[CE] cannot find symbol,,  final double[] c = y0.clone();
compilation error,201,add,[CE] cannot find symbol,,  final double[] c =(double[])equals(y0.clone());
compilation error,201,add,[CE] cannot find symbol,,  final double[] c =(double[])equals(new Double[c.length]);
compilation error,199,add,[CE] cannot find symbol,,  final double[] c = equations.getCompleteState();
compilation error,199,add,[CE] illegal start of expression,,  final double[] c =(double[])equals.getCompleteState();
compilation error,199,add,[CE] ';' expected,,  final double[] c =(false)equals.getCompleteState();
compilation error,199,add,[CE] illegal start of expression,,  final double[] c =(double[])nextTree();
compilation error,199,add,[CE] illegal start of expression,,  final double[] c =(double[])nextTime;
compilation error,196,replace,[CE] illegal start of expression,final boolean forward = t > equations.getTime(); ,final boolean forward = t!= equations.getTime();
compilation error,195,add,[CE] ';' expected,,  checkInternal();
compilation error,195,add,[CE] ';' expected,,  sanityChecks(equals, t);
compilation error,195,add,[CE] ';' expected,,  sanityChecks(equals);
compilation error,195,add,[CE] ';' expected,,  checkInterpolator(equals);
compilation error,202,replace,[CE] illegal start of expression,final double[][] yDotK = new double[stages][y.length]; ,final double[][] yDotK = new double[6][y.length];
compilation error,202,replace,[CE] illegal start of expression,final double[][] yDotK = new double[stages][y.length]; ,final double[][] yDotK = new double[c.length];
compilation error,237,add,[CE] illegal start of expression,,  if(vecRelativeTolerance[i] == null) { for(int i = 0; i < scale.length; ++i) { scale[i] = vecRelativeTolerance[i] + scalAbsoluteTolerance * FastMath.
compilation error,237,add,[CE] illegal start of expression,,  if(vecRelativeTolerance[i] == null) { for(int i = 0; i < scale.length; ++i) { scale[i] = vecAbsoluteTolerance[i] + scalRelativeTolerance * FastMath.
compilation error,237,add,[CE] ';' expected,,  if(vecRelativeTolerance[i] == null) { for(int i = 0; i < scale.length; ++i) { scale[i] = vecRelativeTolerance[i] + scalAbsoluteTolerance * FastMath
compilation error,237,add,[CE] illegal start of expression,,  if(vecRelativeTolerance[i] == null) { for(int i = 0; i < scale.length; ++i) { scale[i] = vecRelativeTolerance[i] * FastMath.abs(y[i]); }
compilation error,237,add,[CE] ';' expected,,  if(vecRelativeTolerance[i] == null) { for(int i = 0; i < scale.length; ++i) { scale[i] = vecAbsoluteTolerance[i] + scalRelativeTolerance * FastMath
compilation error,196,add,[CE] illegal start of expression,,  setState(t);
compilation error,196,add,[CE] illegal start of expression,,  setStatements(t);
compilation error,196,add,[CE] illegal start of expression,,  setStatement(t);
compilation error,196,add,[CE] illegal start of expression,,  setSlope(t);
compilation error,196,add,[CE] illegal start of expression,,  setResult(t);
compilation error,200,add,[CE] illegal start of expression,,  final double[] c = c.clone();
compilation error,200,add,[CE] illegal start of expression,,  final double[] a = y0.clone();
compilation error,200,add,[CE] illegal start of expression,,  final double[] b = b.clone();
compilation error,200,add,[CE] illegal start of expression,,  final double[] a = t.clone();
compilation error,201,replace,[CE] illegal start of expression,final int stages = c.length + 1; ,final int stages = c.length + 3;
compilation error,200,replace,[CE] illegal start of expression,final double[] y = y0.clone(); ,final double[] y = y1.clone();
compilation error,201,add,[CE] illegal start of expression,,  final double[] c =(double[])elements.clone();
compilation error,201,add,[CE] illegal start of expression,,  final double[] c =(double[])values.clone();
compilation error,201,add,[CE] illegal start of expression,,  final double[] c =(double[])equals(y0, t);
compilation error,201,add,[CE] ']' expected,,  final double[] c =(double[])equals(new Double[][c.length]);
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,checkInterval(equations);
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,checkInvariant(equations);
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,checkInterpolation(equations);
compilation error,195,replace,[CE] ';' expected,setEquations(equations); ,validateEquals(equations);
compilation error,202,add,[CE] illegal start of expression,,  final int stages = Math.min(stages, t.getSlope());
compilation error,202,add,[CE] illegal start of expression,,  final double[][] stages = c.clone();
compilation error,202,add,[CE] illegal start of expression,,  final int stages = Math.min(stages, t.getScale());
compilation error,202,add,[CE] illegal start of expression,,  final int stages = Math.abs(stages);
compilation error,196,replace,[CE] illegal start of expression,final boolean forward = t > equations.getTime(); ,final boolean forward = equations.getTime();
compilation error,204,replace,[CE] illegal start of expression,final double[] yDotTmp = new double[y.length]; ,final double[] yDotTmp = new double[phases][y.length];
compilation error,204,replace,[CE] illegal start of expression,final double[] yDotTmp = new double[y.length]; ,final double[] yDotTmp = new double[steps][y.length];
compilation error,199,add,[CE] illegal start of expression,,  final double[] c =(double[])equals.getCompleteState(); final int stages = c.length + 1;
compilation error,199,add,[CE] illegal start of expression,,  final double[] c =(double[])elements.getCompleteState();
compilation error,199,add,[CE] illegal start of expression,,  final double[] c = equations.getCompleteState(); final double[] y = c.clone();
compilation error,199,replace,[CE] illegal start of expression,final double[] y0= equations.getCompleteState(); ,final double[] y0 = equations.getCompletedState();
compilation error,203,add,[CE] illegal start of expression,,  final rungeKuttaStepInterpolator prototype =(RungeKuttaStepInterpolator)prototype.clone();
compilation error,203,add,[CE] illegal start of expression,,  final rungeKuttaStepInterpolator prototype =(RungeKuttaStepInterpolator)stages.clone();
compilation error,203,add,[CE] illegal start of expression,,  final rungeKuttaStepInterpolator proto =(RungeKuttaStepInterpolator)stages.clone();
compilation error,203,add,[CE] illegal start of expression,,  final rungeKuttaStepInterpolator proto =(RungeKuttaStepInterpolator)prototype.clone();
compilation error,203,add,[CE] illegal start of expression,,  final rungeKuttaStepInterpolator prototype =(RungeKuttaStepInterpolator)prototype.copy();
compilation error,237,replace,[CE] ']' expected,scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); ,scale[i] = vecAbsoluteTolerance[i + scalRelativeTolerance * FastMath.abs(y[i]);
compilation error,237,replace,[CE] illegal start of expression,scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]); ,scale[i] = vecRelativeTolerance + scalAbsoluteTolerance * FastMath.abs(y[i]);
compilation error,236,add,[CE] illegal start of expression,,  scale = calculateScalAbsoluteTolerance(mainSetDimension);
compilation error,236,add,[CE] illegal start of expression,,  scale = Math.max(scale, vecAbsoluteTolerance);
compilation error,236,add,[CE] illegal start of expression,,  scale = calculateScalAbsoluteTolerance(mainSetDimension, vecRelativeTolerance);
compilation error,196,add,[CE] illegal start of expression,,  final int c = equations.getInt();
compilation error,196,add,[CE] ';' expected,,  final int c.length = Math.min(equals.getChronology().length(), t.getChronology());
compilation error,196,add,[CE] ';' expected,,  final int c.length = Math.max(equals.getChronology().length(), t.getChronology());
compilation error,196,add,[CE] ';' expected,,  final int c.length = Math.max(t, c.length);
compilation error,196,add,[CE] ,,  final int c.length = Math.min(equals.getChronology().length(), c.getHeaderSize());
compilation error,237,add,[CE] unclosed string literal,,  scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance * FastMath.abs(x[i]);
compilation error,237,add,[CE] unclosed string literal,,  scale[i] = vecAbsoluteTolerance[i] * FastMath.abs(y[i]);
compilation error,237,add,[CE] unclosed string literal,,  scale[i] = vecRelativeTolerance[i] * FastMath.abs(x, y[i]);
compilation error,237,add,[CE] unclosed string literal,,  scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance * FastMath.abs(y[i]);
compilation error,204,add,[CE] unclosed string literal,,  final double[][] a = y.clone();
compilation error,204,add,[CE] unclosed string literal,,  final int stages = c.length + 2;
compilation error,204,add,[CE] unclosed string literal,,  final int stages = stages.length + 1;
compilation error,204,add,[CE] unclosed string literal,,  final int stages = c.length + 1;
compilation error,195,add,[CE] ,,  sanityChecks(t, s);
compilation error,195,add,[CE] ,,  sanityChecks(t, 'n');
compilation error,195,add,[CE] ,,  ensureStub(t, c);
compilation error,195,add,[CE] ,,  sanityChecks(t, equations);
compilation error,203,replace,[CE] ,final double[] yTmp= y0.clone(); ,final double[] yTmp = y.toString();
compilation error,236,replace,[CE] ,for (int i = 0; i < scale.length; ++i) { ,for(int i = 0; i < size; ++i) {
