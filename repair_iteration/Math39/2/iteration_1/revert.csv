projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*MathMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=x[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y[i]*vecAbsoluteTolerance.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(vecAbsoluteTolerance[i],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].computeScale(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*scalRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*t.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scaledH+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].doubleValue()+scale[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);t[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);intscalRelativeTolerance=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);inti]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scaleRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]+vecAbsoluteTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);intscalRelativeTolerance=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+scale[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);if(scalRelativeTolerance!=null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);intscalRelativeTolerance=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);if(scalRelativeTolerance!=null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scaleRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scaleRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scaleRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+vecAbsoluteTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y0+vecAbsoluteTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=x[i]+vecAbsoluteTolerance[i]*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]+error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(variables[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y0+vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,y);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);if(scalRelativeTolerance!=null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);if(scalRelativeTolerance!=null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]-1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i],scale+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y,i);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=x[i]+vecAbsoluteTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);if(scalRelativeTolerance==null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=a[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*scalAbsoluteTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]*FastMath.abs(y,vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(vecAbsoluteTolerance,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(t,vecAbsoluteTolerance);
