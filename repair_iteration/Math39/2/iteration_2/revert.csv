projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*MathMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=x[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y[i]*vecAbsoluteTolerance.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(vecAbsoluteTolerance[i],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].computeScale(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*scalRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*t.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scaledH+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].doubleValue()+scale[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);t[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);intscalRelativeTolerance=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);inti]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scaleRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]+vecAbsoluteTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);intscalRelativeTolerance=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+scale[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);if(scalRelativeTolerance!=null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);intscalRelativeTolerance=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);if(scalRelativeTolerance!=null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scaleRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scaleRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scaleRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+vecAbsoluteTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y0+vecAbsoluteTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=x[i]+vecAbsoluteTolerance[i]*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]+error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(variables[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y0+vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,y);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);if(scalRelativeTolerance!=null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);if(scalRelativeTolerance!=null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]-1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i],scale+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y,i);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=x[i]+vecAbsoluteTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);if(scalRelativeTolerance==null){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=a[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*scalAbsoluteTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]*FastMath.abs(y,vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(vecAbsoluteTolerance,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale[i],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale[i],t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale[i],scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale[i],scaleAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance[i]*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(variables[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecRelativeTolerance+vecAbsoluteTolerance*FastMath.abs(variables[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=scale[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237doublescalRelativeTolerance=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237intscalRelativeTolerance=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237double[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMa
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]+vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);inti]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vAbsoluteTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=yDotK[i]*scalAbsoluteTolerance.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+scalRelativeTolerance*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i+scalRelativeTolerance*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);inti]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);intscalRelativeTolerance=Math.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);inty[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]/1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]-2);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].getScale(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].getScale()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMa
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].computeScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].computeScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=scale[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalAbsoluteTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance.computeScale(t,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(scale,t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale.computeScale(t,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalDelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(scale[i],vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale.computeScale(vecAbsoluteTolerance[i],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance.computeScale(scale[i],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1]+vecRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1]+scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]*FastMath.abs(vecAbsoluteTolerance[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+FastMath.abs(y,scale[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].computeScale(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,t,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].computeScale(vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*t.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*t.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].doubleValue()+1;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=scale[i+scalRelativeTolerance*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMa
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+i*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+i*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];y[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];inty[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];y[i]=vecAbsoluteTolerance[i].;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];y[i]=vAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);t[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);inti]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]*FastMath.abs(vecAbsoluteTolerance[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i],scale[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y+vecRelativeTolerance*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);inti]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance*FastMath.abs(vecRelativeTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecRelativeTolerance*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scal
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scal
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);y[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);size[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);intyDotK[]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[0],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i],scale[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i],scale[i]+error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].computeScale(scale,y);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,y,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].computeScale(vecAbsoluteTolerance,y);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y[i].computeScale(scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=scalAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+scale[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*scale.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scal
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scal
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);inti]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(value[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalerelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+Math.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*Math.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance.computeScale(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale.computeScale(vecAbsoluteTolerance,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t.computeScale(vecAbsoluteTolerance,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalDelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalVisibleTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*Math.abs(yDotK[i]+error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]+error,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]+scalRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].computeScale(scale,scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].computeScale(vecAbsoluteTolerance[i],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].computeScale(scale,vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237doublescalRelativeTolerance=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237double[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237intscalRelativeTolerance=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=b[i]+vecAbsoluteTolerance[i]*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);inti]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);inti=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].doubleValue()+vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].doubleValue()+scale[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].doubleValue()*scale[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i],y);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y,i);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y,scale[i],i);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalAbsoluteTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i],scale+vecRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i],scale+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+Math.abs(yDotK[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+Math.abs(yDotK[i]*scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+Math.abs(yDotK[i]-1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+Math.abs(yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237doublescalRelativeTolerance=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237intscalRelativeTolerance=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237longscalRelativeTolerance=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);y[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]*Math.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]*vecAbsoluteTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*vecRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);scale[i]=scalAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);scale[i]=vAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);t[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);t[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);t[i]=t+scalRelativeTolerance*FastMath.abs(y[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+scalRelativeTolerance*FastMath.abs(y[i]);t[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale.length+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalAbsoluteTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*Math.abs(yDotK[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*Math.abs(yDotK[i]-1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scaledH+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*vecAbsoluteTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]*vecAbsoluteTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*vecAbsoluteTolerance.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*scale.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecRelativeTolerance[i]*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);size[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);inti]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scale.length*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scaleAbsoluteTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];scale[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];y[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];inti]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];scale[i]=vAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]*vecRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalRelativeTolerance[i]*vecAbsoluteTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*scalRelativeTolerance.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);scale[i]=scalAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+b*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[1]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*Math.abs(yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);t[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);y[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecRelativeTolerance[i]*FastMath.abs(scalAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance.length*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance+vecAbsoluteTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale.length+vecAbsoluteTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+scale.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]+vecRelativeTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);inti]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);inti]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalAbsoluteTolerance*FastMath.abs(y[i]);inti]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance.doubleValue()*scale.length;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+scalAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y,i);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=b[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecRelativeTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);y[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);filteredNextT=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(values[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=scalAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(value[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i],scale+vecRelativeTolerance*FastMath.sin(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMa
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*b.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);scale[i]=scale[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=scale[i].computeScale(t,scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]+vecRelativeTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,y0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y[i]*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);scalRelativeTolerance[i]=scale[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);scalRelativeTolerance[i]=scale[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=yAbsoluteTolerance[i]*Math.abs(scalAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);inti]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance*FastMath.abs(y[i]);inti]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecScaleRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRightTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance*FastMath.abs(y[i]);t[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);t[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];y[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];y[i]=vecAbsoluteTolerance[i]+scaleRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];y[i]=vecAbsoluteTolerance[i]+vRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMa
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);scale[i]=xDotK[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);scale[i]=x[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scal*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y[i]*FastMath.abs(vecAbsoluteTolerance[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecAbsoluteTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+t*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale*FastMath.abs(vecRelativeTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y0+vecRelativeTolerance*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=scalAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]+Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i],scale[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]*Math.abs(yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vAbsoluteTolerance[i]*Math.abs(yDotK[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.computeScale(vecAbsoluteTolerance[i],scale,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance.computeScale(scale[i],t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i].doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecDerivativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scale*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+vecAbsoluteTolerance*FastMath.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]*Math.abs(yDotK[i]-1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237doublevecRelativeTolerance=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i].computeScale(vecAbsoluteTolerance,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].computeScale(scale,vecRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]+scalRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i],scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y0+vecRelativeTolerance[i]*FastMath.abs(scalAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=yAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y0+vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scaleAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scaledAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=scale[i]+vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);intk=Math.min(vecAbsoluteTolerance[i],scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]+scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=scalAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*scale.abs(yAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*scale.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=scale[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*y.abs(scalRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*hNew.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);scale[i]=scalAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);scale[i]=vAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i],y0);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scala[i],y);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]+2);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=yMath.abs(vecAbsoluteTolerance[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y0+scalAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance[i]*Math.abs(yDotK[i]+error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vAbsoluteTolerance[i]*Math.abs(yDotK[i]+error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);y=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance+vecAbsoluteTolerance.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance+vecAbsoluteTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);y[i]=scalAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);y[i]=vAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];if(firstTime){scale[i]=vecAbsoluteTolerance[i];}else{for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];if(firstTime){scale[i]=vecAbsoluteTolerance[i];}else{for(inti=0;i<scale.length;++i){scale[i]=scalAbsoluteTolerance[i];}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]*Math.abs(a[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]*Math.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);scale[i]=vAbsoluteTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scala[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[0]=vecAbsoluteTolerance[0]+scalRelativeTolerance*FastMath.abs(scale[0]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);t=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);y[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=scale.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i+1]+vecRelativeTolerance*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1]+scale*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);scalRelativeTolerance[i]=scale[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance*FastMath.abs(vecAbsoluteTolerance[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scal
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);if(firstTime){scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);if(firstTime){scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);}else{thrownewIllegalArgumentException("");}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=vecRelativeTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=b[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=y0+vecRelativeTolerance.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=b[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].doubleValue().doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+vecRelativeTolerance*FastMath.abs(vecAbsoluteTolerance[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i+vecAbsoluteTolerance*FastMath.abs(vecRelativeTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale[i+vecRelativeTolerance*FastMath.abs(vecAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance.computeScale(t,scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].computeScale(t,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].computeScale(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*scale[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+scale[i]*t;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);scale[i]=scalAbsoluteTolerance[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);y[i]=scalAbsoluteTolerance[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y[i]+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);scale[i]=xTmp+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]*Math.sin(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(y0,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale,y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(variables[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalVisibleTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalAbsoluteTolerance*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scale+scalRelativeTolerance*FastMath.abs(y[i]);t=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);x[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecAbsoluteTolerance.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i+1]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y0+vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scale.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);t[i]=t+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,scale[i],t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=t.computeScale(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);scalRelativeTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+t*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i];x[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(yDotK[i]+error);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]+scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalFactor*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]+scale*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i],scale[i].doubleValue());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t;
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1*scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+2*scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+11*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i];y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237DoublescalRelativeTolerance=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scaled[i]+vecAbsoluteTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scaled[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i],scale+vecRelativeTolerance*FastMath.sqrt(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,y,t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(x[i]);scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*scalAbsoluteTolerance.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i].computeScale(t);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);if(vecAbsoluteTolerance[i]<scale.length){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);if(vecAbsoluteTolerance[i]<scale.length){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);if(vecAbsoluteTolerance[i]<scale.length){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i],scale[i]-1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]-1,scalAbsoluteTolerance);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);if(vecAbsoluteTolerance[i]<scale.length){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);if(vecAbsoluteTolerance[i]<scale.length){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(scale[i]);if(vecAbsoluteTolerance[i]<scale.length){for(inti=0;i<scale.length;++i){scale[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y0+vecRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=y0+vecAbsoluteTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(scale,scale,firstTime);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=vAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance.computeScale(variables[i],scale);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecTmp*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*FastMath.sqrt(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237vecAbsoluteTolerance[i]=vecAbsoluteTolerance.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);y[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237doublevecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237doublevecAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=scale[i]*FastMath.abs(y,vecAbsoluteTolerance[i]+1);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237doublevecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);if(t>0){for(inti=0;i<scale.length;++i){scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);}
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);y[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);}else{scale[i]=t+vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);y[i]=scalAbsoluteTolerance[i]+vecRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(y[i]);scale[i]=vecAbsoluteTolerance[i]*Math.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale[i]*FastMath.abs(y[i]);intk=Math.min(vecAbsoluteTolerance[i],scale[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1]+vecRelativeTolerance*FastMath.abs(y,i);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i+1]+vecRelativeTolerance*FastMath.abs(y[i],scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scale.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237y[i]=vecAbsoluteTolerance[i]*scale[i];
