projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*MathMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(x[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]*Math.abs(yDotK[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance[i]*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=scalAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance[i]+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=t+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]+scale.length*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i]*FastMath.abs(y,scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+vecRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(y[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scale[i]=vecAbsoluteTolerance+scalRelativeTolerance*FastMath.abs(scale[i]);
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=t.doubleValue();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].getScale();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java237scalAbsoluteTolerance[i]=vecAbsoluteTolerance[i].computeScale(t,scale);
