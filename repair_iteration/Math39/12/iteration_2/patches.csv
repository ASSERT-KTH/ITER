bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  boolean  firstTime  =  isFirst();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  isFirst();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  isFirst();	  boolean    firstTime    =    isLast();    	non-compiled	[CE]  not  a  statement	60	None	replace
2	[BUG]  [BUGGY]  filteredNextIsLast  =  filteredNextIsLast;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  filteredNextIsLast;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  filteredNextIsLast;	  filteredNextIsLast    =    equations.getFirst();    	non-compiled	[CE]  not  a  statement	66	None	replace
3	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getFirst()  +  stepStart;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getFirst()  +  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getFirst()  +  stepStart;	  filteredNextIsLast    =    equations.getFirst();    	non-compiled	[CE]  not  a  statement	66	None	replace
4	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  c,  yDotTmp,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  c,  yDotTmp,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  c,  yDotTmp,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    yDotTmp,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	11	None	replace
5	[BUG]  [BUGGY]  interpolator.reinitialize(this,  t,  yDotTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  t,  yDotTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  t,  yDotTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    yDotTmp,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	11	None	replace
6	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getLastTime()  +  1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getLastTime()  +  1;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getLastTime()  +  1;	  filteredNextIsLast    =    equations.getLastTime();    	non-compiled	[CE]  not  a  statement	27	None	replace
7	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getLastTime()  +  stages;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getLastTime()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getLastTime()  +  stages;	  filteredNextIsLast    =    equations.getLastTime();    	non-compiled	[CE]  not  a  statement	27	None	replace
8	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  t,  yDotK,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  t,  yDotK,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  t,  yDotK,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    t,    yDotK,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	69	None	replace
9	[BUG]  [BUGGY]  interpolator.reinitialize(this,  c,  yDotK,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  c,  yDotK,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  c,  yDotK,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    t,    yDotK,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	69	None	replace
10	[BUG]  [BUGGY]  interpolator.reinitialize(this,  t,  yDotTmp,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  t,  yDotTmp,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  t,  yDotTmp,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    t,    yDotK,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	69	None	replace
11	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());	  Interpolator.reinitialize(this,    y0,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	14	None	replace
12	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y0,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	14	None	replace
13	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	1	None	replace
14	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());	  interpolator.reinitialize(this,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	1	None	replace
15	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getTime()  *  stepStart;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getTime()  *  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getTime()  *  stepStart;	  filteredNextIsLast    =    equations.getTime()    +    stepStart;    	non-compiled	[CE]  not  a  statement	10	None	replace
16	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getTime()  +  steps;  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getTime()  +  steps;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getTime()  +  steps;	  filteredNextIsLast    =    equations.getTime()    +    stepStart;    	non-compiled	[CE]  not  a  statement	10	None	replace
17	[BUG]  [BUGGY]  filteredNextIsLast  =  Equations.getTime();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  Equations.getTime();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  Equations.getTime();	  filteredNextIsLast    =    equations.getTime()    +    1;    	non-compiled	[CE]  not  a  statement	9	None	replace
18	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getNextIsLast()  +  stepStart;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getNextIsLast()  +  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getNextIsLast()  +  stepStart;	  filteredNextIsLast    =    equations.getNextIsLast();    	non-compiled	[CE]  not  a  statement	64	None	replace
19	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getNextIsLast()  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getNextIsLast()  +  1;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getNextIsLast()  +  1;	  filteredNextIsLast    =    equations.getNextIsLast();    	non-compiled	[CE]  not  a  statement	64	None	replace
20	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  2].clone();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  2].clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][c.length  +  2].clone();	  final    double[][]    yDotK    =    new    double[stages][c.length    +    1].clone();    	non-compiled	[CE]  not  a  statement	21	None	replace
21	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[stages][c.length  +  1].clone();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  c  =  new  double[stages][c.length  +  1].clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  c  =  new  double[stages][c.length  +  1].clone();	  final    double[][]    yDotK    =    new    double[stages][c.length    +    1].clone();    	non-compiled	[CE]  not  a  statement	21	None	replace
22	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  3].clone();  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  3].clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][c.length  +  3].clone();	  final    double[][]    yDotK    =    new    double[stages][c.length    +    1].clone();    	non-compiled	[CE]  ';'  expected	21	None	replace
23	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)protocol.copy();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)protocol.copy();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)protocol.copy();	  Final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)    prototype.copy();    	non-compiled	[CE]  not  a  statement	72	None	replace
24	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getPreviousIsLast()  +  stepStart;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getPreviousIsLast()  +  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getPreviousIsLast()  +  stepStart;	  filteredNextIsLast    =    equations.getPreviousIsLast();    	non-compiled	[CE]  not  a  statement	36	None	replace
25	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getPreviousIsLast()  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getPreviousIsLast()  +  1;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getPreviousIsLast()  +  1;	  filteredNextIsLast    =    equations.getPreviousIsLast();    	non-compiled	[CE]  not  a  statement	36	None	replace
26	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getPreviousIsLast()  +  stages;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getPreviousIsLast()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getPreviousIsLast()  +  stages;	  filteredNextIsLast    =    equations.getPreviousIsLast();    	non-compiled	[CE]  not  a  statement	36	None	replace
27	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getTime()  *  stages;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getTime()  *  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getTime()  *  stages;	  filteredNextIsLast    =    equations.getTime()    +    stages;    	non-compiled	[CE]  not  a  statement	49	None	replace
28	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  x0,  yDotTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  x0,  yDotTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  x0,  yDotTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    x0,    yDotK,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	54	None	replace
29	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  x0,  yTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  x0,  yTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  x0,  yTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    x0,    yDotK,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	54	None	replace
30	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  equations,  x0,  yDotK,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  equations,  x0,  yDotK,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  equations,  x0,  yDotK,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    x0,    yDotK,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	54	None	replace
31	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  x0,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  x0,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  x0,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    x0,    yDotK,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	54	None	replace
32	[BUG]  [BUGGY]  boolean  firstTime  =  isLastTime();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  isLastTime();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  isLastTime();	  boolean    firstTime    =    isFirstTime();    	non-compiled	[CE]  not  a  statement	59	None	replace
33	[BUG]  [BUGGY]  boolean  firstTime  =  isFirstTime()  ||  isFirstTime();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  isFirstTime()  ||  isFirstTime();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  isFirstTime()  ||  isFirstTime();	  boolean    firstTime    =    isFirstTime();    	non-compiled	[CE]  not  a  statement	59	None	replace
34	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  2];  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  2];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][c.length  +  2];	  final    double[][]    yDotK    =    new    double[stages][c.length    +    1];    	non-compiled	[CE]  not  a  statement	4	None	replace
35	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length].clone();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length].clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][c.length].clone();	  final    double[][]    yDotK    =    new    double[stages][y.length].clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
36	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][y.length].clone();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][y.length].clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[c.length][y.length].clone();	  final    double[][]    yDotK    =    new    double[stages][y.length].clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
37	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  equations,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  equations,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  equations,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    equations,    y0.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	16	None	replace
38	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  equations,  y.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  equations,  y.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  equations,  y.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    equations,    y0.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  ';'  expected	16	None	replace
39	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  equations,  c.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  equations,  c.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  equations,  c.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    equations,    y0.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	16	None	replace
40	[BUG]  [BUGGY]  filteredNextT  =  equations.getNext()  +  stepStart;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getNext()  +  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getNext()  +  stepStart;	  filteredNextT    =    equations.getNext();    	non-compiled	[CE]  not  a  statement	24	None	replace
41	[BUG]  [BUGGY]  filteredNextT  =  interpolator.getNext();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  interpolator.getNext();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  interpolator.getNext();	  filteredNextT    =    equations.getNext();    	non-compiled	[CE]  not  a  statement	24	None	replace
42	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  y0,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  y0,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  y0,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    t,    equations.getFirstMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	13	None	replace
43	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y1,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y1,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y1,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    t,    equations.getFirstMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	13	None	replace
44	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  stages,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  stages,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  stages,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    stages,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  ';'  expected	50	None	replace
45	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  stages,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  stages,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  stages,  equations.getFirstMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    stages,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  ';'  expected	50	None	replace
46	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)protocol.clone();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)protocol.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)protocol.clone();	  final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)compiler.clone();    	non-compiled	[CE]  ';'  expected	31	None	replace
47	[BUG]  [BUGGY]  filteredNextT  =  equations.getThreshold()  +  1;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getThreshold()  +  1;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getThreshold()  +  1;	  filteredNextT    =    equations.getThreshold();    	non-compiled	[CE]  ';'  expected	26	None	replace
48	[BUG]  [BUGGY]  filteredNextT  =  equations.getThreshold()  +  stepStart;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getThreshold()  +  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getThreshold()  +  stepStart;	  filteredNextT    =    equations.getThreshold();    	non-compiled	[CE]  ';'  expected	26	None	replace
49	[BUG]  [BUGGY]  filteredNextT  =  equations.getThreshold()  +  2;  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getThreshold()  +  2;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getThreshold()  +  2;	  filteredNextT    =    equations.getThreshold();    	non-compiled	[CE]  ';'  expected	26	None	replace
50	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  b,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  b,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  b,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  ';'  expected	2	None	replace
51	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y1,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y1,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y1,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	2	None	replace
52	[BUG]  [BUGGY]  final  double[][]  xDotK  =  new  double[stages][y.length];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  xDotK  =  new  double[stages][y.length];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  xDotK  =  new  double[stages][y.length];	  final    double[][]    yDotK    =    new    double[stages][x.length];    	non-compiled	[CE]  ';'  expected	48	None	replace
53	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  steps,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  steps,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  steps,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y0,    stages,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  ';'  expected	53	None	replace
54	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  stages,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  stages,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  stages,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y0,    stages,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  ';'  expected	53	None	replace
55	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)factor.clone();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)factor.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)factor.clone();	  final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)processor.clone();    	non-compiled	[CE]  ';'  expected	74	None	replace
56	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getSecondaryMapper());  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getSecondaryMapper());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getSecondaryMapper());	  interpolator.reinitialize(this,    y0,    t,    equations.getSecondaryMapper(),    equations.getPrimaryMapper());    	non-compiled	[CE]  ';'  expected	15	None	replace
57	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());	  interpolator.reinitialize(this,    y0,    t,    equations.getSecondaryMapper(),    equations.getPrimaryMapper());    	non-compiled	[CE]  ';'  expected	15	None	replace
58	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getPrevious();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getPrevious();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getPrevious();	  filteredNextIsLast    =    equations.getNext();    	non-compiled	[CE]  ';'  expected	71	None	replace
59	[BUG]  [BUGGY]  filteredNextT  =  equations.getNegativeState(t);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getNegativeState(t);  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getNegativeState(t);	  filteredNextT    =    equations.getNegativeState();    	non-compiled	[CE]  ';'  expected	25	None	replace
60	[BUG]  [BUGGY]  filteredNextT  =  equations.getNegative();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getNegative();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getNegative();	  filteredNextT    =    equations.getNegativeState();    	non-compiled	[CE]  ';'  expected	25	None	replace
61	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  y,  stepStart);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  initIntegration(equations.getTime(),  y,  stepStart);  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	initIntegration(equations.getTime(),  y,  stepStart);	  initIntegration(equations.getTime(),    y,    t);    	non-compiled	[CE]  ';'  expected	33	None	replace
62	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  stepStart,  y,  t);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  initIntegration(equations.getTime(),  stepStart,  y,  t);  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	initIntegration(equations.getTime(),  stepStart,  y,  t);	  initIntegration(equations.getTime(),    y,    t);    	non-compiled	[CE]  ';'  expected	33	None	replace
63	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    equations,    y0.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  ';'  expected	3	None	replace
64	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  y.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  y.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  y.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    equations,    y0.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  ';'  expected	3	None	replace
65	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][x.length  +  3];  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][x.length  +  3];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][x.length  +  3];	  final    double[][]    yDotK    =    new    double[stages][y.length    +    3];    	non-compiled	[CE]  ';'  expected	45	None	replace
66	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getFirstTime()  *  stepStart;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getFirstTime()  *  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getFirstTime()  *  stepStart;	  filteredNextIsLast    =    equations.getFirstTime()    +    stepStart;    	non-compiled	[CE]  ';'  expected	29	None	replace
67	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][y.length  +  1];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][y.length  +  1];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[c.length][y.length  +  1];	  final    double[][]    yDotK    =    new    double[c.length][y.length];    	non-compiled	[CE]  ';'  expected	43	None	replace
68	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][y0.length];  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][y0.length];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[c.length][y0.length];	  final    double[][]    yDotK    =    new    double[c.length][y.length];    	non-compiled	[CE]  ';'  expected	43	None	replace
69	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[b.length][y.length];  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[b.length][y.length];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[b.length][y.length];	  final    double[][]    yDotK    =    new    double[c.length][y.length];    	non-compiled	[CE]  not  a  statement	43	None	replace
70	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  stepStart,  yDotK,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  stepStart,  yDotK,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  stepStart,  yDotK,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    equations,    c,    yDotK,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  ';'  expected	12	None	replace
71	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  stepStart,  c,  yDotK,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  stepStart,  c,  yDotK,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  stepStart,  c,  yDotK,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    equations,    c,    yDotK,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	12	None	replace
72	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  equations,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  equations,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  equations,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	70	None	replace
73	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());	  Interpolator.reinitialize(this,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	70	None	replace
74	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getNextState();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getNextState();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getNextState();	  filteredNextIsLast    =    equations.getPreviousState();    	non-compiled	[CE]  not  a  statement	67	None	replace
75	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getSecondState();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getSecondState();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getSecondState();	  filteredNextIsLast    =    equations.getPreviousState();    	non-compiled	[CE]  not  a  statement	67	None	replace
76	[BUG]  [BUGGY]  final  double[][]  yDotk  =(double[][])c.clone();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotk  =(double[][])c.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotk  =(double[][])c.clone();	  final    double[][]    yDotk    =(double[][])stages.clone();    	non-compiled	[CE]  not  a  statement	57	None	replace
77	[BUG]  [BUGGY]  final  double[][]  yDotk  =(double[][])steps.clone();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotk  =(double[][])steps.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotk  =(double[][])steps.clone();	  final    double[][]    yDotk    =(double[][])stages.clone();    	non-compiled	[CE]  not  a  statement	57	None	replace
78	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  y,  stepStart,  t);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  initIntegration(equations.getTime(),  y,  stepStart,  t);  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	initIntegration(equations.getTime(),  y,  stepStart,  t);	  initIntegration(equations.getTime(),    stepStart,    t);    	non-compiled	[CE]  not  a  statement	34	None	replace
79	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  stepStart,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  stepStart,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  stepStart,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    equations,    y0,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	40	None	replace
80	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  stepStart,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  stepStart,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  stepStart,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    equations,    y0,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	40	None	replace
81	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  equations,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  equations,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  equations,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    equations,    y0,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	40	None	replace
82	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getSecondIsLast()  +  1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getSecondIsLast()  +  1;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getSecondIsLast()  +  1;	  filteredNextIsLast    =    equations.getSecondIsLast();    	non-compiled	[CE]  not  a  statement	37	None	replace
83	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getFirstIsLast();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getFirstIsLast();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getFirstIsLast();	  filteredNextIsLast    =    equations.getSecondIsLast();    	non-compiled	[CE]  not  a  statement	37	None	replace
84	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getSecondIsLast()  +  stepStart;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getSecondIsLast()  +  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getSecondIsLast()  +  stepStart;	  filteredNextIsLast    =    equations.getSecondIsLast();    	non-compiled	[CE]  not  a  statement	37	None	replace
85	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	56	None	replace
86	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  y,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  y,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  y,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	56	None	replace
87	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  c,  y,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  c,  y,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  c,  y,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	56	None	replace
88	[BUG]  [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.copy();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.copy();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =(double[][])interpolator.copy();	  final    double[][]    yDotK    =(double[][])interpolator.clone();    	non-compiled	[CE]  not  a  statement	52	None	replace
89	[BUG]  [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.remove();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.remove();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =(double[][])interpolator.remove();	  final    double[][]    yDotK    =(double[][])interpolator.clone();    	non-compiled	[CE]  not  a  statement	52	None	replace
90	[BUG]  [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.cloneTree();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.cloneTree();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =(double[][])interpolator.cloneTree();	  final    double[][]    yDotK    =(double[][])interpolator.clone();    	non-compiled	[CE]  not  a  statement	52	None	replace
91	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getFirstTime()  *  stages;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getFirstTime()  *  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getFirstTime()  *  stages;	  filteredNextIsLast    =    equations.getFirstTime()    +    stages;    	non-compiled	[CE]  not  a  statement	51	None	replace
92	[BUG]  [BUGGY]  filteredNextT  =  equations.getNextIsLast();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getNextIsLast();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getNextIsLast();	  filteredNextT    =    equations.getNextState();    	non-compiled	[CE]  not  a  statement	61	None	replace
93	[BUG]  [BUGGY]  filteredNextT  =  equations.getNextStep();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getNextStep();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getNextStep();	  filteredNextT    =    equations.getNextState();    	non-compiled	[CE]  not  a  statement	61	None	replace
94	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[stages][c.length];  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  c  =  new  double[stages][c.length];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  c  =  new  double[stages][c.length];	  final    double[][]    yDotK    =    new    double[stages][c.length];    	non-compiled	[CE]  not  a  statement	42	None	replace
95	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][stages];  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][stages];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[c.length][stages];	  final    double[][]    yDotK    =    new    double[stages][c.length];    	non-compiled	[CE]  not  a  statement	42	None	replace
96	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  c,  yTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  c,  yTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  c,  yTmp,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    c,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	41	None	replace
97	[BUG]  [BUGGY]  final  double[][]  a  =(double[][])a.clone();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  a  =(double[][])a.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  a  =(double[][])a.clone();	  final    double[][]    yDotK    =(double[][])a.clone();    	non-compiled	[CE]  not  a  statement	22	None	replace
98	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)module.copy();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)module.copy();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)module.copy();	  final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)module.clone();    	non-compiled	[CE]  not  a  statement	68	None	replace
99	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    t,    equations.getSecondaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	73	None	replace
100	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    t,    equations.getSecondaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	73	None	replace
101	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  t.getSecondaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  t.getSecondaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  t.getSecondaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    t,    equations.getSecondaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	73	None	replace
102	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])c.clone();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  c  =(double[][])c.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  c  =(double[][])c.clone();	  final    double[][]    yDotK    =(double[][])c.clone();    	non-compiled	[CE]  not  a  statement	6	None	replace
103	[BUG]  [BUGGY]  final  double[][]  yDotK  =(double[][])c.copy();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =(double[][])c.copy();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =(double[][])c.copy();	  final    double[][]    yDotK    =(double[][])c.clone();    	non-compiled	[CE]  not  a  statement	6	None	replace
104	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  b,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  b,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  b,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y0,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	17	None	replace
105	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());	  Interpolator.reinitialize(this,    y0,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	17	None	replace
106	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getLastSegment();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getLastSegment();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getLastSegment();	  filteredNextIsLast    =    equations.getFirstState();    	non-compiled	[CE]  not  a  statement	65	None	replace
107	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getLastState();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getLastState();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getLastState();	  filteredNextIsLast    =    equations.getFirstState();    	non-compiled	[CE]  not  a  statement	65	None	replace
108	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  stepStart,  y0,  t);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  initIntegration(equations.getTime(),  stepStart,  y0,  t);  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	initIntegration(equations.getTime(),  stepStart,  y0,  t);	  initIntegration(equations.getTime(),    y0,    t);    	non-compiled	[CE]  not  a  statement	32	None	replace
109	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  steps,  t);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  initIntegration(equations.getTime(),  steps,  t);  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	initIntegration(equations.getTime(),  steps,  t);	  initIntegration(equations.getTime(),    y0,    t);    	non-compiled	[CE]  not  a  statement	32	None	replace
110	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  stages,  t);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  initIntegration(equations.getTime(),  stages,  t);  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	initIntegration(equations.getTime(),  stages,  t);	  initIntegration(equations.getTime(),    y0,    t);    	non-compiled	[CE]  not  a  statement	32	None	replace
111	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  equations,  y1,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  equations,  y1,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  equations,  y1,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y1,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	18	None	replace
112	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  equations,  t.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  equations,  t.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  equations,  t.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y1,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	18	None	replace
113	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getLast()  +  stepStart;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getLast()  +  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getLast()  +  stepStart;	  filteredNextIsLast    =    equations.getLast();    	non-compiled	[CE]  not  a  statement	28	None	replace
114	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getLast()  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getLast()  +  1;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getLast()  +  1;	  filteredNextIsLast    =    equations.getLast();    	non-compiled	[CE]  not  a  statement	28	None	replace
115	[BUG]  [BUGGY]  filteredNextT  =  equations.getLast();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getLast();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getLast();	  filteredNextT    =    equations.getFirst();    	non-compiled	[CE]  not  a  statement	62	None	replace
116	[BUG]  [BUGGY]  filteredNextT  =  equations.getFirst()  +  stepStart;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getFirst()  +  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getFirst()  +  stepStart;	  filteredNextT    =    equations.getFirst();    	non-compiled	[CE]  not  a  statement	62	None	replace
117	[BUG]  [BUGGY]  filteredNextT  =  equations.getFirst()  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getFirst()  +  1;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getFirst()  +  1;	  filteredNextT    =    equations.getFirst();    	non-compiled	[CE]  not  a  statement	62	None	replace
118	[BUG]  [BUGGY]  boolean  firstTime  =  isFirstTime()  ||  isLastTime();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  isFirstTime()  ||  isLastTime();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  isFirstTime()  ||  isLastTime();	  boolean    firstTime    =    isFirstTime();    	non-compiled	[CE]  not  a  statement	59	None	replace
119	[BUG]  [BUGGY]  boolean  firstTime  =  isFirstTime()  ||  isNextIsLast();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  isFirstTime()  ||  isNextIsLast();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  isFirstTime()  ||  isNextIsLast();	  boolean    firstTime    =    isFirstTime();    	non-compiled	[CE]  not  a  statement	59	None	replace
120	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getLast()  +  stages;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getLast()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getLast()  +  stages;	  filteredNextIsLast    =    equations.getLast();    	non-compiled	[CE]  not  a  statement	28	None	replace
121	[BUG]  [BUGGY]  interpolator.reinitialize(this,  c,  yTmp,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  c,  yTmp,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  c,  yTmp,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    yDotTmp,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	11	None	replace
122	[BUG]  [BUGGY]  filteredNextT  =  equations.getNegativeState()  +  stepStart;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getNegativeState()  +  stepStart;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getNegativeState()  +  stepStart;	  filteredNextT    =    equations.getNegativeState();    	non-compiled	[CE]  not  a  statement	25	None	replace
123	[BUG]  [BUGGY]  filteredNextT  =  equations.getNegativeState()  +  stages;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getNegativeState()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getNegativeState()  +  stages;	  filteredNextT    =    equations.getNegativeState();    	non-compiled	[CE]  not  a  statement	25	None	replace
124	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getSecondIsLast()  +  stages;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getSecondIsLast()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getSecondIsLast()  +  stages;	  filteredNextIsLast    =    equations.getSecondIsLast();    	non-compiled	[CE]  not  a  statement	37	None	replace
125	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getFirst()  +  stages;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getFirst()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getFirst()  +  stages;	  filteredNextIsLast    =    equations.getFirst();    	non-compiled	[CE]  not  a  statement	66	None	replace
126	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  c,  yDotK,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  c,  yDotK,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  c,  yDotK,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    t,    yDotK,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	69	None	replace
127	[BUG]  [BUGGY]  filteredNextT  =  equations.getFirst()  +  stages;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getFirst()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getFirst()  +  stages;	  filteredNextT    =    equations.getFirst();    	non-compiled	[CE]  not  a  statement	62	None	replace
128	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getLastSecond();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getLastSecond();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getLastSecond();	  filteredNextIsLast    =    equations.getFirstState();    	non-compiled	[CE]  not  a  statement	65	None	replace
129	[BUG]  [BUGGY]  boolean  firstTime  =  isLast()  ||  isLast();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  isLast()  ||  isLast();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  isLast()  ||  isLast();	  boolean    firstTime    =    isLast();    	non-compiled	[CE]  not  a  statement	60	None	replace
130	[BUG]  [BUGGY]  boolean  firstTime  =  getLastTime()  >  0;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  getLastTime()  >  0;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  getLastTime()  >  0;	  boolean    firstTime    =    getLastTime();    	non-compiled	[CE]  not  a  statement	44	None	replace
131	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	1	None	replace
132	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  t,  equations.getLastMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  t,  equations.getLastMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  t,  equations.getLastMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    t,    equations.getFirstMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	13	None	replace
133	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getSecond();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getSecond();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getSecond();	  filteredNextIsLast    =    equations.getNext();    	non-compiled	[CE]  not  a  statement	71	None	replace
134	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getSecondaryMapper());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getSecondaryMapper());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  t,  equations.getSecondaryMapper(),  equations.getSecondaryMapper());	  interpolator.reinitialize(this,    y0,    t,    equations.getSecondaryMapper(),    equations.getPrimaryMapper());    	non-compiled	[CE]  not  a  statement	15	None	replace
135	[BUG]  [BUGGY]  final  double[][]  xDotK  =  new  double[stages][x.length];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  xDotK  =  new  double[stages][x.length];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  xDotK  =  new  double[stages][x.length];	  final    double[][]    yDotK    =    new    double[stages][x.length];    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
136	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    equations,    y0.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
137	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  c,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  c,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  c,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    y0,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
138	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getFirstTime()  /  stages;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getFirstTime()  /  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getFirstTime()  /  stages;	  filteredNextIsLast    =    equations.getFirstTime()    +    stages;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
139	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)super.clone();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)super.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)super.clone();	  final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)super.clone();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
140	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  c,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  c,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  c,  y0,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    equations,    c,    yDotK,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
141	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getNextIsLast()  +  stages;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getNextIsLast()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getNextIsLast()  +  stages;	  filteredNextIsLast    =    equations.getNextIsLast();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
142	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][y.length).clone();  [CE]  ']'  expected  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][y.length).clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][y.length).clone();	  final    double[][]    yDotK    =    new    double[stages][y.length    +    3].clone();    	non-compiled	[CE]  ']'  expected	20	None	replace
143	[BUG]  [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.getStep();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.getStep();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =(double[][])interpolator.getStep();	  final    double[][]    yDotK    =(double[][])interpolator.clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
144	[BUG]  [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.getTicks();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.getTicks();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =(double[][])interpolator.getTicks();	  final    double[][]    yDotK    =(double[][])interpolator.clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
145	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[stages][c.length  +  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  c  =  new  double[stages][c.length  +  1];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  c  =  new  double[stages][c.length  +  1];	  final    double[][]    yDotK    =    new    double[stages][c.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
146	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y1,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y1,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y1,  t,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());	  Interpolator.reinitialize(this,    y1,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
147	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y1,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
148	[BUG]  [BUGGY]  final  double[][]  yDotK  =(double[][])entries.clone();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =(double[][])entries.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =(double[][])entries.clone();	  final    double[][]    yDotK    =(double[][])steps.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
149	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  x0,  y1,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  x0,  y1,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  x0,  y1,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    x0,    yDotK,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
150	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getTime()  /  stages;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getTime()  /  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getTime()  /  stages;	  filteredNextIsLast    =    equations.getTime()    +    stages;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
151	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)this.stages.copy();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)this.stages.copy();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)this.stages.copy();	  Final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)    prototype.copy();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
152	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)type.clone();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)type.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)type.clone();	  Final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)    prototype.copy();    	non-compiled	[CE]  not  a  statement	72	None	replace
153	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  stages,  equations.getCompleteState(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  stages,  equations.getCompleteState(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  stages,  equations.getCompleteState(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    stages,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	50	None	replace
154	[BUG]  [BUGGY]  filteredNextT  =  equations.getThreshold()  +  stages;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getThreshold()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getThreshold()  +  stages;	  filteredNextT    =    equations.getThreshold();    	non-compiled	[CE]  not  a  statement	26	None	replace
155	[BUG]  [BUGGY]  final  double[][]  yDotk  =(double[][])interpolator.clone();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotk  =(double[][])interpolator.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotk  =(double[][])interpolator.clone();	  final    double[][]    yDotk    =(double[][])stages.clone();    	non-compiled	[CE]  not  a  statement	57	None	replace
156	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  stages,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  stages,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  stages,  equations.getSecondaryMapper(),  equations.getPrimaryMapper());	  Interpolator.reinitialize(this,    y0,    stages,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	53	None	replace
157	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  stages,  equations.getCompleteState(),  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  stages,  equations.getCompleteState(),  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  stages,  equations.getCompleteState(),  equations.getSecondaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y0,    stages,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	53	None	replace
158	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	70	None	replace
159	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][x.length].clone();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][x.length].clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][x.length].clone();	  final    double[][]    yDotK    =    new    double[stages][y.length].clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
160	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  y,  stages);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  initIntegration(equations.getTime(),  y,  stages);  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	initIntegration(equations.getTime(),  y,  stages);	  initIntegration(equations.getTime(),    y,    t);    	non-compiled	[CE]  not  a  statement	33	None	replace
161	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  c,  y,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  c,  y,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  c,  y,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	56	None	replace
162	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  c,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  c,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  c,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    c,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	41	None	replace
163	[BUG]  [BUGGY]  initIntegration(equations.getTime(),  y0,  stepStart);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  initIntegration(equations.getTime(),  y0,  stepStart);  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	initIntegration(equations.getTime(),  y0,  stepStart);	  initIntegration(equations.getTime(),    y0,    t);    	non-compiled	[CE]  not  a  statement	32	None	replace
164	[BUG]  [BUGGY]  filteredNextT  =  equations.getPrevious();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getPrevious();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getPrevious();	  filteredNextT    =    equations.getNext();    	non-compiled	[CE]  not  a  statement	24	None	replace
165	[BUG]  [BUGGY]  filteredNextT  =  equations.getNext()  +  stages;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getNext()  +  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getNext()  +  stages;	  filteredNextT    =    equations.getNext();    	non-compiled	[CE]  not  a  statement	24	None	replace
166	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y1,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y1,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y1,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y1,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	18	None	replace
167	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  t,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  t,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  t,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    c,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  not  a  statement	41	None	replace
168	[BUG]  [BUGGY]  Final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)prototype.clone();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)prototype.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)prototype.clone();	  Final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)    prototype.copy();    	non-compiled	[CE]  ';'  expected	72	None	replace
169	[BUG]  [BUGGY]  Final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)protocol.clone();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)protocol.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)protocol.clone();	  Final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)    prototype.copy();    	non-compiled	[CE]  ';'  expected	72	None	replace
170	[BUG]  [BUGGY]  boolean  firstTime  =  getLastTime()  >  error;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  getLastTime()  >  error;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  getLastTime()  >  error;	  boolean    firstTime    =    getLastTime();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
171	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
172	[BUG]  [BUGGY]  interpolator.reinitialize(this,  c,  y,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  c,  y,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  c,  y,  stages,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
173	[BUG]  [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.evaluate(c,  y0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =(double[][])interpolator.evaluate(c,  y0);  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =(double[][])interpolator.evaluate(c,  y0);	  final    double[][]    yDotK    =(double[][])interpolator.clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
174	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  yDotK  =(RungeKuttaStepInterpolator)module.clone();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  yDotK  =(RungeKuttaStepInterpolator)module.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  yDotK  =(RungeKuttaStepInterpolator)module.clone();	  final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)module.clone();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
175	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  module  =(RungeKuttaStepInterpolator)module.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  module  =(RungeKuttaStepInterpolator)module.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  module  =(RungeKuttaStepInterpolator)module.clone();	  final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)module.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
176	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getLastSegmented();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getLastSegmented();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getLastSegmented();	  filteredNextIsLast    =    equations.getFirstState();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
177	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  4].clone();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  4].clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][c.length  +  4].clone();	  final    double[][]    yDotK    =    new    double[stages][c.length    +    1].clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
178	[BUG]  [BUGGY]  interpolator.reinitialize(this,  t,  y,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  t,  y,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  t,  y,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    t,    yDotK,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
179	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)processor.remove();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)processor.remove();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  interpolator  =(RungeKuttaStepInterpolator)processor.remove();	  final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)processor.copy();    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
180	[BUG]  [BUGGY]  filteredNextT  =  equations.getThreshold()  *  stages;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getThreshold()  *  stages;  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getThreshold()  *  stages;	  filteredNextT    =    equations.getThreshold();    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
181	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  x0,  ytK,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  x0,  ytK,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  x0,  ytK,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    x0,    yDotK,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
182	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][y.length],  c.length].clone();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][y.length],  c.length].clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][y.length],  c.length].clone();	  final    double[][]    yDotK    =    new    double[stages][y.length].clone();    	non-compiled	[CE]  ';'  expected	58	None	replace
183	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  3];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  3];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][c.length  +  3];	  final    double[][]    yDotK    =    new    double[stages][c.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
184	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  4];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][c.length  +  4];  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =  new  double[stages][c.length  +  4];	  final    double[][]    yDotK    =    new    double[stages][c.length    +    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
185	[BUG]  [BUGGY]  filteredNextIsLast  =  equations.getPreviousIsLast(stages);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextIsLast  =  equations.getPreviousIsLast(stages);  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextIsLast  =  equations.getPreviousIsLast(stages);	  filteredNextIsLast    =    equations.getPreviousIsLast();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
186	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y,  t,  equations.getFirstMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
187	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y,  c,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
188	[BUG]  [BUGGY]  final  double[][]  yDotK  =(double[][])h.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  double[][]  yDotK  =(double[][])h.clone();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  double[][]  yDotK  =(double[][])h.clone();	  final    double[][]    yDotK    =(double[][])b.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
189	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  y0,  c,  equations.getSecondaryMapper(),  equations.getSecondaryMappers());	  Interpolator.reinitialize(this,    y0,    c,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
190	[BUG]  [BUGGY]  filteredNextT  =  equations.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  filteredNextT  =  equations.getParent();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	filteredNextT  =  equations.getParent();	  filteredNextT    =    equations.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
191	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)  prototype.copy();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)  prototype.copy();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)  prototype.copy();	  final    RungeKuttaStepInterpolator    interpolator    =(RungeKuttaStepInterpolator)super.copy();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
192	[BUG]  [BUGGY]  interpolator.reinitialize(this,  y0,  c,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  y0,  c,  equations.getFirstMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  y0,  c,  equations.getFirstMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    y0,    t,    equations.getFirstMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
193	[BUG]  [BUGGY]  boolean  firstTime  =  isIsLast();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  isIsLast();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  isIsLast();	  boolean    firstTime    =    isLast();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
194	[BUG]  [BUGGY]  boolean  firstTime  =  isFirstTime()  ||  isLast();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  boolean  firstTime  =  isFirstTime()  ||  isLast();  [BUGGY]      interpolator.reinitialize(this,  yTmp,  yDotK,  forward,        equations.getPrimaryMapper(),  equations.getSecondaryMappers());  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	boolean  firstTime  =  isFirstTime()  ||  isLast();	  boolean    firstTime    =    isFirstTime();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
195	[BUG]  [BUGGY]  Interpolator.reinitialize(this,  c,  yDotTmp,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  Interpolator.reinitialize(this,  c,  yDotTmp,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	Interpolator.reinitialize(this,  c,  yDotTmp,  t,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    c,    yDotTmp,    t,    equations.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
196	[BUG]  [BUGGY]  interpolator.reinitialize(this,  equations,  c.getPrimaryMapper(),  equations.getSecondaryMappers());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();      [BUGGY]  interpolator.reinitialize(this,  equations,  c.getPrimaryMapper(),  equations.getSecondaryMappers());  [BUGGY]      equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  doublehNew=  0;  boolean  firstTime  =  true;  initIntegration(equations.getTime(),  y0,  t);    [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	208	209	1	replace	interpolator.reinitialize(this,  equations,  c.getPrimaryMapper(),  equations.getSecondaryMappers());	  interpolator.reinitialize(this,    equations,    y0.getPrimaryMapper(),    equations.getSecondaryMappers());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
