projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208interpolator.reinitialize(this,yTmp,yDotK,forward,equations.getPrimaryMapper(),equations.getSecondaryMappers());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208interpolator.reinitialize(this,y0,yDotK,equations.getPrimaryMapper(),equations.getSecondaryMappers());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208interpolator.reinitialize(this,y0,yDotTmp,equations.getPrimaryMapper(),equations.getSecondaryMappers());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208interpolator.reinitialize(this,y0,t,equations.getPrimaryMapper(),equations.getSecondaryMappers());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208Interpolator.reinitialize(this,y0,yDotK,equations.getPrimaryMapper(),equations.getSecondaryMappers());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208finalRungeKuttaStepInterpolatorinterpolator=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208finalRungeKuttaStepInterpolatorinterpolator=(RungeKuttaStepInterpolator)prototype.clone();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208finaldouble[][]yDotK=newdouble[stages][y.length+1];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208finaldouble[][]yDotK=(double[][])stages.clone();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208finaldouble[][]yDotK=newdouble[stages][y.length];
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208finaldouble[][]yDotK=newdouble[stages][y.length+1].clone();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208finaldouble[][]yDotK=(double[][])scale.clone();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208interpolator.reinitialize(this,y0,yTmp,equations.getPrimaryMapper(),equations.getSecondaryMappers());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208interpolator.reinitialize(this,y0,yDotK,t,equations.getPrimaryMapper(),equations.getSecondaryMappers());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208interpolator.reinitialize(this,c,yDotK,t,equations.getPrimaryMapper(),equations.getSecondaryMappers());
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208filteredNextIsLast=equations.getCompleteState();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208filteredNextT=equations.getCompleteState();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208filteredNextIsLast=equations.getFirstTime();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208filteredNextIsLast=equations.getTime();
projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java208booleanfirstTime=getFirstTime();
