bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sanityChecks(t,  equations,  c);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  equations,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  equations,  c);	  sanityChecks(equations,    c);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,double[])	6	None	replace
2	[BUG]  [BUGGY]  sanityChecks(equations,  t,  c);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  t,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  t,  c);	  sanityChecks(equations,    c);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double,double[])	6	None	replace
3	[BUG]  [BUGGY]  sanityChecks(c,  equations);  [CE]  no  suitable  method  found  for  sanityChecks(double[],ExpandableStatefulODE)  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(c,  equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(c,  equations);	  sanityChecks(equations,    c);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],ExpandableStatefulODE)	6	None	replace
4	[BUG]  [BUGGY]  sanityChecks(t,  equations.getMask(),  scaledH);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  equations.getMask(),  scaledH);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  equations.getMask(),  scaledH);	  sanityChecks(t,    equations.getMask());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
5	[BUG]  [BUGGY]  t  =  equations.getCompleteState(t,  c);  [CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCompleteState(t,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCompleteState(t,  c);	  t    =    equations.getCompleteState(t);    	non-compiled	[CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	44	None	replace
6	[BUG]  [BUGGY]  t  =  equations.getCompleteState(equations,  t);  [CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCompleteState(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCompleteState(equations,  t);	  t    =    equations.getCompleteState(t);    	non-compiled	[CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	44	None	replace
7	[BUG]  [BUGGY]  t  =  equations.getCompleteState(t,  error);  [CE]  cannot  find  symbol  error  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCompleteState(t,  error);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCompleteState(t,  error);	  t    =    equations.getCompleteState(t);    	non-compiled	[CE]  cannot  find  symbol  error	44	None	replace
8	[BUG]  [BUGGY]  t  =  equations.getCompleteState(t,  scale);  [CE]  cannot  find  symbol  scale  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCompleteState(t,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCompleteState(t,  scale);	  t    =    equations.getCompleteState(t);    	non-compiled	[CE]  cannot  find  symbol  scale	44	None	replace
9	[BUG]  [BUGGY]  sanityChecks(t,  equations.toString(),  c);  [CE]  no  suitable  method  found  for  sanityChecks(double,String,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  equations.toString(),  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  equations.toString(),  c);	  sanityChecks(t,    equations.toString());    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,String,double[])	11	None	replace
10	[BUG]  [BUGGY]  sanityChecks(t,  equations.toString(),  error);  [CE]  cannot  find  symbol  error  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  equations.toString(),  error);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  equations.toString(),  error);	  sanityChecks(t,    equations.toString());    	non-compiled	[CE]  cannot  find  symbol  error	11	None	replace
11	[BUG]  [BUGGY]  sanityChecks(equivalence,  t);  [CE]  cannot  find  symbol  equivalence  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equivalence,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equivalence,  t);	          sanityChecks(equations,    t);    sanityChecks(equals,    t);    	non-compiled	[CE]  cannot  find  symbol  equivalence	16	None	replace
12	[BUG]  [BUGGY]  sanityChecks(equations,  Equations.toString());  [CE]  cannot  find  symbol  Equations  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  Equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  Equations.toString());	  sanityChecks(t,    Equations.toString());    	non-compiled	[CE]  cannot  find  symbol  Equations	12	None	replace
13	[BUG]  [BUGGY]  setEquations(equations,  Equations.EMPTY);  [CE]  cannot  find  symbol  Equations  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(equations,  Equations.EMPTY);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(equations,  Equations.EMPTY);	  setEquations(t,    Equations.EMPTY);    	non-compiled	[CE]  cannot  find  symbol  Equations	30	None	replace
14	[BUG]  [BUGGY]  t  =  equations.getCount()  +  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCount()  +  1;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCount()  +  1;	  t    =    equations.getCount();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
15	[BUG]  [BUGGY]  t  =  equations.getCount()  -  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCount()  -  1;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCount()  -  1;	  t    =    equations.getCount();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
16	[BUG]  [BUGGY]  sanityChecks(t,  a);  [CE]  no  suitable  method  found  for  sanityChecks(double,double[][])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  a);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  a);	  sanityChecks(a,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,double[][])	3	None	replace
17	[BUG]  [BUGGY]  sanityChecks(a,  t,  c);  [CE]  no  suitable  method  found  for  sanityChecks(double[][],double,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(a,  t,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(a,  t,  c);	  sanityChecks(a,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[][],double,double[])	3	None	replace
18	[BUG]  [BUGGY]  sanityChecks(a,  t,  scale);  [CE]  cannot  find  symbol  scale  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(a,  t,  scale);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(a,  t,  scale);	  sanityChecks(a,    t);    	non-compiled	[CE]  cannot  find  symbol  scale	3	None	replace
19	[BUG]  [BUGGY]  setEquations(stages,  t,  stages);  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(stages,  t,  stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(stages,  t,  stages);	  setEquations(equations,    t,    stages);    	non-compiled	[CE]  cannot  find  symbol  stages	32	None	replace
20	[BUG]  [BUGGY]  safeSanityChecks(equations,  t);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  safeSanityChecks(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	safeSanityChecks(equations,  t);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
21	[BUG]  [BUGGY]  Set  <  E>  setEquations  =  Sets.newHashSet(equations);  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  Set  <  E>  setEquations  =  Sets.newHashSet(equations);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	Set  <  E>  setEquations  =  Sets.newHashSet(equations);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
22	[BUG]  [BUGGY]  setEquations(b,  c);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(b,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(b,  c);	  setEquations(c);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	19	None	replace
23	[BUG]  [BUGGY]  setEquations(t,  c);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(t,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(t,  c);	  setEquations(c);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	19	None	replace
24	[BUG]  [BUGGY]  setEquations(b,  t);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(b,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(b,  t);	  setEquations(c);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	19	None	replace
25	[BUG]  [BUGGY]  sanityChecks(c,  t.toString());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(c,  t.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(c,  t.toString());	  sanityChecks(stages,    t.toString());    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
26	[BUG]  [BUGGY]  sanityChecks(c.length,  t.toString());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(c.length,  t.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(c.length,  t.toString());	  sanityChecks(stages,    t.toString());    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
27	[BUG]  [BUGGY]  sanityChecks(t,  s.toString());  [CE]  cannot  find  symbol  s  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  s.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  s.toString());	  sanityChecks(stages,    t.toString());    	non-compiled	[CE]  cannot  find  symbol  s	34	None	replace
28	[BUG]  [BUGGY]  sanityChecks(t,  c);  [CE]  no  suitable  method  found  for  sanityChecks(double,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  c);	  sanityChecks(t,    equals);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,double[])	4	None	replace
29	[BUG]  [BUGGY]  sanityChecks(t,  c.length);  [CE]  no  suitable  method  found  for  sanityChecks(double,int)  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  c.length);	  sanityChecks(t,    equals);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,int)	4	None	replace
30	[BUG]  [BUGGY]  sanityChecks(b,  t);  [CE]  no  suitable  method  found  for  sanityChecks(double[],double)  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(b,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(b,  t);	  sanityChecks(stage,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],double)	47	None	replace
31	[BUG]  [BUGGY]  sanityChecks(equates,  t);  [CE]  cannot  find  symbol  equates  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equates,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equates,  t);	  sanityChecks(t,    equations);    	non-compiled	[CE]  cannot  find  symbol  equates	5	None	replace
32	[BUG]  [BUGGY]  sanityChecks(t,  equations,  forward);  [CE]  cannot  find  symbol  forward  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  equations,  forward);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  equations,  forward);	  sanityChecks(t,    equations);    	non-compiled	[CE]  cannot  find  symbol  forward	5	None	replace
33	[BUG]  [BUGGY]  setStandardEquations(c);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setStandardEquations(c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setStandardEquations(c);	  setStandardEquations(stages);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
34	[BUG]  [BUGGY]  setStandardEquations(equations);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setStandardEquations(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setStandardEquations(equations);	  setStandardEquations(stages);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
35	[BUG]  [BUGGY]  setStandardEquations(c.length);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setStandardEquations(c.length);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setStandardEquations(c.length);	  setStandardEquations(stages);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
36	[BUG]  [BUGGY]  sanityChecks(escapes,  t);  [CE]  cannot  find  symbol  escapes  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(escapes,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(escapes,  t);	  sanityChecks(equalations,    t);    	non-compiled	[CE]  cannot  find  symbol  escapes	27	None	replace
37	[BUG]  [BUGGY]  setEquations(t,  equations,  c);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(t,  equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(t,  equations,  c);	  setEquations(equations,    t,    c);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	54	None	replace
38	[BUG]  [BUGGY]  setEquations(t,  Equations.EQUATIONS,  c);  [CE]  cannot  find  symbol  Equations  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(t,  Equations.EQUATIONS,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(t,  Equations.EQUATIONS,  c);	  setEquations(equations,    t,    c);    	non-compiled	[CE]  cannot  find  symbol  Equations	54	None	replace
39	[BUG]  [BUGGY]  setEquations(t,  Equations.EMPTY_LIST,  c);  [CE]  cannot  find  symbol  Equations  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(t,  Equations.EMPTY_LIST,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(t,  Equations.EMPTY_LIST,  c);	  setEquations(equations,    t,    c);    	non-compiled	[CE]  cannot  find  symbol  Equations	54	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	13	1	add
41	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	13	1	add
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	13	1	add
43	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);  sanityChecks(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  t);	  	compilable	  [FE]  AssertionError  	13	1	add
44	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equaries,  t);  sanityChecks(equations,  t);  [CE]  cannot  find  symbol  equaries  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equaries,  t);  sanityChecks(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equaries,  t);  sanityChecks(equations,  t);	  	non-compiled	[CE]  cannot  find  symbol  equaries	13	None	add
45	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equals,  t);  sanityChecks(equals,  t);  [CE]  cannot  find  symbol  equals  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equals,  t);  sanityChecks(equals,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equals,  t);  sanityChecks(equals,  t);	  	non-compiled	[CE]  cannot  find  symbol  equals	13	None	add
46	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  c);  sanityChecks(equations,  t);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]            AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  c);  sanityChecks(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  c);  sanityChecks(equations,  t);	  	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	13	None	add
47	[BUG]  [BUGGY]  sanityChecks(equations,  a);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[][])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  a);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  a);	  sanityChecks(a,    equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[][])	46	None	replace
48	[BUG]  [BUGGY]  sanityChecks(a,  equations,  t);  [CE]  no  suitable  method  found  for  sanityChecks(double[][],ExpandableStatefulODE,double)  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(a,  equations,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(a,  equations,  t);	  sanityChecks(a,    equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[][],ExpandableStatefulODE,double)	46	None	replace
49	[BUG]  [BUGGY]  sanityChecks(a,  t,  equations);  [CE]  no  suitable  method  found  for  sanityChecks(double[][],double,ExpandableStatefulODE)  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(a,  t,  equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(a,  t,  equations);	  sanityChecks(a,    equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[][],double,ExpandableStatefulODE)	46	None	replace
50	[BUG]  [BUGGY]  sanityChecks(b,  c,  t);  [CE]  no  suitable  method  found  for  sanityChecks(double[],double[],double)  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(b,  c,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(b,  c,  t);	  sanityChecks(c,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],double[],double)	23	None	replace
51	[BUG]  [BUGGY]  sanityChecks(equations,  c,  t);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[],double)  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  c,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  c,  t);	  sanityChecks(c,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[],double)	23	None	replace
52	[BUG]  [BUGGY]  nextIsLast  =  false;  [CE]  cannot  find  symbol  nextIsLast  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  nextIsLast  =  false;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	nextIsLast  =  false;	  shedNextIsLast    =    true;    	non-compiled	[CE]  cannot  find  symbol  nextIsLast	9	None	replace
53	[BUG]  [BUGGY]  t  =  equations.getCompleteState()  +  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCompleteState()  +  2;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCompleteState()  +  2;	  t    =    equations.getCompleteState()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	21	None	replace
54	[BUG]  [BUGGY]  double  filteredNextIsLast  =  false;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  double  filteredNextIsLast  =  false;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	double  filteredNextIsLast  =  false;	  double    filteredNextIsLast    =    true;    	non-compiled	[CE]  incompatible  types	42	None	replace
55	[BUG]  [BUGGY]  Double  filteredNextIsLast  =  false;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  Double  filteredNextIsLast  =  false;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	Double  filteredNextIsLast  =  false;	  double    filteredNextIsLast    =    true;    	non-compiled	[CE]  incompatible  types	42	None	replace
56	[BUG]  [BUGGY]  setEquations(t,  c,  equations);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(t,  c,  equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(t,  c,  equations);	  setEquations(t,    equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	29	None	replace
57	[BUG]  [BUGGY]  setEquations(t,  equations,  c.length);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(t,  equations,  c.length);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(t,  equations,  c.length);	  setEquations(t,    equations);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	29	None	replace
58	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	52	2	add
59	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	52	2	add
60	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	52	2	add
61	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	52	2	add
62	[BUG]  [BUGGY]  setEquations(t,  sanityChecks);  [CE]  cannot  find  symbol  sanityChecks  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(t,  sanityChecks);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(t,  sanityChecks);	  setEquations(t);    	non-compiled	[CE]  cannot  find  symbol  sanityChecks	20	None	replace
63	[BUG]  [BUGGY]  setEquivalences(t);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquivalences(t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquivalences(t);	  setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
64	[BUG]  [BUGGY]  setEquivalences(equations);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquivalences(equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquivalences(equations);	  setEquations(equivalences);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
65	[BUG]  [BUGGY]  sanityChecks(t,  scale);  [CE]  cannot  find  symbol  scale  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  scale);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  scale);	  sanityChecks(t,    Equations);    	non-compiled	[CE]  cannot  find  symbol  scale	28	None	replace
66	[BUG]  [BUGGY]  sanityChecks(equations,  stages);  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  stages);	  sanityChecks(stages,    equations);    	non-compiled	[CE]  cannot  find  symbol  stages	33	None	replace
67	[BUG]  [BUGGY]  sanityChecks(equations,  stage);  [CE]  cannot  find  symbol  stage  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  stage);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  stage);	  sanityChecks(stages,    equations);    	non-compiled	[CE]  cannot  find  symbol  stage	33	None	replace
68	[BUG]  [BUGGY]  sanityChecks(equations,  equations.toString());  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,String)  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  equations.toString());	  sanityChecks(stages,    equations.toString());    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,String)	45	None	replace
69	[BUG]  [BUGGY]  sanityChecks(equations,  scale.toString());  [CE]  cannot  find  symbol  scale  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  scale.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  scale.toString());	  sanityChecks(stages,    equations.toString());    	non-compiled	[CE]  cannot  find  symbol  scale	45	None	replace
70	[BUG]  [BUGGY]  sanityChecks(c,  equations.toString());  [CE]  no  suitable  method  found  for  sanityChecks(double[],String)  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(c,  equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(c,  equations.toString());	  sanityChecks(stages,    equations.toString());    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[],String)	45	None	replace
71	[BUG]  [BUGGY]  This.filteredNextIsLast  =  true;  [CE]  cannot  find  symbol  This  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  This.filteredNextIsLast  =  true;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	This.filteredNextIsLast  =  true;	  this.filteredNextIsLast    =    true;    	non-compiled	[CE]  cannot  find  symbol  This	7	None	replace
72	[BUG]  [BUGGY]  sanityChecks(equations,  t,  equations.toString(),  forward);  [CE]  cannot  find  symbol  forward  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  t,  equations.toString(),  forward);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  t,  equations.toString(),  forward);	  sanityChecks(equations,    t,    equations.toString());    	non-compiled	[CE]  cannot  find  symbol  forward	35	None	replace
73	[BUG]  [BUGGY]  AssertionError.checkState(t  >  0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  AssertionError.checkState(t  >  0);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	AssertionError.checkState(t  >  0);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
74	[BUG]  [BUGGY]  Context.checkState(t  >  0);  [CE]  cannot  find  symbol  Context  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  Context.checkState(t  >  0);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	Context.checkState(t  >  0);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  Context	51	None	replace
75	[BUG]  [BUGGY]  setEquations(equations,  Equations.MULTIPLE);  [CE]  cannot  find  symbol  Equations  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(equations,  Equations.MULTIPLE);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(equations,  Equations.MULTIPLE);	  setEquations(t,    Equations.MULTIPLE);    	non-compiled	[CE]  cannot  find  symbol  Equations	31	None	replace
76	[BUG]  [BUGGY]  setEquations(t,  Equations.MULTIPLE,  c);  [CE]  cannot  find  symbol  Equations  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(t,  Equations.MULTIPLE,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(t,  Equations.MULTIPLE,  c);	  setEquations(t,    Equations.MULTIPLE);    	non-compiled	[CE]  cannot  find  symbol  Equations	31	None	replace
77	[BUG]  [BUGGY]  sanityChecks(t,  scaledH);  [CE]  cannot  find  symbol  scaledH  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  scaledH);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  scaledH);	  sanityChecks(t,    stages);    	non-compiled	[CE]  cannot  find  symbol  scaledH	24	None	replace
78	[BUG]  [BUGGY]  sanityChecks(equations,  equations.getMask(),  t);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  equations.getMask(),  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  equations.getMask(),  t);	  sanityChecks(equations,    equations.getMask());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
79	[BUG]  [BUGGY]  sanityCheck(equations,  t);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityCheck(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityCheck(equations,  t);	  sanityCheck(stages,    t);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
80	[BUG]  [BUGGY]  sanityCheck(c,  t);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityCheck(c,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityCheck(c,  t);	  sanityCheck(stages,    t);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
81	[BUG]  [BUGGY]  sanityCheck(t,  stages);  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityCheck(t,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityCheck(t,  stages);	  sanityCheck(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	37	None	replace
82	[BUG]  [BUGGY]  sanityCheck(equaries,  t);  [CE]  cannot  find  symbol  equaries  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityCheck(equaries,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityCheck(equaries,  t);	  sanityCheck(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  equaries	37	None	replace
83	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	2	add
84	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	2	add
85	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	2	add
86	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(t  >  0)  {  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	49	2	add
87	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	compilable	  [FE]  NullPointerException  	14	9	replace
88	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	compilable	  [FE]  NullPointerException  	14	9	replace
89	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	compilable	  [FE]  IllegalArgumentException  	14	9	replace
90	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	compilable	  [FE]  IllegalArgumentException  	14	9	replace
91	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	non-compiled	[CE]  constructor  MathIllegalArgumentException  in  class  MathIllegalArgumentException  cannot  be  applied  to  given  types;	14	None	replace
92	[BUG]  [BUGGY]  sanityChecks(equations,  b);  [CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  b);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  b);	  sanityChecks(equations,    scale);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(ExpandableStatefulODE,double[])	36	None	replace
93	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	sanityChecks(equations,  c.length);	  sanityChecks(equations,    scale);    	compilable	  [FE]  NullPointerException  	36	9	replace
94	[BUG]  [BUGGY]  sanityChecks(equations,  c.length);  [FE]  NullPointerException  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  c.length);	  sanityChecks(equations,    scale);    	compilable	  [FE]  NullPointerException  	36	9	replace
95	[BUG]  [BUGGY]  sanityChecks(equations,  c,  stages);  [CE]  cannot  find  symbol  stages  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  c,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  c,  stages);	  sanityChecks(equations,    c);    	non-compiled	[CE]  cannot  find  symbol  stages	6	None	replace
96	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [CE]  cannot  find  symbol  stages  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	39	None	replace
97	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [CE]  cannot  find  symbol  stages  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	39	None	replace
98	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	39	None	replace
99	[BUG]  [BUGGY]  sanityChecks(equations,  Equations);  [CE]  cannot  find  symbol  Equations  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  Equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  Equations);	  sanityChecks(t,    Equations);    	non-compiled	[CE]  cannot  find  symbol  Equations	28	None	replace
100	[BUG]  [BUGGY]  sanityChecks(equaries,  Equations);  [CE]  cannot  find  symbol  equaries  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equaries,  Equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equaries,  Equations);	  sanityChecks(t,    Equations);    	non-compiled	[CE]  cannot  find  symbol  equaries	28	None	replace
101	[BUG]  [BUGGY]  sanityChecks(equations,  t,  errors,  equations.toString());  [CE]  cannot  find  symbol  errors  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  t,  errors,  equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  t,  errors,  equations.toString());	  sanityChecks(equations,    t,    equations.toString());    	non-compiled	[CE]  cannot  find  symbol  errors	35	None	replace
102	[BUG]  [BUGGY]  setEquations(stages,  t,  platforms);  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(stages,  t,  platforms);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(stages,  t,  platforms);	  setEquations(equations,    t,    stages);    	non-compiled	[CE]  cannot  find  symbol  stages	32	None	replace
103	[BUG]  [BUGGY]  AssertionError.warning( "Unexpected  error: "  +  t);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  AssertionError.warning( "Unexpected  error: "  +  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	AssertionError.warning( "Unexpected  error: "  +  t);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
104	[BUG]  [BUGGY]  AssertionError.warning( "msg.bad.equation.stages ",  t);  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  AssertionError.warning( "msg.bad.equation.stages ",  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	AssertionError.warning( "msg.bad.equation.stages ",  t);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
105	[BUG]  [BUGGY]  double  filteredNextIsLast  =  null;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  double  filteredNextIsLast  =  null;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	double  filteredNextIsLast  =  null;	  double    filteredNextIsLast    =    true;    	non-compiled	[CE]  incompatible  types	42	None	replace
106	[BUG]  [BUGGY]  sanityChecks(t,  error);  [CE]  cannot  find  symbol  error  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  error);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  error);	  sanityChecks(t,    equals);    	non-compiled	[CE]  cannot  find  symbol  error	4	None	replace
107	[BUG]  [BUGGY]  sanityChecks(stages,  t,  equations.toString());  [CE]  cannot  find  symbol  stages  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(stages,  t,  equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(stages,  t,  equations.toString());	  sanityChecks(t,    equations.toString());    	non-compiled	[CE]  cannot  find  symbol  stages	11	None	replace
108	[BUG]  [BUGGY]  sanityChecks(t,  Equations.getMask());  [CE]  cannot  find  symbol  Equations  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  Equations.getMask());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  Equations.getMask());	  sanityChecks(equations,    t,    equations.getMask());    	non-compiled	[CE]  cannot  find  symbol  Equations	43	None	replace
109	[BUG]  [BUGGY]  AssertionError.warning( "msg.illegal.stage ",  t);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  AssertionError.warning( "msg.illegal.stage ",  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	AssertionError.warning( "msg.illegal.stage ",  t);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
110	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	18	None	replace
111	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  stages  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	18	None	replace
112	[BUG]  [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  System.arraycopy(stages,  0,  stages,  0,  stages.length);  }  [CE]  cannot  find  symbol  stages  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  System.arraycopy(stages,  0,  stages,  0,  stages.length);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(stages!=  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  System.arraycopy(stages,  0,  stages,  0,  stages.length);  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	18	None	replace
113	[BUG]  [BUGGY]  t  =  equations.getCompleteState(t,  forward);  [CE]  cannot  find  symbol  forward  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCompleteState(t,  forward);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCompleteState(t,  forward);	  t    =    equations.getCompleteState(t);    	non-compiled	[CE]  cannot  find  symbol  forward	44	None	replace
114	[BUG]  [BUGGY]  sanityChecks(equations,  Equations.MULTIPLE);  [CE]  cannot  find  symbol  Equations  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  Equations.MULTIPLE);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  Equations.MULTIPLE);	  setEquations(t,    Equations.MULTIPLE);    	non-compiled	[CE]  cannot  find  symbol  Equations	31	None	replace
115	[BUG]  [BUGGY]  SetEquations(equations,  Equations.MULTIPLE);  [CE]  cannot  find  symbol  Equations  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  SetEquations(equations,  Equations.MULTIPLE);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	SetEquations(equations,  Equations.MULTIPLE);	  setEquations(t,    Equations.MULTIPLE);    	non-compiled	[CE]  cannot  find  symbol  Equations	31	None	replace
116	[BUG]  [BUGGY]  AssertionError  t  =  equations.getError();  [CE]  variable  t  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  AssertionError  t  =  equations.getError();  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	AssertionError  t  =  equations.getError();	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    MathIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  t  is  already  defined  in  method  integrate(ExpandableStatefulODE,double)	51	None	replace
117	[BUG]  [BUGGY]  sanityChecks(equations,  scales.getMask());  [CE]  cannot  find  symbol  scales  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  scales.getMask());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  scales.getMask());	  sanityChecks(equations,    equations.getMask());    	non-compiled	[CE]  cannot  find  symbol  scales	2	None	replace
118	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(stages,  t);  sanityChecks(stages,  t);  [CE]  cannot  find  symbol  stages  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(stages,  t);  sanityChecks(stages,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(stages,  t);  sanityChecks(stages,  t);	  	non-compiled	[CE]  cannot  find  symbol  stages	13	None	add
119	[BUG]  [BUGGY]  sanityChecks(t,  equations,  stages);  [CE]  cannot  find  symbol  stages  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  equations,  stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  equations,  stages);	  sanityChecks(t,    equations);    	non-compiled	[CE]  cannot  find  symbol  stages	5	None	replace
120	[BUG]  [BUGGY]  This.filteredNextIsLast  =  false;  [CE]  cannot  find  symbol  This  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  This.filteredNextIsLast  =  false;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	This.filteredNextIsLast  =  false;	  this.filteredNextIsLast    =    false;    	non-compiled	[CE]  cannot  find  symbol  This	38	None	replace
121	[BUG]  [BUGGY]  sanityChecks(equations.toString());  [CE]  no  suitable  method  found  for  sanityChecks(String)  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations.toString());	  sanityChecks(t,    Equations.toString());    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(String)	12	None	replace
122	[BUG]  [BUGGY]  sanityChecks(stages,  Equations.toString());  [CE]  cannot  find  symbol  stages  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(stages,  Equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(stages,  Equations.toString());	  sanityChecks(t,    Equations.toString());    	non-compiled	[CE]  cannot  find  symbol  stages	12	None	replace
123	[BUG]  [BUGGY]  sanityChecks(stages,  error);  [CE]  cannot  find  symbol  stages  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(stages,  error);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(stages,  error);	          sanityChecks(equations,    t);    sanityChecks(equations,    error);    	non-compiled	[CE]  cannot  find  symbol  stages	15	None	replace
124	[BUG]  [BUGGY]  setEquations(equations,  c,  t);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(equations,  c,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(equations,  c,  t);	  setEquations(equations,    t,    c);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	54	None	replace
125	[BUG]  [BUGGY]  setEquations(c,  t,  equations);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(c,  t,  equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(c,  t,  equations);	  setEquations(equations,    t,    c);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	54	None	replace
126	[BUG]  [BUGGY]  setEquations(equations,  t,  c,  stages);  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(equations,  t,  c,  stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(equations,  t,  c,  stages);	  setEquations(equations,    t,    c);    	non-compiled	[CE]  cannot  find  symbol  stages	54	None	replace
127	[BUG]  [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  sanityChecks(equals,  t);  }  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  sanityChecks(equals,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  sanityChecks(equals,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equals,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	16	None	replace
128	[BUG]  [BUGGY]  sanityChecks(equations,  Equations.EMPTY);  [CE]  cannot  find  symbol  Equations  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  Equations.EMPTY);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  Equations.EMPTY);	  setEquations(t,    Equations.EMPTY);    	non-compiled	[CE]  cannot  find  symbol  Equations	30	None	replace
129	[BUG]  [BUGGY]  setEquations(t,  equations,  stages);  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(t,  equations,  stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(t,  equations,  stages);	  setEquations(t,    equations);    	non-compiled	[CE]  cannot  find  symbol  stages	29	None	replace
130	[BUG]  [BUGGY]  sanityCheck(a,  t);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityCheck(a,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityCheck(a,  t);	  sanityCheck(stages,    t);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
131	[BUG]  [BUGGY]  sanityChecks(a,  t,  b);  [CE]  no  suitable  method  found  for  sanityChecks(double[][],double,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(a,  t,  b);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(a,  t,  b);	  sanityChecks(a,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[][],double,double[])	3	None	replace
132	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  [CE]  cannot  find  symbol  equates  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equates,    t);    	non-compiled	[CE]  cannot  find  symbol  equates	48	None	replace
133	[BUG]  [BUGGY]  if(t  >  sanityChecks)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  [CE]  cannot  find  symbol  sanityChecks  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  sanityChecks)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  sanityChecks)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equates,    t);    	non-compiled	[CE]  cannot  find  symbol  sanityChecks	48	None	replace
134	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  equates  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equates,    t);    	non-compiled	[CE]  cannot  find  symbol  equates	48	None	replace
135	[BUG]  [BUGGY]  sanityChecks(a,  b,  equations);  [CE]  no  suitable  method  found  for  sanityChecks(double[][],double[],ExpandableStatefulODE)  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(a,  b,  equations);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(a,  b,  equations);	  sanityChecks(a,    equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double[][],double[],ExpandableStatefulODE)	46	None	replace
136	[BUG]  [BUGGY]  setEquations(equations,  c);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(equations,  c);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(equations,  c);	  setEquations(c);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	19	None	replace
137	[BUG]  [BUGGY]  setEquations(c,  t);  [CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(c,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(c,  t);	  setEquations(c);    	non-compiled	[CE]  method  setEquations  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	19	None	replace
138	[BUG]  [BUGGY]  sanityChecks(equaries,  t.getMask());  [CE]  cannot  find  symbol  equaries  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equaries,  t.getMask());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equaries,  t.getMask());	  sanityChecks(t,    equations.getMask());    	non-compiled	[CE]  cannot  find  symbol  equaries	1	None	replace
139	[BUG]  [BUGGY]  sanityChecks(equivalences,  t.getMask());  [CE]  cannot  find  symbol  equivalences  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equivalences,  t.getMask());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equivalences,  t.getMask());	  sanityChecks(t,    equations.getMask());    	non-compiled	[CE]  cannot  find  symbol  equivalences	1	None	replace
140	[BUG]  [BUGGY]  SettableStandardEquations(stages);  [CE]  cannot  find  symbol  stages  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  SettableStandardEquations(stages);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	SettableStandardEquations(stages);	  setStandardEquations(stages);    	non-compiled	[CE]  cannot  find  symbol  stages	55	None	replace
141	[BUG]  [BUGGY]  MutableState.checkSanityChecks(equations,  t);  [CE]  cannot  find  symbol  MutableState  [FE]    IllegalArgumentException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  MutableState.checkSanityChecks(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	MutableState.checkSanityChecks(equations,  t);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  MutableState	50	None	replace
142	[BUG]  [BUGGY]  MutableState.checkNotNull(stages);  [CE]  cannot  find  symbol  stages  [FE]      IllegalArgumentException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  MutableState.checkNotNull(stages);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	MutableState.checkNotNull(stages);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  stages	50	None	replace
143	[BUG]  [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  }  else  {  sanityChecks(equals,  t);  }  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  }  else  {  sanityChecks(equals,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  }  else  {  sanityChecks(equals,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equals,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	16	None	replace
144	[BUG]  [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  }  [CE]  no  suitable  method  found  for  sanityChecks()  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equals,    t);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks()	16	None	replace
145	[BUG]  [BUGGY]  LatinIsLast  =  false;  [CE]  cannot  find  symbol  LatinIsLast  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  LatinIsLast  =  false;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	LatinIsLast  =  false;	  shedNextIsLast    =    true;    	non-compiled	[CE]  cannot  find  symbol  LatinIsLast	9	None	replace
146	[BUG]  [BUGGY]  t  =  equations.getCompleteState(c,  t);  [CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCompleteState(c,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCompleteState(c,  t);	  t    =    equations.getCompleteState(t);    	non-compiled	[CE]  method  getCompleteState  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	44	None	replace
147	[BUG]  [BUGGY]  sanityChecks(t,  equations.getMask(),  c);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  equations.getMask(),  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  equations.getMask(),  c);	  sanityChecks(t,    equations.getMask());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
148	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [CE]  cannot  find  symbol  stages  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	18	None	replace
149	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [CE]  cannot  find  symbol  equaries  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  equaries	18	None	replace
150	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  equaries  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equaries,  t);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equaries,    t);    	non-compiled	[CE]  cannot  find  symbol  equaries	18	None	replace
151	[BUG]  [BUGGY]  sanityChecks(equats,  Equations.toString());  [CE]  cannot  find  symbol  equats  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equats,  Equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equats,  Equations.toString());	  sanityChecks(t,    Equations.toString());    	non-compiled	[CE]  cannot  find  symbol  equats	12	None	replace
152	[BUG]  [BUGGY]  sanityChecks(equals,  Equations.toString());  [CE]  cannot  find  symbol  equals  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equals,  Equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equals,  Equations.toString());	  sanityChecks(t,    Equations.toString());    	non-compiled	[CE]  cannot  find  symbol  equals	12	None	replace
153	[BUG]  [BUGGY]  setEquations(equates,  Equations.MULTIPLE);  [CE]  cannot  find  symbol  equates  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(equates,  Equations.MULTIPLE);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(equates,  Equations.MULTIPLE);	  setEquations(t,    Equations.MULTIPLE);    	non-compiled	[CE]  cannot  find  symbol  equates	31	None	replace
154	[BUG]  [BUGGY]  setScale(t,  Equations.MULTIPLE);  [CE]  cannot  find  symbol  Equations  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setScale(t,  Equations.MULTIPLE);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setScale(t,  Equations.MULTIPLE);	  setEquations(t,    Equations.MULTIPLE);    	non-compiled	[CE]  cannot  find  symbol  Equations	31	None	replace
155	[BUG]  [BUGGY]  setEquations(equations,  t,  c,  forward);  [CE]  cannot  find  symbol  forward  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(equations,  t,  c,  forward);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(equations,  t,  c,  forward);	  setEquations(equations,    t,    c);    	non-compiled	[CE]  cannot  find  symbol  forward	54	None	replace
156	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  }  [CE]  cannot  find  symbol  error  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  }	          sanityChecks(equations,    t);    sanityChecks(equations,    error);    	non-compiled	[CE]  cannot  find  symbol  error	15	None	replace
157	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  error  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    error);    	non-compiled	[CE]  cannot  find  symbol  error	15	None	replace
158	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  error  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  error);  }  else  {  throw  new  IllegalStateException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    error);    	non-compiled	[CE]  cannot  find  symbol  error	15	None	replace
159	[BUG]  [BUGGY]  sanityChecks(equations,  error,  c);  [CE]  cannot  find  symbol  error  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  error,  c);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  error,  c);	          sanityChecks(equations,    t);    sanityChecks(equations,    c);    	non-compiled	[CE]  cannot  find  symbol  error	17	None	replace
160	[BUG]  [BUGGY]  MutableState.checkState(sanityChecks,  t);  [CE]  cannot  find  symbol  sanityChecks  [FE]    IllegalStateException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  MutableState.checkState(sanityChecks,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	MutableState.checkState(sanityChecks,  t);	  if(t    >    0)    {    sanityChecks(equations,    t);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  sanityChecks	53	None	replace
161	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  else  {  setEquations(stages);  }  [CE]  cannot  find  symbol  equates  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  else  {  setEquations(stages);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equates,  t);  }  else  {  setEquations(stages);  }	          sanityChecks(equations,    t);    sanityChecks(equates,    t);    	non-compiled	[CE]  cannot  find  symbol  equates	48	None	replace
162	[BUG]  [BUGGY]  sanityChecks(equations,  platform);  [CE]  cannot  find  symbol  platform  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  platform);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  platform);	  sanityChecks(stages,    equations);    	non-compiled	[CE]  cannot  find  symbol  platform	33	None	replace
163	[BUG]  [BUGGY]  t  =  equations.getCompleteState()  *  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  t  =  equations.getCompleteState()  *  1;  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	t  =  equations.getCompleteState()  *  1;	  t    =    equations.getCompleteState()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	21	None	replace
164	[BUG]  [BUGGY]  sanityChecks(equations,  error,  equations.toString());  [CE]  cannot  find  symbol  error  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(equations,  error,  equations.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(equations,  error,  equations.toString());	  sanityChecks(equations,    t,    equations.toString());    	non-compiled	[CE]  cannot  find  symbol  error	35	None	replace
165	[BUG]  [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [CE]  cannot  find  symbol  stages  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(stages  ==  null)  {  sanityChecks(equations,  t);  sanityChecks(stages,  t);  }	          sanityChecks(equations,    t);    sanityChecks(stages,    t);    	non-compiled	[CE]  cannot  find  symbol  stages	39	None	replace
166	[BUG]  [BUGGY]  setEquations(equates,  Equations.EMPTY);  [CE]  cannot  find  symbol  equates  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(equates,  Equations.EMPTY);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(equates,  Equations.EMPTY);	  setEquations(t,    Equations.EMPTY);    	non-compiled	[CE]  cannot  find  symbol  equates	30	None	replace
167	[BUG]  [BUGGY]  sanityChecks(t,  equations,  c.length);  [CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,int)  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  equations,  c.length);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  equations,  c.length);	  sanityChecks(t,    equations);    	non-compiled	[CE]  no  suitable  method  found  for  sanityChecks(double,ExpandableStatefulODE,int)	5	None	replace
168	[BUG]  [BUGGY]  sanityChecks(t,  t.toString());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  sanityChecks(t,  t.toString());  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	sanityChecks(t,  t.toString());	  sanityChecks(stages,    t.toString());    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
169	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	add	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	compilable	  [FE]  IllegalStateException  	14	9	replace
170	[BUG]  [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	if(t  >  0)  {  sanityChecks(equations,  t);  sanityChecks(equations,  t);  }  else  {  throw  new  IllegalStateException( " ");  }	          sanityChecks(equations,    t);    sanityChecks(equations,    t);    	compilable	  [FE]  IllegalStateException  	14	9	replace
171	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(stages,  t);  [CE]  cannot  find  symbol  stages  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(stages,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(stages,  t);	  	non-compiled	[CE]  cannot  find  symbol  stages	13	None	add
172	[BUG]  [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  error);  sanityChecks(equations,  t);  [CE]  cannot  find  symbol  error  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]          sanityChecks(equations,    t);    sanityChecks(equations,  t);  sanityChecks(equations,  error);  sanityChecks(equations,  t);  [BUGGY]      setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	                sanityChecks(equations,        t);        sanityChecks(equations,    t);    sanityChecks(equations,  error);  sanityChecks(equations,  t);	  	non-compiled	[CE]  cannot  find  symbol  error	13	None	add
173	[BUG]  [BUGGY]  setEquations(equals,  t);  [CE]  cannot  find  symbol  equals  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);      [BUGGY]  setEquations(equals,  t);  [BUGGY]      final  boolean  forward  =  t  >  equations.getTime();  final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	195	195	1	replace	setEquations(equals,  t);	  setEquations(t);    	non-compiled	[CE]  cannot  find  symbol  equals	20	None	replace
