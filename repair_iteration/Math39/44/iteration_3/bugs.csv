bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  1.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  1.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  1.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  setSafety(0.0);  setMinGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(0.0);  setMinGrowth(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(0.0);  setMinGrowth(1.0);	  if(fsal)    {    setSafety(0.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
5	[BUG]  [BUGGY]  setSafety(0.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(0.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(0.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(0.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  setMinGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0)  {  setSafety(1);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(name);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(name);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	Set  <  String>  setSafety  =  Sets.newHashSet(name);	  Set    <    String>    setSafety    =    Sets.newHashSet(exp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
10	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(prototype);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(prototype);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	Set  <  String>  setSafety  =  Sets.newHashSet(prototype);	  Set    <    String>    setSafety    =    Sets.newHashSet(exp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
11	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(fsal);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(fsal);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	Set  <  String>  setSafety  =  Sets.newHashSet(fsal);	  Set    <    String>    setSafety    =    Sets.newHashSet(exp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
12	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  ==  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  ==  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >=    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
13	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
14	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }	  if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
15	[BUG]  [BUGGY]  luate(c,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(c,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(c,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
16	[BUG]  [BUGGY]  luate(exp,  c)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(exp,  c)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(exp,  c)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
17	[BUG]  [BUGGY]  luate(fsal,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(fsal,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(fsal,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
18	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
19	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
20	[BUG]  [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
21	[BUG]  [BUGGY]  Set  <  String>  setSafety(0.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  Set  <  String>  setSafety(0.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	Set  <  String>  setSafety(0.0);	  Set    <    String>    setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
22	[BUG]  [BUGGY]  Set  <  String>  setSafety(2.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  Set  <  String>  setSafety(2.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	Set  <  String>  setSafety(2.0);	  Set    <    String>    setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
23	[BUG]  [BUGGY]  ArrayList  <  String>  setSafety(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  ArrayList  <  String>  setSafety(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	ArrayList  <  String>  setSafety(1.0);	  Set    <    String>    setSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
24	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
25	[BUG]  [BUGGY]  if(fsal)  {  exp  >  0.0)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  exp  >  0.0)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  exp  >  0.0)  {  setSafety(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
26	[BUG]  [BUGGY]  setSafety(1.0);  setMaxReduction(1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(1.0);  setMaxReduction(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(1.0);  setMaxReduction(1.0);	  if(exp    >    0.0)    {    setSafety(1.0);    setMaxReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  setSafety(1.0f);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(1.0f);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(1.0f);	  if(exp    >    0.0)    {    setSafety(1.0f);    }    else    {    setSafety(1.0f);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
28	[BUG]  [BUGGY]  SetSafety(1.0f);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  SetSafety(1.0f);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	SetSafety(1.0f);	  if(exp    >    0.0)    {    setSafety(1.0f);    }    else    {    setSafety(1.0f);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
29	[BUG]  [BUGGY]  SetSafety(1.0f,  exp);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  SetSafety(1.0f,  exp);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	SetSafety(1.0f,  exp);	  if(exp    >    0.0)    {    setSafety(1.0f);    }    else    {    setSafety(1.0f);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
30	[BUG]  [BUGGY]  SetSafety(1.0);  setMaxGrowth(2.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  SetSafety(1.0);  setMaxGrowth(2.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	SetSafety(1.0);  setMaxGrowth(2.0);	  SetSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  Set  <  String>  setSafety(0.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  Set  <  String>  setSafety(0.0);  setMaxGrowth(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	Set  <  String>  setSafety(0.0);  setMaxGrowth(1.0);	  Set    <    String>    setSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
32	[BUG]  [BUGGY]  luate(c,  exp)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(c,  exp)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(c,  exp)  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
33	[BUG]  [BUGGY]  luate(a,  fsal)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(a,  fsal)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(a,  fsal)  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
34	[BUG]  [BUGGY]  luate(name,  exp)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(name,  exp)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(name,  exp)  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
35	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
36	[BUG]  [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
37	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  ==  0.0)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  ==  0.0)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }	  setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
38	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(exp  <  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  if(exp  <  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  if(exp  <  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    <    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
39	[BUG]  [BUGGY]  ArrayList  <  String>  setSafety  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  ArrayList  <  String>  setSafety  =  Sets.newHashSet();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	ArrayList  <  String>  setSafety  =  Sets.newHashSet();	  Set    <    String>    setSafety    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
40	[BUG]  [BUGGY]  List  <  String>  setSafety  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  List  <  String>  setSafety  =  Sets.newHashSet();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	List  <  String>  setSafety  =  Sets.newHashSet();	  Set    <    String>    setSafety    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
41	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(exp  <  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  if(exp  <  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  if(exp  <  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    <    0.0)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
42	[BUG]  [BUGGY]  safe(exp)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safe(exp)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safe(exp)  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  safety(exp)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safety(exp)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safety(exp)  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  ensureCapacity(exp)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  ensureCapacity(exp)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	ensureCapacity(exp)  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp!=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }	  setSafety(1.0);    setMinGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp!=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  setSafety(1.0);    setMinGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp!=  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  setSafety(1.0);    setMinGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(0.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(0.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0)  {  if(fsal)  {  setSafety(0.0);  setMaxGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
49	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0);    setMaxReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
50	[BUG]  [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0);    setMaxReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
51	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  setMaxReduction(1.0);  }	  if(fsal)    {    setSafety(1.0);    setMaxReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
52	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(0.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(0.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(0.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(0.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
53	[BUG]  [BUGGY]  setSafety(0.0);  setMinReduction(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(0.0);  setMinReduction(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(0.0);  setMinReduction(1.0);	  if(fsal)    {    setSafety(0.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
54	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(0.0);  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(0.0);  setMinReduction(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(0.0);  setMinReduction(1.0);  }	  if(fsal)    {    setSafety(0.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
55	[BUG]  [BUGGY]  setSafety(0.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(0.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(0.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(0.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
56	[BUG]  [BUGGY]  safety(1.0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safety(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safety(1.0);	  if(exp    >    0.0)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
57	[BUG]  [BUGGY]  safe(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safe(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safe(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
58	[BUG]  [BUGGY]  safely(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
59	[BUG]  [BUGGY]  safely(exp)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely(exp)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely(exp)  {  setSafety(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  safe(c)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safe(c)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safe(c)  {  setSafety(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  SetSafety(1.0,  exp  +  10.0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  SetSafety(1.0,  exp  +  10.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	SetSafety(1.0,  exp  +  10.0);	  SetSafety(1.0,    exp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
62	[BUG]  [BUGGY]  SetSafety(1.0,  exp  -  10.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  SetSafety(1.0,  exp  -  10.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	SetSafety(1.0,  exp  -  10.0);	  SetSafety(1.0,    exp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
63	[BUG]  [BUGGY]  SetSafety(1.0,  exp  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  SetSafety(1.0,  exp  -  1);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	SetSafety(1.0,  exp  -  1);	  SetSafety(1.0,    exp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
64	[BUG]  [BUGGY]  luate(c,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(c,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(c,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
65	[BUG]  [BUGGY]  luate(exp,  c)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(exp,  c)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(exp,  c)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
66	[BUG]  [BUGGY]  luate(name,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(name,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(name,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
67	[BUG]  [BUGGY]  setSafety(1.0  /  exp);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(1.0  /  exp);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(1.0  /  exp);	  setSafety(1.0    -    exp);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
68	[BUG]  [BUGGY]  setSafety(1.0  -  exp  +  10.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(1.0  -  exp  +  10.0);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(1.0  -  exp  +  10.0);	  setSafety(1.0    -    exp);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
69	[BUG]  [BUGGY]  setSafety(1.0  -  exp  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(1.0  -  exp  +  1);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(1.0  -  exp  +  1);	  setSafety(1.0    -    exp);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
70	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
73	[BUG]  [BUGGY]  safety(1.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safety(1.0);  setMaxGrowth(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safety(1.0);  setMaxGrowth(1.0);	  if(false)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
74	[BUG]  [BUGGY]  setSafety(1);  setMaxGrowth(1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(1);  setMaxGrowth(1);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(1);  setMaxGrowth(1);	  if(false)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
75	[BUG]  [BUGGY]  safely(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
76	[BUG]  [BUGGY]  safe(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safe(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safe(exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
77	[BUG]  [BUGGY]  setSafety(0.9);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(0.9);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(0.9);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
78	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  ==  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  ==  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }	  setSafety(1.0);    setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
79	[BUG]  [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp!=  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }	  setSafety(1.0);    setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
80	[BUG]  [BUGGY]  if(exp  ==  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  ==  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  ==  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  setSafety(1.0);    setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
81	[BUG]  [BUGGY]  SetSafety(2.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  SetSafety(2.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	SetSafety(2.0);	  SetSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
82	[BUG]  [BUGGY]  SetSafety(0.0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  SetSafety(0.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	SetSafety(0.0);	  SetSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
83	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
84	[BUG]  [BUGGY]  luate(fsal,  c)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(fsal,  c)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(fsal,  c)  {  setSafety(1.0);  }	  luate(fsal,    exp)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
85	[BUG]  [BUGGY]  luate(a,  exp)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(a,  exp)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(a,  exp)  {  setSafety(1.0);  }	  luate(fsal,    exp)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
86	[BUG]  [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp!=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  setSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
87	[BUG]  [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp!=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  setSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
88	[BUG]  [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp!=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp!=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  throw  new  IllegalStateException( " ");  }	  setSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
89	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
90	[BUG]  [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  if(exp  >  0.0)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
91	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely(fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely(fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
92	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0,  exp);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely(fsal)  {  setSafety(1.0,  exp);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely(fsal)  {  setSafety(1.0,  exp);  }	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
93	[BUG]  [BUGGY]  setSafety(1.0,  exp);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(1.0,  exp);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(1.0,  exp);	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
94	[BUG]  [BUGGY]  safely(fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely(fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely(fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
95	[BUG]  [BUGGY]  if(exp  >=  0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >=  0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >=  0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
96	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(0.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(0.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(0.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
97	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >=  0.0)  {  setSafety(1.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    setSafety(1.0);    setMaxReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
98	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }	  setSafety(1.0);    setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
99	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(10.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(10.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(10.0);  }	  setSafety(1.0);    setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
100	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(0.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(0.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(0.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
101	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0);  setMinReduction(1.0;  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
102	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0);  setMinReduction(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinReduction(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
103	[BUG]  [BUGGY]  SetSafety(1.0,  exp  +  scalAbsoluteTolerance);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  SetSafety(1.0,  exp  +  scalAbsoluteTolerance);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	SetSafety(1.0,  exp  +  scalAbsoluteTolerance);	  SetSafety(1.0,    exp);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
104	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
105	[BUG]  [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
106	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(a);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(a);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	Set  <  String>  setSafety  =  Sets.newHashSet(a);	  Set    <    String>    setSafety    =    Sets.newHashSet(exp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
107	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >=  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
108	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(0.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(0.0);  setMaxReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(0.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
109	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMinGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
110	[BUG]  [BUGGY]  setMinGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setMinGrowth(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setMinGrowth(1.0);	  setSafety(1.0);    setMinGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
111	[BUG]  [BUGGY]  setMinGrowth(0.0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setMinGrowth(0.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setMinGrowth(0.0);	  setSafety(1.0);    setMinGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
112	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0;  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0;  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0;  }  else  {  setSafety(1.0);  }	  if(!fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
113	[BUG]  [BUGGY]  if(exp  >  0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
114	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1);  setMinReduction(1);  }  else  {  setMaxGrowth(1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  setSafety(1);  setMinReduction(1);  }  else  {  setMaxGrowth(1);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  setSafety(1);  setMinReduction(1);  }  else  {  setMaxGrowth(1);  }	  setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
115	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(0.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(0.0);  setMaxGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(0.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
116	[BUG]  [BUGGY]  safe(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safe(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safe(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
117	[BUG]  [BUGGY]  if(exp  <  0.0)  {  setSafety(1.0f);  }  else  {  setSafety(1.0f);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  <  0.0)  {  setSafety(1.0f);  }  else  {  setSafety(1.0f);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  <  0.0)  {  setSafety(1.0f);  }  else  {  setSafety(1.0f);  }	  if(exp    >    0.0)    {    setSafety(1.0f);    }    else    {    setSafety(1.0f);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
118	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  setSafety(1.0d);  }  else  {  setSafety(1.0d);  }	  if(exp    >    0.0)    {    setSafety(1.0f);    }    else    {    setSafety(1.0f);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
119	[BUG]  [BUGGY]  if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMaxGrowth(1.0);  }	  Set    <    String>    setSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
120	[BUG]  [BUGGY]  if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }	  Set    <    String>    setSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
121	[BUG]  [BUGGY]  luate(fsal,  b)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(fsal,  b)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(fsal,  b)  {  setSafety(1.0);  }	  luate(fsal,    exp)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
122	[BUG]  [BUGGY]  luate(c,  fsal)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(c,  fsal)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(c,  fsal)  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
123	[BUG]  [BUGGY]  safe(fsal)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safe(fsal)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safe(fsal)  {  setSafety(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
124	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0;  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0;  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0;  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
125	[BUG]  [BUGGY]  safely()  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely()  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely()  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(false)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
126	[BUG]  [BUGGY]  safely()  {  setSafety(0.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely()  {  setSafety(0.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely()  {  setSafety(0.0);  setMaxGrowth(1.0);  }	  if(false)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
127	[BUG]  [BUGGY]  safely()  {  setSafety(1);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safely()  {  setSafety(1);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safely()  {  setSafety(1);  setMaxGrowth(1.0);  }	  if(false)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
128	[BUG]  [BUGGY]  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setMaxGrowth(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setMaxGrowth(1.0);	  setSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
129	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  else  {  setMinReduction(1.0);  setMaxGrowth(1.0);  }	  setSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
130	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
131	[BUG]  [BUGGY]  if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMinGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMinGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMinGrowth(1.0);  }	  Set    <    String>    setSafety(1.0);    setMinGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
132	[BUG]  [BUGGY]  if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  Set  <  String>  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  Set    <    String>    setSafety(1.0);    setMinGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
133	[BUG]  [BUGGY]  luate(a,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(a,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(a,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
134	[BUG]  [BUGGY]  luate(exp,  fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(exp,  fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(exp,  fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
135	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0;  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0;  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
136	[BUG]  [BUGGY]  safe(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safe(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safe(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
137	[BUG]  [BUGGY]  safety(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safety(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safety(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	  safety(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
138	[BUG]  [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >=  0.0)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >=  0.0)  {  setSafety(1.0);  }	  if(exp    >    0.0)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
139	[BUG]  [BUGGY]  safe(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safe(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safe(fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
140	[BUG]  [BUGGY]  safe(fsal)  {  setSafety(0.5);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  safe(fsal)  {  setSafety(0.5);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	safe(fsal)  {  setSafety(0.5);  }  else  {  setSafety(1.0);  }	  safely(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
141	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(0.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(0.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
142	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.5,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(0.5,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(0.5,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
143	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  exp);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0,  exp);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0,  exp);  }  else  {  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
144	[BUG]  [BUGGY]  if(fsal)  {  setSafety(0.0,  maxGrowth);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(0.0,  maxGrowth);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(0.0,  maxGrowth);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
145	[BUG]  [BUGGY]  luate(a,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(a,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(a,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
146	[BUG]  [BUGGY]  luate(c,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(c,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(c,  fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
147	[BUG]  [BUGGY]  luate(exp,  fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(exp,  fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(exp,  fsal)  {  setSafety(0.0);  }  else  {  setSafety(1.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
148	[BUG]  [BUGGY]  if(exp  >=  0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >=  0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >=  0)  {  if(fsal)  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
149	[BUG]  [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0e);  }  else  {  setSafety(1.0e);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  setSafety(1.0e);  }  else  {  setSafety(1.0e);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  setSafety(1.0e);  }  else  {  setSafety(1.0e);  }	  if(exp    >    0.0)    {    setSafety(1.0f);    }    else    {    setSafety(1.0f);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
150	[BUG]  [BUGGY]  setSafety(0.0);  setMaxGrowth(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(0.0);  setMaxGrowth(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(0.0);  setMaxGrowth(1.0);	  if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
151	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.1);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.1);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0);  }  else  {  setSafety(1.1);  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(0.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
152	[BUG]  [BUGGY]  if(!fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(!fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(!fsal)  {  setSafety(1.0,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
153	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.0,  exp);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.0,  exp);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.0,  exp);  }	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
154	[BUG]  [BUGGY]  if(fsal)  {  setSafety(1.1,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(fsal)  {  setSafety(1.1,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(fsal)  {  setSafety(1.1,  exp);  }  else  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  if(fsal)    {    setSafety(1.0,    exp);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
155	[BUG]  [BUGGY]  luate(c,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(0.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  luate(c,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(0.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	luate(c,  exp)  {  setSafety(1.0);  }  else  {  setSafety(1.0);  setMaxGrowth(0.0);  }	  luate(exp,    fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
156	[BUG]  [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
157	[BUG]  [BUGGY]  setMinReduction(1.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setMinReduction(1.0);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setMinReduction(1.0);	  setSafety(1.0);    setMinReduction(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
158	[BUG]  [BUGGY]  if(exp  <  =  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  <  =  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  <  =  0.0)  {  setSafety(1.0);  setMinReduction(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    <    0.0)    {    setSafety(1.0);    setMinReduction(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
159	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSetWithCapacity(exp);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSetWithCapacity(exp);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	Set  <  String>  setSafety  =  Sets.newHashSetWithCapacity(exp);	  Set    <    String>    setSafety    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
160	[BUG]  [BUGGY]  setSafety  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety  =  Sets.newHashSet();  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety  =  Sets.newHashSet();	  Set    <    String>    setSafety    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
161	[BUG]  [BUGGY]  if(exp  >  0.0)  {  SetSafety(1.0);  }  else  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  SetSafety(1.0);  }  else  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  SetSafety(1.0);  }  else  {  setSafety(1.0);  }	  SetSafety(1.0);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
162	[BUG]  [BUGGY]  if(exp  <  =  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  <  =  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  <  =  0.0)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    <    0.0)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
163	[BUG]  [BUGGY]  if(exp  >  0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0)  {  setSafety(1.0);  setMaxGrowth(1.0);  }	  SetSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
164	[BUG]  [BUGGY]  if(exp  >  0.0)  {  SetSafety(1.0);  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  SetSafety(1.0);  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  SetSafety(1.0);  setMaxGrowth(1.0);  }	  SetSafety(1.0);    setMaxGrowth(1.0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
165	[BUG]  [BUGGY]  if(exp  >  1.0)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  1.0)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  1.0)  {  setSafety(1.0);  }	  if(exp    >    0.0)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
166	[BUG]  [BUGGY]  if(exp  <  =  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  <  =  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  <  =  0.0)  {  if(fsal)  {  setSafety(1.0);  setMinGrowth(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    setMinGrowth(1.0);    }    else    {    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
167	[BUG]  [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(c);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  Set  <  String>  setSafety  =  Sets.newHashSet(c);  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	Set  <  String>  setSafety  =  Sets.newHashSet(c);	  Set    <    String>    setSafety    =    Sets.newHashSet(exp);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
168	[BUG]  [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  >  0.0)  {  if(fsal)  {  setSafety(1.0);  }  else  {  setMaxGrowth(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    }    else    {    setSafety(1.0);    setMaxGrowth(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
169	[BUG]  [BUGGY]  setSafety(1.0  -  exp,  1.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  setSafety(1.0  -  exp,  1.0);  [BUGGY]      setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	setSafety(1.0  -  exp,  1.0);	  setSafety(1.0    -    exp);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
170	[BUG]  [BUGGY]  if(exp  <  =  0.0)  {  if(fsal)  {  setSafety(1.0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      this.fsal=  fsal;  this.c  =  c;  this.a  =  a;  this.b  =  b;  this.prototype  =  prototype;  exp  =  -1.0  /  getOrder();        [BUGGY]  if(exp  <  =  0.0)  {  if(fsal)  {  setSafety(1.0);  }  [BUGGY]      setSafety(0.9);  setMinReduction(0.2);  setMaxGrowth(10.0);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  <init>  [RETURN_TYPE]  RungeKuttaStepInterpolator,double,double,double,double)  String  name  final  boolean  fsal  final  double[]  c  final  double[][]  a  final  double[]  b  RungeKuttaStepInterpolator  prototype  final  double  minStep  final  double  maxStep  final  double  scalAbsoluteTolerance  final  double  scalRelativeTolerance  [VARIABLES]  double[][]  a  boolean  fsal  String  name  double[]  b  c  RungeKuttaStepInterpolator  prototype  double  exp  maxGrowth  maxStep  minReduction  minStep  safety  scalAbsoluteTolerance  scalRelativeTolerance  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.31622776601683794	126	126	1	replace	if(exp  <  =  0.0)  {  if(fsal)  {  setSafety(1.0);  }	  if(exp    >    0.0)    {    if(fsal)    {    setSafety(1.0);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
