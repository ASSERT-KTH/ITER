bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getPrimaryMapper();  setEquations(c);  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getPrimaryMapper();  setEquations(c);  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getPrimaryMapper();  setEquations(c);	      	non-compiled	[CE]  while  expected	3	None	replace
2	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getPrimaryMapper();  setEquations(b);  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getPrimaryMapper();  setEquations(b);  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getPrimaryMapper();  setEquations(b);	      	non-compiled	[CE]  while  expected	3	None	replace
3	[BUG]  [BUGGY]  setEquations(equations);  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  setEquations(equations);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	setEquations(equations);	      final    double[][]    c    =    equations.getCompleteState();    setEquations(c);    	non-compiled	[CE]  while  expected	6	None	replace
4	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getSecondaryMapper();  setEquations(c);  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getSecondaryMapper();  setEquations(c);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getSecondaryMapper();  setEquations(c);	      final    double[][]    c    =    equations.getCompleteState();    setEquations(c);    	non-compiled	[CE]  while  expected	6	None	replace
5	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentState();  setEquations(c);  [CE]  while  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getCurrentState();  setEquations(c);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getCurrentState();  setEquations(c);	      final    double[][]    c    =    equations.getCompleteState();    setEquations(c);    	non-compiled	[CE]  while  expected	6	None	replace
6	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getBooleanValue();  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getBooleanValue();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getBooleanValue();	      final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	5	None	replace
7	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getRangeState();  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getRangeState();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getRangeState();	      final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	5	None	replace
8	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getScale();  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getScale();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getScale();	      final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	5	None	replace
9	[BUG]  [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(forward)  {  sanityChecks(equations,  t);  setEquations(equations);  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	13	None	replace
10	[BUG]  [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(forward)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	13	None	replace
11	[BUG]  [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(forward)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  MathIllegalArgumentException( " ");  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	13	None	replace
12	[BUG]  [BUGGY]  if(forward)  {  sanityChecks(equations,  forward);  setEquations(equations);  }  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(forward)  {  sanityChecks(equations,  forward);  setEquations(equations);  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(forward)  {  sanityChecks(equations,  forward);  setEquations(equations);  }	      sanityChecks(equations,    forward);    setEquations(equations);    	non-compiled	[CE]  while  expected	14	None	replace
13	[BUG]  [BUGGY]  final  double[]  y0=  equations.getY()  +  1;  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  y0=  equations.getY()  +  1;  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  y0=  equations.getY()  +  1;	  final    double[]    y0=    equations.getY();    	non-compiled	[CE]  while  expected	9	None	replace
14	[BUG]  [BUGGY]  final  double[]  y0  =  equations.getPrimaryMapper();  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  y0  =  equations.getPrimaryMapper();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  y0  =  equations.getPrimaryMapper();	  final    double[]    y0    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	1	None	replace
15	[BUG]  [BUGGY]  final  double[]  y0  =  equations.getFirstMapper();  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  y0  =  equations.getFirstMapper();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  y0  =  equations.getFirstMapper();	  final    double[]    y0    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	1	None	replace
16	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getFirstSecondaryMapper();  [CE]  while  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getFirstSecondaryMapper();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getFirstSecondaryMapper();	      final    double[][]    b    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	8	None	replace
17	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getSecondaryMappers();  [CE]  while  expected  [FE]                  AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getSecondaryMappers();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getSecondaryMappers();	      final    double[][]    b    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	8	None	replace
18	[BUG]  [BUGGY]  final  double[]  c  =  equations.getCurrentState();  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  c  =  equations.getCurrentState();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  c  =  equations.getCurrentState();	      final    double[]    c    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	10	None	replace
19	[BUG]  [BUGGY]  final  double[]  c  =  equations.getSecondaryMapper();  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  c  =  equations.getSecondaryMapper();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  c  =  equations.getSecondaryMapper();	      final    double[]    c    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	10	None	replace
20	[BUG]  [BUGGY]  final  double[]  c  =  equations.getRangeState();  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  c  =  equations.getRangeState();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  c  =  equations.getRangeState();	      final    double[]    c    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	10	None	replace
21	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getSecondaryMapper();  setEquations(b);  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getSecondaryMapper();  setEquations(b);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getSecondaryMapper();  setEquations(b);	      final    double[][]    b    =    equations.getCompleteState();    setEquations(b);    	non-compiled	[CE]  while  expected	7	None	replace
22	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getSecondaryMapping();  setEquations(b);  [CE]  while  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getSecondaryMapping();  setEquations(b);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getSecondaryMapping();  setEquations(b);	      final    double[][]    b    =    equations.getCompleteState();    setEquations(b);    	non-compiled	[CE]  while  expected	7	None	replace
23	[BUG]  [BUGGY]  final  double[]  y0  =  equations.getStart();  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  y0  =  equations.getStart();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  y0  =  equations.getStart();	  final    double[]    y0    =    equations.getStartState();    	non-compiled	[CE]  while  expected	2	None	replace
24	[BUG]  [BUGGY]  final  double[]  y0  =  equations.getEndState();  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  y0  =  equations.getEndState();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  y0  =  equations.getEndState();	  final    double[]    y0    =    equations.getStartState();    	non-compiled	[CE]  while  expected	2	None	replace
25	[BUG]  [BUGGY]  final  double[]  y0  =  equations.getStartTime();  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  y0  =  equations.getStartTime();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  y0  =  equations.getStartTime();	  final    double[]    y0    =    equations.getStartState();    	non-compiled	[CE]  while  expected	2	None	replace
26	[BUG]  [BUGGY]  sanityChecks(t,  equations);  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  sanityChecks(t,  equations);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	sanityChecks(t,  equations);	      sanityChecks(equations,    t);    	non-compiled	[CE]  while  expected	15	None	replace
27	[BUG]  [BUGGY]  sanityChecks(equations,  t,  forward);  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  sanityChecks(equations,  t,  forward);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	sanityChecks(equations,  t,  forward);	      sanityChecks(equations,    t);    	non-compiled	[CE]  while  expected	15	None	replace
28	[BUG]  [BUGGY]  sanityChecks(equations,  forward);  [CE]  while  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  sanityChecks(equations,  forward);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	sanityChecks(equations,  forward);	      sanityChecks(equations,    t);    	non-compiled	[CE]  while  expected	15	None	replace
29	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getSecondaryMappers();  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getSecondaryMappers();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getSecondaryMappers();	      final    double[][]    c    =    equations.getPrimaryMapper();    	non-compiled	[CE]  while  expected	16	None	replace
30	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentSecondaryMapper();  [CE]  while  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getCurrentSecondaryMapper();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getCurrentSecondaryMapper();	      final    double[][]    c    =    equations.getPrimaryMapper();    	non-compiled	[CE]  while  expected	16	None	replace
31	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentState();  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getCurrentState();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getCurrentState();	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	4	None	replace
32	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getRangeState();  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getRangeState();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getRangeState();	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	4	None	replace
33	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getFirstSecondaryMapper();  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getFirstSecondaryMapper();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getFirstSecondaryMapper();	      final    double[][]    c    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	12	None	replace
34	[BUG]  [BUGGY]  filteredNextIsLast  =  true;  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  filteredNextIsLast  =  true;  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	filteredNextIsLast  =  true;	      filteredNextIsLast    =    false;    	non-compiled	[CE]  while  expected	11	None	replace
35	[BUG]  [BUGGY]  eredNextIsLast  =  true;  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  eredNextIsLast  =  true;  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	eredNextIsLast  =  true;	      filteredNextIsLast    =    false;    	non-compiled	[CE]  while  expected	11	None	replace
36	[BUG]  [BUGGY]  sanityChecks(stages,  t);  setEquations(equations);  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  sanityChecks(stages,  t);  setEquations(equations);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	sanityChecks(stages,  t);  setEquations(equations);	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	13	None	replace
37	[BUG]  [BUGGY]  if(forward  <  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(forward  <  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(forward  <  0)  {  sanityChecks(equations,  t);  setEquations(equations);  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	13	None	replace
38	[BUG]  [BUGGY]  final  double[]  y0  =  equations.getStartElement();  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  y0  =  equations.getStartElement();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  y0  =  equations.getStartElement();	  final    double[]    y0    =    equations.getStartState();    	non-compiled	[CE]  while  expected	2	None	replace
39	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])equations.getPrimaryMapper();  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =(double[][])equations.getPrimaryMapper();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =(double[][])equations.getPrimaryMapper();	      	non-compiled	[CE]  while  expected	3	None	replace
40	[BUG]  [BUGGY]  final  double[][]  c  =(double[][])equations.getSecondaryMapper();  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =(double[][])equations.getSecondaryMapper();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =(double[][])equations.getSecondaryMapper();	      	non-compiled	[CE]  while  expected	3	None	replace
41	[BUG]  [BUGGY]  sanityChecks(stages,  forward);  setEquations(equations);  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  sanityChecks(stages,  forward);  setEquations(equations);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	sanityChecks(stages,  forward);  setEquations(equations);	      sanityChecks(equations,    forward);    setEquations(equations);    	non-compiled	[CE]  while  expected	14	None	replace
42	[BUG]  [BUGGY]  sanityChecks(stages,  t);  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  sanityChecks(stages,  t);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	sanityChecks(stages,  t);	      sanityChecks(equations,    t);    	non-compiled	[CE]  while  expected	15	None	replace
43	[BUG]  [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  }  else  {  setEquations(equations);  }  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(forward)  {  sanityChecks(equations,  t);  }  else  {  setEquations(equations);  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(forward)  {  sanityChecks(equations,  t);  }  else  {  setEquations(equations);  }	      sanityChecks(equations,    t);    	non-compiled	[CE]  while  expected	15	None	replace
44	[BUG]  [BUGGY]  Set  <  Double>  b  =  equations.getCompleteState();  setEquations(b);  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  Set  <  Double>  b  =  equations.getCompleteState();  setEquations(b);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	Set  <  Double>  b  =  equations.getCompleteState();  setEquations(b);	      final    double[][]    b    =    equations.getCompleteState();    setEquations(b);    	non-compiled	[CE]  while  expected	7	None	replace
45	[BUG]  [BUGGY]  filteredNextIsLast  =  null;  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  filteredNextIsLast  =  null;  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	filteredNextIsLast  =  null;	      filteredNextIsLast    =    false;    	non-compiled	[CE]  while  expected	11	None	replace
46	[BUG]  [BUGGY]  Set  <  Double>  c  =  equations.getCompleteState();  setEquations(c);  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  Set  <  Double>  c  =  equations.getCompleteState();  setEquations(c);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	Set  <  Double>  c  =  equations.getCompleteState();  setEquations(c);	      final    double[][]    c    =    equations.getCompleteState();    setEquations(c);    	non-compiled	[CE]  while  expected	6	None	replace
47	[BUG]  [BUGGY]  final  double[]  y0  =  equations.getFirstSecondaryMapper();  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  y0  =  equations.getFirstSecondaryMapper();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  y0  =  equations.getFirstSecondaryMapper();	  final    double[]    y0    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	1	None	replace
48	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getCurrentMapper();  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getCurrentMapper();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getCurrentMapper();	      final    double[][]    c    =    equations.getPrimaryMapper();    	non-compiled	[CE]  while  expected	16	None	replace
49	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getEndState();  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getEndState();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getEndState();	      final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	5	None	replace
50	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getBounds();  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getBounds();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getBounds();	      final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	5	None	replace
51	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getEquivalenceState();  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getEquivalenceState();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getEquivalenceState();	      final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	5	None	replace
52	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getSecondaryMapper(t);  [CE]  while  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getSecondaryMapper(t);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getSecondaryMapper(t);	      final    double[][]    b    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	8	None	replace
53	[BUG]  [BUGGY]  setEquations(equations.getCompleteState());  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  setEquations(equations.getCompleteState());  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	setEquations(equations.getCompleteState());	      final    double[][]    c    =    equations.getCompleteState();    setEquations(c);    	non-compiled	[CE]  while  expected	6	None	replace
54	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getBooleanProperties();  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getBooleanProperties();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getBooleanProperties();	      final    double[][]    b    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	5	None	replace
55	[BUG]  [BUGGY]  final  double[][]  c  =  equations.getEdge();  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  c  =  equations.getEdge();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  c  =  equations.getEdge();	      final    double[][]    c    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	4	None	replace
56	[BUG]  [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(t  >  sanityChecks())  {  sanityChecks(equations,  t);  setEquations(equations);  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	13	None	replace
57	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	13	None	replace
58	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  t);  setEquations(equations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      sanityChecks(equations,    t);    setEquations(equations);    	non-compiled	[CE]  while  expected	13	None	replace
59	[BUG]  [BUGGY]  final  double[]  y0  =  equations.getStartTick();  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  y0  =  equations.getStartTick();  [BUGGY]    final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  y0  =  equations.getStartTick();	  final    double[]    y0    =    equations.getStartState();    	non-compiled	[CE]  while  expected	2	None	replace
60	[BUG]  [BUGGY]  final  double[]  c  =  equations.getComplete();  [CE]  while  expected  [FE]        AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[]  c  =  equations.getComplete();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[]  c  =  equations.getComplete();	      final    double[]    c    =    equations.getCompleteState();    	non-compiled	[CE]  while  expected	10	None	replace
61	[BUG]  [BUGGY]  Set  <  E>  b  =  equations.getCompleteState();  setEquations(b);  [CE]  while  expected  [FE]              AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  Set  <  E>  b  =  equations.getCompleteState();  setEquations(b);  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	Set  <  E>  b  =  equations.getCompleteState();  setEquations(b);	      final    double[][]    b    =    equations.getCompleteState();    setEquations(b);    	non-compiled	[CE]  while  expected	7	None	replace
62	[BUG]  [BUGGY]  setEquations(equations.getSecondaryMapper());  [CE]  while  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  setEquations(equations.getSecondaryMapper());  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	setEquations(equations.getSecondaryMapper());	      final    double[][]    b    =    equations.getCompleteState();    setEquations(b);    	non-compiled	[CE]  while  expected	7	None	replace
63	[BUG]  [BUGGY]  if(forward!=  0)  {  sanityChecks(equations,  forward);  setEquations(equations);  }  [CE]  while  expected  [FE]          AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(forward!=  0)  {  sanityChecks(equations,  forward);  setEquations(equations);  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(forward!=  0)  {  sanityChecks(equations,  forward);  setEquations(equations);  }	      sanityChecks(equations,    forward);    setEquations(equations);    	non-compiled	[CE]  while  expected	14	None	replace
64	[BUG]  [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  forward);  setEquations(equations);  }  [CE]  while  expected  [FE]            AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  forward);  setEquations(equations);  }  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	if(t  >  scalAbsoluteTolerance)  {  sanityChecks(equations,  forward);  setEquations(equations);  }	      sanityChecks(equations,    forward);    setEquations(equations);    	non-compiled	[CE]  while  expected	14	None	replace
65	[BUG]  [BUGGY]  final  double[][]  b  =  equations.getPrimaryMapper();  [CE]  while  expected  [FE]                AssertionError    [CONTEXT]    throws  MathIllegalStateException,  MathIllegalArgumentException  {  sanityChecks(equations,  t);  setEquations(equations);  final  boolean  forward  =  t  >  equations.getTime();      [BUGGY]  final  double[][]  b  =  equations.getPrimaryMapper();  [BUGGY]    final  double[]  y0=  equations.getCompleteState();  final  double[]  y  =  y0.clone();  final  int  stages  =  c.length  +  1;  final  double[][]  yDotK  =  new  double[stages][y.length];  final  double[]  yTmp=  y0.clone();  final  double[]  yDotTmp  =  new  double[y.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  void  ExpandableStatefulODE  equations  final  double  t  [VARIABLES]  ExpandableStatefulODE  equations  boolean  filteredNextIsLast  firstTime  forward  fsal  nextIsLast  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yDotTmp  yTmp  double  error  exp  factor  filteredNextT  hNew  maxGrowth  maxStep  minReduction  minStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  sum  t  double[][]  a  yDotK  RungeKuttaStepInterpolator  interpolator  prototype  int  i  j  k  l  stages  	projects/Math39/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.3333333333333333	199	199	1	replace	final  double[][]  b  =  equations.getPrimaryMapper();	      final    double[][]    b    =    equations.getSecondaryMapper();    	non-compiled	[CE]  while  expected	8	None	replace
