bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {	  if(input!=    null    ||    input.length()    ==    0    ||    input.charAt(0)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(input.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(input.length()  -  1)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(input.length()  -  1)  ==  '/')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(input.length()    -    1)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  if(input.charAt(0)  ==  '/'  ||  input.charAt(input.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.charAt(0)  ==  '/'  ||  input.charAt(input.length()  -  1)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.charAt(0)  ==  '/'  ||  input.charAt(input.length()  -  1)!=  '/')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(input.length()    -    1)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  if(input.charAt(0)  ==  '/'  &&  input.charAt(input.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.charAt(0)  ==  '/'  &&  input.charAt(input.length()  -  1)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.charAt(0)  ==  '/'  &&  input.charAt(input.length()  -  1)  ==  '/')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(input.length()    -    1)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getEmptyValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _nextSegment.getEmptyValue();  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _nextSegment.getEmptyValue();	  JsonPointer    expression    =    _nextSegment.getValue();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
6	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getAsString();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _nextSegment.getAsString();  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _nextSegment.getAsString();	  JsonPointer    expression    =    _nextSegment.getValue();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getElement();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _nextSegment.getElement();  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _nextSegment.getElement();	  JsonPointer    expression    =    _nextSegment.getValue();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  ':')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  ':')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  ':')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(0)    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  ':')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  ':')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  ':')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(0)    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  if(input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  ':')  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  ':')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  ':')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(0)    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  int  segmentIndex  =  _matchingElementIndex.indexOf(input);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  int  segmentIndex  =  _matchingElementIndex.indexOf(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	int  segmentIndex  =  _matchingElementIndex.indexOf(input);	  int    segmentIndex    =    _matchingPropertyName.indexOf(input);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
12	[BUG]  [BUGGY]  int  segmentIndex  =  _matchingPropertyName.lastIndexOf(input);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  int  segmentIndex  =  _matchingPropertyName.lastIndexOf(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	int  segmentIndex  =  _matchingPropertyName.lastIndexOf(input);	  int    segmentIndex    =    _matchingPropertyName.indexOf(input);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
13	[BUG]  [BUGGY]  int  segmentIndex  =  _matchingPropertyName.indexOf(input)+  1;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  int  segmentIndex  =  _matchingPropertyName.indexOf(input)+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	int  segmentIndex  =  _matchingPropertyName.indexOf(input)+  1;	  int    segmentIndex    =    _matchingPropertyName.indexOf(input);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
14	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  true);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  true);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseJsonPointer(input,  true);	  JsonPointer    expression    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  input);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseJsonPointer(input,  input);	  JsonPointer    expression    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  segment);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  segment);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseJsonPointer(input,  segment);	  JsonPointer    expression    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getValuePointer(0);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _nextSegment.getValuePointer(0);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _nextSegment.getValuePointer(0);	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
18	[BUG]  [BUGGY]  JsonPointer  expression  =  input.getValuePointer();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  input.getValuePointer();  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  input.getValuePointer();	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
19	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseElement(input);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseElement(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseElement(input);	  JsonPointer    expression    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)!=  '-')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)!=  '-')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()  ==  0  ||  input.charAt(0)!=  '-')  {	  if(input.length()    ==    0    ||    input.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {	  if(input.length()    ==    0    ||    input.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '-')  {	  if(input.length()    ==    0    ||    input.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0  ||  input.charAt(0)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()!=  0  ||  input.charAt(0)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()!=  0  ||  input.charAt(0)  ==  '/')  {	  if(input.length()!=    0    ||    input.charAt(0)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  _parseJsonPointer(input);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  _parseJsonPointer(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	_parseJsonPointer(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
25	[BUG]  [BUGGY]  _parseSegment(input);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  _parseSegment(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	_parseSegment(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
26	[BUG]  [BUGGY]  _parseInput(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  _parseInput(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	_parseInput(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {	  if(input    ==    null    ||    input.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
28	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input!=  null  ||  input.length()  ==  0)  {	  if(input    ==    null    ||    input.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
29	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()!=  0)  {	  if(input    ==    null    ||    input.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
30	[BUG]  [BUGGY]  if(input.length()!=  0  ||  input.charAt(input.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()!=  0  ||  input.charAt(input.length()  -  1)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()!=  0  ||  input.charAt(input.length()  -  1)!=  '/')  {	  if(input.length()    ==    0    ||    input.charAt(input.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(input.length())!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(input.length())!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()  ==  0  ||  input.charAt(input.length())!=  '/')  {	  if(input.length()    ==    0    ||    input.charAt(input.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(input.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(input.length()  -  1)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(input.length()  -  1)!=  '/')  {	  if(input.length()    ==    0    ||    input.charAt(input.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(0)  ==  '/')  {	  if(input.length()    ==    0    ||    input.charAt(0)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  true);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  true);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseSegment(input,  true);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
35	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  segment);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  segment);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseSegment(input,  segment);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
36	[BUG]  [BUGGY]  if(input.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()!=  0)  {	  if(input.length()!=    1)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
37	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()!=  0  ||  input.charAt(0)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input!=  null  ||  input.length()!=  0  ||  input.charAt(0)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input!=  null  ||  input.length()!=  0  ||  input.charAt(0)  ==  '/')  {	  if(input!=    null    ||    input.length()!=    0    ||    input.charAt(0)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  JsonPointer  next  =  _parseElement(input);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  next  =  _parseElement(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  next  =  _parseElement(input);	  JsonPointer    next    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  JsonPointer  next  =  _parseJsonPointer(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  next  =  _parseJsonPointer(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  next  =  _parseJsonPointer(input);	  JsonPointer    next    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  JsonPointer  next  =  _parseSegment(input);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  next  =  _parseSegment(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  next  =  _parseSegment(input);	  JsonPointer    next    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  '/')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(0)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  if(input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  '/')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(0)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()  ==  0  ||  input.charAt(0)  ==  '/'  ||  input.charAt(1)  ==  '/')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(0)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  String  segment  =  input.substring(0,  input.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  String  segment  =  input.substring(0,  input.length());  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	String  segment  =  input.substring(0,  input.length());	  String    segment    =    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  String  segment  =  input.substring(0,  input.length()));  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  String  segment  =  input.substring(0,  input.length()));  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	String  segment  =  input.substring(0,  input.length()));	  String    segment    =    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  String  segment  =  input.substring(0,  input.length()  +  1);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  String  segment  =  input.substring(0,  input.length()  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	String  segment  =  input.substring(0,  input.length()  +  1);	  String    segment    =    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  JsonPointer  expression  =  input.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  input.getValue();  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  input.getValue();	  JsonPointer    expression    =    _nextSegment.getValue();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
48	[BUG]  [BUGGY]  JsonPointer  next  =  _nextSegment.parse(input);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  next  =  _nextSegment.parse(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  next  =  _nextSegment.parse(input);	  JsonPointer    next    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
49	[BUG]  [BUGGY]  JsonPointer  next  =  _nextSegment.parseTail(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  next  =  _nextSegment.parseTail(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  next  =  _nextSegment.parseTail(input);	  JsonPointer    next    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	_reportUnsupportedOperation();	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
51	[BUG]  [BUGGY]  _parse(input);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  _parse(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	_parse(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(0)  ==  '/'  ||  input.charAt(input.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.charAt(0)  ==  '/'  ||  input.charAt(input.length()  -  1)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.charAt(0)  ==  '/'  ||  input.charAt(input.length()  -  1)  ==  '/')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(input.length()    -    1)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
53	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(input.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(input.length()  -  1)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(input.length()  -  1)!=  '/')  {	  if(input.length()    ==    0    ||    input.charAt(input.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  ':')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  ':')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  ':')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(0)    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
55	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0  ||  input.charAt(1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()!=  0  ||  input.charAt(1)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()!=  0  ||  input.charAt(1)!=  '/')  {	  if(input!=    null    ||    input.length()!=    0    ||    input.charAt(0)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  JsonPointer  expression  =  _parse(input);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parse(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parse(input);	  JsonPointer    expression    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
57	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  _nextSegment);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseJsonPointer(input,  _nextSegment);	  JsonPointer    expression    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  '/')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.charAt(0)  ==  '/'  ||  input.charAt(0)  ==  '/')  {	  if(input.charAt(0)    ==    '/'    ||    input.charAt(0)    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  _nextSegment);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseSegment(input,  _nextSegment);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
60	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()!=  1)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input!=  null  ||  input.length()!=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input!=  null  ||  input.length()!=  1)  {	  if(input.length()!=    1)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
61	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  1)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()!=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()!=  1)  {	  if(input.length()!=    1)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
62	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getEmptyValuePointer();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _nextSegment.getEmptyValuePointer();  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _nextSegment.getEmptyValuePointer();	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
63	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.compile(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _nextSegment.compile(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _nextSegment.compile(input);	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
64	[BUG]  [BUGGY]  if(input.length()  >=  1)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input.length()  >=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input.length()  >=  1)  {	  if(input.length()!=    1)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
65	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  1  ||  input.charAt(0)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()!=  1  ||  input.charAt(0)!=  '/')  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()!=  1  ||  input.charAt(0)!=  '/')  {	  if(input!=    null    ||    input.length()!=    0    ||    input.charAt(0)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  _asString  =  input.substring(0,  input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  _asString  =  input.substring(0,  input.length()  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	_asString  =  input.substring(0,  input.length()  -  1);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
67	[BUG]  [BUGGY]  _nextSegment.append(input);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  _nextSegment.append(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	_nextSegment.append(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  _asString);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  _asString);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseJsonPointer(input,  _asString);	  JsonPointer    expression    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  this);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseJsonPointer(input,  this);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseJsonPointer(input,  this);	  JsonPointer    expression    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
70	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input  ==  null  ||  input.length()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input  ==  null  ||  input.length()  >=  0)  {	  if(input    ==    null    ||    input.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
71	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  1)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  if(input!=  null  ||  input.length()  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	if(input!=  null  ||  input.length()  ==  1)  {	  if(input    ==    null    ||    input.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
72	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  _asString);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  _asString);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseSegment(input,  _asString);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
73	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  input);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseSegment(input,  input);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
74	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseInput(input);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  JsonPointer  expression  =  _parseInput(input);  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	JsonPointer  expression  =  _parseInput(input);	  JsonPointer    expression    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
75	[BUG]  [BUGGY]  int  segmentIndex  =  _matchingPropertyName.lastIndexOf('/');  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  int  segmentIndex  =  _matchingPropertyName.lastIndexOf('/');  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	int  segmentIndex  =  _matchingPropertyName.lastIndexOf('/');	  int    segmentIndex    =    _matchingPropertyName.indexOf(input);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
76	[BUG]  [BUGGY]  String  segment  =  input.substring(0,  input.length())+  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }        [BUGGY]  String  segment  =  input.substring(0,  input.length())+  1;  [BUGGY]      throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	95	95	1	replace	String  segment  =  input.substring(0,  input.length())+  1;	  String    segment    =    input.substring(0,    input.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
