bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  ==  '')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/'  ||  c  ==  '')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  ==  '')  {	  if(c!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  if(c!=  '/'  ||  c  ==  '')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c!=  '/'  ||  c  ==  '')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c!=  '/'  ||  c  ==  '')  {	  if(c!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  ==  '+')  {  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/'  ||  c  ==  '+')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  ==  '+')  {	  if(c    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  =='<  ')  {  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/'  ||  c  =='<  ')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  =='<  ')  {	  if(c    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ''  ||  c  ==  '')  {	  if(c    ==    '')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    '')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    '')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  if(c!=  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c!=  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c!=  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '/'    ||    c    ==    '*')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  char  c  =  input.charAt(i);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  char  c  =  input.charAt(i);  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	char  c  =  input.charAt(i);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  String  c  =  input.substring(i);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  String  c  =  input.substring(i);  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	String  c  =  input.substring(i);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  int  len  =  input.length();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  int  len  =  input.length();  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	int  len  =  input.length();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  String  c  =  input.substring(0,  i);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  String  c  =  input.substring(0,  i);  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	String  c  =  input.substring(0,  i);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  if(c  ==  ':'  ||  c  ==  '')  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ':'  ||  c  ==  '')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ':'  ||  c  ==  '')  {	  if(c    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  if(c  ==  ':'  ||  c  ==  '+')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ':'  ||  c  ==  '+')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ':'  ||  c  ==  '+')  {	  if(c    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  if(c  ==  ':'  ||  c  ==  '-')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ':'  ||  c  ==  '-')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ':'  ||  c  ==  '-')  {	  if(c    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  if(c  ==  ':'  ||  c  =='<  ')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ':'  ||  c  =='<  ')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ':'  ||  c  =='<  ')  {	  if(c    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  if(c  ==  ':')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ':')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ':')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '/')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i  +  1)));  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i  +  1)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i  +  1)));  }	  if(c    ==    '/')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i  +  1)));  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i  +  1)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i  +  1)));  }	  if(c    ==    '')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(0,  i)));  }  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(0,  i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(0,  i)));  }	  if(c    ==    '')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  _asString,  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  _asString,  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  _asString,  _parseTail(input.substring(i)));  }	  if(c    ==    '/'    ||    c    ==    '*')    {    return    new    JsonPointer(input,    input.substring(1,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '/'    ||    c    ==    '*')    {    return    new    JsonPointer(input,    input.substring(1,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  _asString,  input.substring(i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  _asString,  input.substring(i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  _asString,  input.substring(i),  _parseTail(input.substring(i)));  }	  if(c    ==    '/'    ||    c    ==    '*')    {    return    new    JsonPointer(input,    input.substring(1,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ''  ||  c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '/'    ||    c    ==    '')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  if(c!=  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c!=  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c!=  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {	  if(c    ==    '')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i  +  1)));  }  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i  +  1)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i  +  1)));  }	  if(c    ==    '/'    ||    c    ==    '*')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ''  ||  c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ''  ||  c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '/'    ||    c    ==    '*')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  JsonPointer.VALUE_STRING;  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  JsonPointer.VALUE_STRING;  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ''  ||  c  ==  '')  {  return  JsonPointer.VALUE_STRING;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  JsonPointer.EmpTY;  }  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  JsonPointer.EmpTY;  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ''  ||  c  ==  '')  {  return  JsonPointer.EmpTY;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  if(c  ==  '>')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '>')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '>')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '/')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  if(c!=  '')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c!=  '')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c!=  '')  {	  if(c!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  if(c  >=  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  >=  '/')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  >=  '/')  {	  if(c!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  if(c  ==  ':'  ||  c  ==  '>')  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ':'  ||  c  ==  '>')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ':'  ||  c  ==  '>')  {	  if(c    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
36	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input.substring(0,  i);  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input.substring(0,  i);  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ''  ||  c  ==  '')  {  return  input.substring(0,  i);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input;  }  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ''  ||  c  ==  '')  {  return  input;  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ''  ||  c  ==  '')  {  return  input;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  if(c  ==  '')  {  return  input.substring(0,  i);  }  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '')  {  return  input.substring(0,  i);  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '')  {  return  input.substring(0,  i);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  if(c  ==  ':'  ||  c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ':'  ||  c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ':'  ||  c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '/'    ||    c    ==    '*')    {    return    new    JsonPointer(input,    input.substring(1,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  if(c  ==  'A'  &&  c  <  =  'Z'  ||  c  >=  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  'A'  &&  c  <  =  'Z'  ||  c  >=  'a'  &&  c  <  =  'z')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  'A'  &&  c  <  =  'Z'  ||  c  >=  'a'  &&  c  <  =  'z')  {	  if(c    ==    '')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  if(c  ==  'A'  &&  c  <  =  'Z'  ||  c  ==  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  'A'  &&  c  <  =  'Z'  ||  c  ==  'a'  &&  c  <  =  'z')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  'A'  &&  c  <  =  'Z'  ||  c  ==  'a'  &&  c  <  =  'z')  {	  if(c    ==    '')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
42	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  if(c!=  '/'  &&  c  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c!=  '/'  &&  c  <  =  '9')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c!=  '/'  &&  c  <  =  '9')  {	  if(c!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  't')  {	  if(c!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  if(i  ==  end)  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(i  ==  end)  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(i  ==  end)  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	  if(c    ==    '')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(0,  i)));  }  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(0,  i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(0,  i)));  }	  if(c    ==    '/'    ||    c    ==    '*')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
47	[BUG]  [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(0,  i)));  }  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(0,  i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(0,  i)));  }	  if(c    ==    '/')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(1,  i)));  }  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(1,  i)));  }  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(1,  i)));  }	  if(c    ==    '/')    {    return    new    JsonPointer(input,    input.substring(0,    i),    _parseTail(input.substring(i)));    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  if(c  ==  ':'  &&  c  <  =  '9')  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);    [BUGGY]  if(c  ==  ':'  &&  c  <  =  '9')  {  [BUGGY]    return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ':'  &&  c  <  =  '9')  {	  if(c    ==    ':')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
