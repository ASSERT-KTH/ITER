bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  ==  '/')  {  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]  if(c  ==  '/')  {  [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/')  {	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
2	[BUG]  [BUGGY]  if(c  ==  '')  {  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]  if(c  ==  '')  {  [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '')  {	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
3	[BUG]  [BUGGY]  if(c  ==  ':')  {  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]  if(c  ==  ':')  {  [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  ':')  {	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
4	[BUG]  [BUGGY]  if(c!=  '/')  {  [CE]  illegal  start  of  type  [FE]          NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]  if(c!=  '/')  {  [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c!=  '/')  {	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]    [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	  	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
6	[BUG]  [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]  if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
7	[BUG]  [BUGGY]  if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]  if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
8	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
9	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]  if(c  ==  '/'  ||  c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }  [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  ==  '')  {  return  new  JsonPointer(input,  input.substring(0,  i),  _parseTail(input.substring(i)));  }	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
10	[BUG]  [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]  protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {  char  c  =  input.charAt(i);  [BUGGY]  if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  [BUGGY]  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	213	215	1	replace	if(c  ==  '/'  ||  c  ==  '*')  {  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }	if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),      _parseTail(input.substring(i)));  	non-compiled	[CE]  illegal  start  of  type	53	None	replace
