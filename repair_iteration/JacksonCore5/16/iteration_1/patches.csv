bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.length()!=  0)  {	  if(input    ==    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  if(input  ==  null  ||  input.length()  >=  0)  {  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.length()  >=  0)  {	  if(input    ==    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input);  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseJsonPointer(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseSegment(input);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  JsonPointer  EMPTY  =  _parseSegment(input);  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseSegment(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseTail(input);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  JsonPointer  EMPTY  =  _parseTail(input);  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseTail(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  JsonPointer  segment  =  _parseSegment(input);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  JsonPointer  segment  =  _parseSegment(input);  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  segment  =  _parseSegment(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  if((  input  ==  null)&&(input.length()  ==  0))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  if((  input  ==  null)&&(input.length()  ==  0))  {  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if((  input  ==  null)&&(input.length()  ==  0))  {	  if    ((    input    ==    null)||(input.length()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  if(input  ==  null  ||  input.equals(_asString))  {  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  if(input  ==  null  ||  input.equals(_asString))  {  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.equals(_asString))  {	  if(input    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input);  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _nextSegment.compile(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input);  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseElement(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parse(input);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  JsonPointer  EMPTY  =  _parse(input);  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parse(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  if(input  ==  null  ||  input.trim().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  if(input  ==  null  ||  input.trim().length()  ==  0)  {  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.trim().length()  ==  0)  {	  if(input!=    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  JsonPointer  expression  =  _parseSegment(input);  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _parseSegment(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getValuePointer();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  JsonPointer  expression  =  _nextSegment.getValuePointer();  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _nextSegment.getValuePointer();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  _parseTail(input);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  _parseTail(input);  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	_parseTail(input);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  if((  input  ==  null)||(input.length()!=  0))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {      [BUGGY]  if((  input  ==  null)||(input.length()!=  0))  {  [BUGGY]    return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if((  input  ==  null)||(input.length()!=  0))  {	  if    ((    input    ==    null)||(input.length()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
