bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _parseJsonPointer(input);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  _parseJsonPointer(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	_parseJsonPointer(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2	[BUG]  [BUGGY]  _parseSegment(input);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  _parseSegment(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	_parseSegment(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
3	[BUG]  [BUGGY]  _parseElement(input);  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  _parseElement(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	_parseElement(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  _nextSegment);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseJsonPointer(input,  _nextSegment);	  JsonPointer    EMPTY    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  true);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  true);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseJsonPointer(input,  true);	  JsonPointer    EMPTY    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  segment);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  segment);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseJsonPointer(input,  segment);	  JsonPointer    EMPTY    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseInput(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseInput(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseInput(input);	  JsonPointer    EMPTY    =    _parse(input);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parse(input,  segment);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parse(input,  segment);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parse(input,  segment);	  JsonPointer    EMPTY    =    _parse(input);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseSegment(input,  true);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseSegment(input,  true);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseSegment(input,  true);	  JsonPointer    EMPTY    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseSegment(input,  segment);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseSegment(input,  segment);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseSegment(input,  segment);	  JsonPointer    EMPTY    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  if(input  ==  null  ||  input.trim().length()!=  0)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  null  ||  input.trim().length()!=  0)  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.trim().length()!=  0)  {	  if(input    ==    null    ||    input.trim().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  if(input  ==  null  ||  input.equals(_asString)&&  input.trim().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  null  ||  input.equals(_asString)&&  input.trim().length()  ==  0)  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.equals(_asString)&&  input.trim().length()  ==  0)  {	  if(input    ==    null    ||    input.trim().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  true);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  true);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _parseSegment(input,  true);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseElement(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _parseElement(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _parseElement(input);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
15	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  EMPTY);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  EMPTY);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _parseSegment(input,  EMPTY);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input,  true);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input,  true);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _nextSegment.compile(input,  true);	  JsonPointer    EMPTY    =    _nextSegment.compile(input);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input,  _asString);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input,  _asString);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _nextSegment.compile(input,  _asString);	  JsonPointer    EMPTY    =    _nextSegment.compile(input);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input,  segment);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input,  segment);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _nextSegment.compile(input,  segment);	  JsonPointer    EMPTY    =    _nextSegment.compile(input);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(JsonPointer.class.getClassLoader());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  Thread.currentThread().setContextClassLoader(JsonPointer.class.getClassLoader());  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	Thread.currentThread().setContextClassLoader(JsonPointer.class.getClassLoader());	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	throw  new  IllegalArgumentException( " ");	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	Thread.currentThread().setContextClassLoader(getClass().getClassLoader());	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  if(input!=  null  ||  input.equals(_asString))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input!=  null  ||  input.equals(_asString))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input!=  null  ||  input.equals(_asString))  {	  if(input    ==    null    ||    input.equals(_asString))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  if(input  ==  null  ||  input.equalsIgnoreCase(_asString))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  null  ||  input.equalsIgnoreCase(_asString))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.equalsIgnoreCase(_asString))  {	  if(input    ==    null    ||    input.equals(_asString))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  if(input  ==  EMPTY  ||  input.equals(_asString))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  EMPTY  ||  input.equals(_asString))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  EMPTY  ||  input.equals(_asString))  {	  if(input    ==    null    ||    input.equals(_asString))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  if((  input  ==  null)&&(input.length()  ==  0)||(input.charAt(0)  ==  '/'))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if((  input  ==  null)&&(input.length()  ==  0)||(input.charAt(0)  ==  '/'))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if((  input  ==  null)&&(input.length()  ==  0)||(input.charAt(0)  ==  '/'))  {	  if((    input    ==    null)&&(input.length()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  if((  input  ==  null)&&(input.length()  ==  0)||(input.charAt(0)!=  '/'))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if((  input  ==  null)&&(input.length()  ==  0)||(input.charAt(0)!=  '/'))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if((  input  ==  null)&&(input.length()  ==  0)||(input.charAt(0)!=  '/'))  {	  if((    input    ==    null)&&(input.length()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  true);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  true);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  segment  =  _parseSegment(input,  true);	  JsonPointer    segment    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  EMPTY);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  EMPTY);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  segment  =  _parseSegment(input,  EMPTY);	  JsonPointer    segment    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  false);  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  false);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  segment  =  _parseSegment(input,  false);	  JsonPointer    segment    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  if((  input  ==  null)&&(input.length()!=  0))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if((  input  ==  null)&&(input.length()!=  0))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if((  input  ==  null)&&(input.length()!=  0))  {	  if((    input    ==    null)||(input.length()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  if((  input  ==  null)||(input.length()  >=  0))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if((  input  ==  null)||(input.length()  >=  0))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if((  input  ==  null)||(input.length()  >=  0))  {	  if((    input    ==    null)||(input.length()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.compile(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _nextSegment.compile(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _nextSegment.compile(input);	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getEmptyValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _nextSegment.getEmptyValue();  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _nextSegment.getEmptyValue();	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getEmptyValuePointer();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _nextSegment.getEmptyValuePointer();  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _nextSegment.getEmptyValuePointer();	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  segment);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  segment);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseElement(input,  segment);	  JsonPointer    EMPTY    =    _parseElement(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  true);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  true);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseElement(input,  true);	  JsonPointer    EMPTY    =    _parseElement(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  _nextSegment);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  _nextSegment);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseElement(input,  _nextSegment);	  JsonPointer    EMPTY    =    _parseElement(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parse(input,  true);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parse(input,  true);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parse(input,  true);	  JsonPointer    EMPTY    =    _parse(input);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
40	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getValuePointer(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _nextSegment.getValuePointer(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _nextSegment.getValuePointer(input);	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
41	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getElement();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _nextSegment.getElement();  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _nextSegment.getElement();	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  this);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  this);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseElement(input,  this);	  JsonPointer    EMPTY    =    _parseElement(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  false);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseElement(input,  false);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseElement(input,  false);	  JsonPointer    EMPTY    =    _parseElement(input);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  if(_asString  ==  null  ||  input.equals(_asString))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(_asString  ==  null  ||  input.equals(_asString))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(_asString  ==  null  ||  input.equals(_asString))  {	  if(input    ==    null    ||    input.equals(_asString))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  if(input  ==  null  ||  input.startsWith(_asString))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  null  ||  input.startsWith(_asString))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.startsWith(_asString))  {	  if(input    ==    null    ||    input.equals(_asString))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  this);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  this);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _parseSegment(input,  this);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  this);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  this);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseJsonPointer(input,  this);	  JsonPointer    EMPTY    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  false);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  false);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseJsonPointer(input,  false);	  JsonPointer    EMPTY    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(JsonPointer.class);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  Thread.currentThread().setContextClassLoader(JsonPointer.class);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	Thread.currentThread().setContextClassLoader(JsonPointer.class);	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  JsonPointerContextClassLoader());  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  Thread.currentThread().setContextClassLoader(new  JsonPointerContextClassLoader());  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	Thread.currentThread().setContextClassLoader(new  JsonPointerContextClassLoader());	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  this);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  this);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  segment  =  _parseSegment(input,  this);	  JsonPointer    segment    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  JsonPointer  segment  =  _parseElement(input);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  segment  =  _parseElement(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  segment  =  _parseElement(input);	  JsonPointer    segment    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	_reportUnsupportedOperation();	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
54	[BUG]  [BUGGY]  _parse(input);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  _parse(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	_parse(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
55	[BUG]  [BUGGY]  if((  input  ==  null)&&(input.length()  ==  0)||(input!=  null))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if((  input  ==  null)&&(input.length()  ==  0)||(input!=  null))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if((  input  ==  null)&&(input.length()  ==  0)||(input!=  null))  {	  if((    input    ==    null)&&(input.length()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
56	[BUG]  [BUGGY]  if(input  ==  null  ||(input.length()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  null  ||(input.length()  ==  0))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||(input.length()  ==  0))  {	  if((    input    ==    null)&&(input.length()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input,  this);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.compile(input,  this);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _nextSegment.compile(input,  this);	  JsonPointer    EMPTY    =    _nextSegment.compile(input);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  aughtException( " ");  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  aughtException( " ");  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	aughtException( " ");	  if(input    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  JsonPointer  expression  =  input.getValuePointer();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  input.getValuePointer();  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  input.getValuePointer();	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
61	[BUG]  [BUGGY]  JsonPointer  expression  =  _nextSegment.getAsString();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _nextSegment.getAsString();  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _nextSegment.getAsString();	  JsonPointer    expression    =    _nextSegment.getValuePointer();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  _asString);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _parseJsonPointer(input,  _asString);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _parseJsonPointer(input,  _asString);	  JsonPointer    EMPTY    =    _parseJsonPointer(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  _asString);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  segment  =  _parseSegment(input,  _asString);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  segment  =  _parseSegment(input,  _asString);	  JsonPointer    segment    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
64	[BUG]  [BUGGY]  JsonPointer  segment  =  _parseSegments(input);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  segment  =  _parseSegments(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  segment  =  _parseSegments(input);	  JsonPointer    segment    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  _reportUndetectableSource(input);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  _reportUndetectableSource(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	_reportUndetectableSource(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
66	[BUG]  [BUGGY]  _appendCompile(input);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  _appendCompile(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	_appendCompile(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
67	[BUG]  [BUGGY]  _parseAndFix(input);  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  _parseAndFix(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	_parseAndFix(input);	  _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  if(input  ==  null  ||  input.equals(_asString)&&  input.equals(_matchingPropertyName))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  null  ||  input.equals(_asString)&&  input.equals(_matchingPropertyName))  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.equals(_asString)&&  input.equals(_matchingPropertyName))  {	  if(input    ==    null    ||    input.equals(_asString))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
69	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  null  ||  input.length()  <  =  0)  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.length()  <  =  0)  {	  if(input    ==    null    ||    input.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  _asString);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  expression  =  _parseSegment(input,  _asString);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  expression  =  _parseSegment(input,  _asString);	  JsonPointer    expression    =    _parseSegment(input);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
71	[BUG]  [BUGGY]  if(input  ==  null  ||  input.equals(_asString)||  input.trim().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  if(input  ==  null  ||  input.equals(_asString)||  input.trim().length()  ==  0)  {  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	if(input  ==  null  ||  input.equals(_asString)||  input.trim().length()  ==  0)  {	  if(input    ==    null    ||    input.trim().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
72	[BUG]  [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.parse(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {        [BUGGY]  JsonPointer  EMPTY  =  _nextSegment.parse(input);  [BUGGY]      return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(     "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':       "+     "\     "     "+input+     "\     "     ");  }  return  _parseTail(input);  }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	91	91	1	replace	JsonPointer  EMPTY  =  _nextSegment.parse(input);	  JsonPointer    EMPTY    =    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
