bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  JsonPointer(input,  _asString.substring(1),  EMPTY);  [CE]  illegal  start  of  expression  [FE]    NumberFormatException  [CONTEXT]  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }    [BUGGY]  return  new  JsonPointer(input,  _asString.substring(1),  EMPTY);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	225	225	1	replace	return  new  JsonPointer(input,  _asString.substring(1),  EMPTY);	return  new  JsonPointer(input,  input.substring(1),  EMPTY);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  return  new  JsonPointer(input,  c.substring(1),  EMPTY);  [CE]  illegal  start  of  expression  [FE]      NumberFormatException  [CONTEXT]  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }    [BUGGY]  return  new  JsonPointer(input,  c.substring(1),  EMPTY);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	225	225	1	replace	return  new  JsonPointer(input,  c.substring(1),  EMPTY);	return  new  JsonPointer(input,  input.substring(1),  EMPTY);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i),  EMPTY);  [CE]  illegal  start  of  expression  [FE]        NumberFormatException  [CONTEXT]  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }    [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i),  EMPTY);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	225	225	1	replace	return  new  JsonPointer(input,  input.substring(0,  i),  EMPTY);	return  new  JsonPointer(input,  input.substring(1),  EMPTY);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  return  new  JsonPointer(input,  String.valueOf(i),  EMPTY);  [CE]  illegal  start  of  expression  [FE]          NumberFormatException  [CONTEXT]  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }    [BUGGY]  return  new  JsonPointer(input,  String.valueOf(i),  EMPTY);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	225	225	1	replace	return  new  JsonPointer(input,  String.valueOf(i),  EMPTY);	return  new  JsonPointer(input,  input.substring(1),  EMPTY);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            NumberFormatException  [CONTEXT]  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }    [BUGGY]    [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	225	225	1	replace	  	return  new  JsonPointer(input,  input.substring(1),  EMPTY);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  return  new  JsonPointer(input,  i,  EMPTY);  [CE]  illegal  start  of  expression  [FE]    NumberFormatException  [CONTEXT]  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }    [BUGGY]  return  new  JsonPointer(input,  i,  EMPTY);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	225	225	1	replace	return  new  JsonPointer(input,  i,  EMPTY);	return  new  JsonPointer(input,  input.substring(1),  EMPTY);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  return  new  JsonPointer(input,  _asString.substring(i),  EMPTY);  [CE]  illegal  start  of  expression  [FE]      NumberFormatException  [CONTEXT]  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }    [BUGGY]  return  new  JsonPointer(input,  _asString.substring(i),  EMPTY);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	225	225	1	replace	return  new  JsonPointer(input,  _asString.substring(i),  EMPTY);	return  new  JsonPointer(input,  input.substring(1),  EMPTY);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i));  [CE]  illegal  start  of  expression  [FE]    NumberFormatException  [CONTEXT]  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }    [BUGGY]  return  new  JsonPointer(input,  input.substring(0,  i));  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	225	225	1	replace	return  new  JsonPointer(input,  input.substring(0,  i));	return  new  JsonPointer(input,  input.substring(1),  EMPTY);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  return  new  JsonPointer(input,  c,  EMPTY);  [CE]  illegal  start  of  expression  [FE]      NumberFormatException  [CONTEXT]  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  }    [BUGGY]  return  new  JsonPointer(input,  c,  EMPTY);  [BUGGY]  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5773502691896258	225	225	1	replace	return  new  JsonPointer(input,  c,  EMPTY);	return  new  JsonPointer(input,  input.substring(1),  EMPTY);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
