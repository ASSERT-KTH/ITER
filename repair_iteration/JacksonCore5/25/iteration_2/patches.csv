bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  =  End;)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  1;  i  <  =  End;)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  1;  i  <  =  End;)  {	  for(int    i    =    1;    i    <    End;)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  End;)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0;  i  <  End;)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0;  i  <  End;)  {	  for(int    i    =    1;    i    <    End;)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  End;)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  2;  i  <  End;)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  2;  i  <  End;)  {	  for(int    i    =    1;    i    <    End;)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  String  c  =  input.charAt(end);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  String  c  =  input.charAt(end);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	String  c  =  input.charAt(end);	  char    c    =    input.charAt(end);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  =  end;  ++i)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  1;  i  <  =  end;  ++i)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  1;  i  <  =  end;  ++i)  {	  for(int    i    =    1;    i    <    end;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  end;  i++)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  1;  i  <  end;  i++)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  1;  i  <  end;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  input.length();  i  <  len;  i++)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0,  len  =  input.length();  i  <  len;  i++)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0,  len  =  input.length();  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  input.length();  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0,  len  =  input.length();  i  <  len;  ++i)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0,  len  =  input.length();  i  <  len;  ++i)  {	  for(int    i    =    0,    len    =    input.length();    i    <    len;    )    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  input.length();  i  <  end;  )  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0,  len  =  input.length();  i  <  end;  )  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0,  len  =  input.length();  i  <  end;  )  {	  for(int    i    =    0,    len    =    input.length();    i    <    len;    )    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  input.length();  ++i)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0;  i  <  input.length();  ++i)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0;  i  <  input.length();  ++i)  {	  for(int    i    =    0;    i    <    input.length();    )    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  input.length();  i++)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0;  i  <  input.length();  i++)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0;  i  <  input.length();  i++)  {	  for(int    i    =    0;    i    <    input.length();    )    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  end.length();  )  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0;  i  <  end.length();  )  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0;  i  <  end.length();  )  {	  for(int    i    =    0;    i    <    input.length();    )    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  2;  i  <  len;  ++i)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  2;  i  <  len;  ++i)  {	  for(int    i    =    1;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {	  for(int    i    =    0;    i    <    end;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  input.length();  ++i)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0,  len  =  input.length();  ++i)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0,  len  =  input.length();  ++i)  {	  for(int    i    =    0;    i    <    len;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  char  c  =  input.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  char  c  =  input.charAt(i  +  1);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	char  c  =  input.charAt(i  +  1);	  String    c    =    input.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
18	[BUG]  [BUGGY]  int  len  =  input.length()  -  1;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  int  len  =  input.length()  -  1;  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	int  len  =  input.length()  -  1;	  int    len    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  int  len  =  input.length()  +  1;  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  int  len  =  input.length()  +  1;  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	int  len  =  input.length()  +  1;	  int    len    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  int  len  =  input.length()  -  2;  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  int  len  =  input.length()  -  2;  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	int  len  =  input.length()  -  2;	  int    len    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  String  c  =  input.charAt(0);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  String  c  =  input.charAt(0);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	String  c  =  input.charAt(0);	  char    c    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  char  c  =  input.charAt(1);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  char  c  =  input.charAt(1);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	char  c  =  input.charAt(1);	  char    c    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  char  c  =  input.substring(0,  end);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  char  c  =  input.substring(0,  end);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	char  c  =  input.substring(0,  end);	  String    c    =    input.substring(0,    end);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  String  c  =  input.substring(0,  end  +  1);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  String  c  =  input.substring(0,  end  +  1);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	String  c  =  input.substring(0,  end  +  1);	  String    c    =    input.substring(0,    end);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  String  c  =  input.substring(0,  end  -  1);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  String  c  =  input.substring(0,  end  -  1);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	String  c  =  input.substring(0,  end  -  1);	  String    c    =    input.substring(0,    end);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  1;  i  ==  end;)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  1;  i  ==  end;)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  1;  i  ==  end;)  {	  for(int    i    =    1;    i!=    end;)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  String  c  =  input.substring(0,  end).trim();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  String  c  =  input.substring(0,  end).trim();  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	String  c  =  input.substring(0,  end).trim();	  String    c    =    input.substring(0,    end);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  input.length;  ++i)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0;  i  <  input.length;  ++i)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0;  i  <  input.length;  ++i)  {	  for(int    i    =    0;    i    <    input.length;    )    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  String  c  =  input.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  String  c  =  input.charAt(i  +  1);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	String  c  =  input.charAt(i  +  1);	  String    c    =    input.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  >=  end;)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0;  i  >=  end;)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0;  i  >=  end;)  {	  for(int    i    =    1;    i    >=    end;)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i!=  end;)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  0;  i!=  end;)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  0;  i!=  end;)  {	  for(int    i    =    1;    i    >=    end;)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  char  c  =  input.charAt(end  -  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  char  c  =  input.charAt(end  -  1);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	char  c  =  input.charAt(end  -  1);	  char    c    =    input.charAt(end);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  char  c  =  input.charAt(end  +  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  char  c  =  input.charAt(end  +  1);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	char  c  =  input.charAt(end  +  1);	  char    c    =    input.charAt(end);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  char  len  =  input.length();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  char  len  =  input.length();  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	char  len  =  input.length();	  int    len    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  2;  i  <  len;  i++)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  2;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    len;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  input.length();  )  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  1;  i  <  input.length();  )  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  1;  i  <  input.length();  )  {	  for(int    i    =    0;    i    <    input.length();    )    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  String  c  =  input.charAt(1);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  String  c  =  input.charAt(1);  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	String  c  =  input.charAt(1);	  char    c    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  1;  i!=  0;)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();        [BUGGY]  for(int  i  =  1;  i!=  0;)  {  [BUGGY]      char  c  =  input.charAt(i);  if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	211	211	1	replace	for(int  i  =  1;  i!=  0;)  {	  for(int    i    =    1;    i!=    end;)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
