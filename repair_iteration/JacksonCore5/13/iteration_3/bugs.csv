bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.substring(0,  segment.length());  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.substring(0,  segment.length());  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.substring(0,  segment.length());	  _matchingPropertyName    =    fullString.substring(0,    segment.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  _matchingPropertyName  =  fullString.substring(0,  segment.length());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  fullString.substring(0,  segment.length());  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  fullString.substring(0,  segment.length());	  _matchingPropertyName    =    fullString.substring(0,    segment.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.substring(0,  fullString.length());  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.substring(0,  fullString.length());  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.substring(0,  fullString.length());	  _matchingPropertyName    =    fullString.substring(0,    segment.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  _matchingPropertyName  =  fullString.trim()  +  1;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  fullString.trim()  +  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  fullString.trim()  +  1;	  _matchingPropertyName    =    fullString.trim();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  _matchingPropertyName  =  fullString.toString();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  fullString.toString();  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  fullString.toString();	  _matchingPropertyName    =    segment.toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  _matchingPropertyName  =  fullString.toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  fullString.toLowerCase()  +  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  fullString.toLowerCase()  +  1;	  _matchingPropertyName    =    segment.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.getPropertyName()  +  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.getPropertyName()  +  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.getPropertyName()  +  1;	  _matchingPropertyName    =    segment.getPropertyName();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.toLowerCase(Locale.ENGLISH,  true);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.toLowerCase(Locale.ENGLISH,  true);	  _matchingPropertyName    =    segment.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.toLowerCase(Locale.ENGLISH)+  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.toLowerCase(Locale.ENGLISH)+  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.toLowerCase(Locale.ENGLISH)+  1;	  _matchingPropertyName    =    segment.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  _matchingPropertyName  =  fullString.toLowerCase(Locale.ENGLISH,  segment);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  fullString.toLowerCase(Locale.ENGLISH,  segment);  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  fullString.toLowerCase(Locale.ENGLISH,  segment);	  _matchingPropertyName    =    fullString.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  _matchingPropertyName  =  fullString.getPropertyName()  +  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  fullString.getPropertyName()  +  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  fullString.getPropertyName()  +  1;	  _matchingPropertyName    =    fullString.getPropertyName();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  _matchingPropertyName  =  fullString.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  fullString.trim().toLowerCase();  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  fullString.trim().toLowerCase();	  _matchingPropertyName    =    segment.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.trim().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.trim().toLowerCase(Locale.ENGLISH);	  _matchingPropertyName    =    segment.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.trim().toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.trim().toLowerCase()  +  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.trim().toLowerCase()  +  1;	  _matchingPropertyName    =    segment.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.toUpperCase(next);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.toUpperCase(next);  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.toUpperCase(next);	  _matchingPropertyName    =    segment.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  _matchingPropertyName  =  fullString  +  segment.toString();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  fullString  +  segment.toString();  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  fullString  +  segment.toString();	  _matchingPropertyName    =    segment.toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.substring(0,  segment.length()));  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.substring(0,  segment.length()));  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.substring(0,  segment.length()));	  _matchingPropertyName    =    segment.substring(0,    segment.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.trim()  *  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.trim()  *  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.trim()  *  1;	  _matchingPropertyName    =    segment.trim()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.getPropertyName()  + "_matching ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.getPropertyName()  + "_matching ";  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.getPropertyName()  + "_matching ";	  _matchingPropertyName    =    segment.getPropertyName();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.toUpperCase()  +  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.toUpperCase()  +  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.toUpperCase()  +  1;	  _matchingPropertyName    =    segment.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
21	[BUG]  [BUGGY]  _matchingPropertyName  =  segment!=  null?  segment.toUpperCase()  : "null ";  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment!=  null?  segment.toUpperCase()  : "null ";  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment!=  null?  segment.toUpperCase()  : "null ";	  _matchingPropertyName    =    segment.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.toUpperCase(Locale.ENGLISH);  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.toUpperCase(Locale.ENGLISH);	  _matchingPropertyName    =    fullString.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.toString()  +  1;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.toString()  +  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.toString()  +  1;	  _matchingPropertyName    =    segment.toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.toLowerCase(Locale.ENGLISH,  segment);  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.toLowerCase(Locale.ENGLISH,  segment);  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.toLowerCase(Locale.ENGLISH,  segment);	  _matchingPropertyName    =    segment.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.trim().toLowerCase(lenient);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.trim().toLowerCase(lenient);  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.trim().toLowerCase(lenient);	  _matchingPropertyName    =    segment.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  _matchingPropertyName  =  segment.toLowerCase()  *  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      protected  JsonPointer(String  fullString,  String  segment,  JsonPointer  next)  {  _asString  =  fullString;  _nextSegment  =  next;        [BUGGY]  _matchingPropertyName  =  segment.toLowerCase()  *  1;  [BUGGY]      _matchingElementIndex  =  _parseIndex(segment);  }  [CLASS]  JsonPointer  [METHOD]  <init>  [RETURN_TYPE]  JsonPointer)  String  fullString  String  segment  JsonPointer  next  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	69	69	1	replace	_matchingPropertyName  =  segment.toLowerCase()  *  1;	  _matchingPropertyName    =    segment.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
