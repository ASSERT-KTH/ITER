bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  c  =  input.charAt(i)+  1;  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  String  c  =  input.charAt(i)+  1;  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	String  c  =  input.charAt(i)+  1;	  char    c    =    input.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  char  c  =  input.charAt(i)+  2;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  char  c  =  input.charAt(i)+  2;  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	char  c  =  input.charAt(i)+  2;	  char    c    =    input.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  char  c  =  input.charAt(i)+  4;  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  char  c  =  input.charAt(i)+  4;  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	char  c  =  input.charAt(i)+  4;	  char    c    =    input.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  Character  c  =  input.charAt(i);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  Character  c  =  input.charAt(i);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	Character  c  =  input.charAt(i);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  String  c  =  input.substring(0,  i);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  String  c  =  input.substring(0,  i);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	String  c  =  input.substring(0,  i);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  String  c  =  input.substring(i  +  1);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  String  c  =  input.substring(i  +  1);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	String  c  =  input.substring(i  +  1);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  String  c  =  input.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  String  c  =  input.charAt(i  +  1);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	String  c  =  input.charAt(i  +  1);	  char    c    =    input.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  char  c  =  input.charAt(i  +  2);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  char  c  =  input.charAt(i  +  2);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	char  c  =  input.charAt(i  +  2);	  char    c    =    input.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  String  c  =  input.charAt(0);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  String  c  =  input.charAt(0);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	String  c  =  input.charAt(0);	  char    c    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  char  c  =  input.charAt(1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  char  c  =  input.charAt(1);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	char  c  =  input.charAt(1);	  char    c    =    input.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  String  c  =  input.charAt(i++);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  String  c  =  input.charAt(i++);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	String  c  =  input.charAt(i++);	  char    c    =    input.charAt(i++);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  String  c  =  input.charAt(i);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  String  c  =  input.charAt(i);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	String  c  =  input.charAt(i);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  Character.toLowerCase(c);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	Character.toLowerCase(c);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  char  c  =  input.charAt(i  *  1);  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  char  c  =  input.charAt(i  *  1);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	char  c  =  input.charAt(i  *  1);	  char    c    =    input.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  Character  c  =  input.charAt(i++);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  Character  c  =  input.charAt(i++);  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	Character  c  =  input.charAt(i++);	  char    c    =    input.charAt(i++);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  char  c  =  input.charAt(i)+  3;  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    protected  static  JsonPointer  _parseTail(String  input)  {  final  int  end  =  input.length();  for  (int  i  =  1;  i  <  end;  )  {    [BUGGY]  char  c  =  input.charAt(i)+  3;  [BUGGY]    if  (c  ==  '/')  {  //  common  case,  got  a  segment  return  new  JsonPointer(input,  input.substring(1,  i),  _parseTail(input.substring(i)));  }  ++i;  if  (c  ==  '~'  &&  i  <  end)  {  //  possibly,  quote  return  _parseQuotedTail(input,  i);  }  [CLASS]  JsonPointer  [METHOD]  _parseTail  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  char  c  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  name  segment  str  boolean  int  _matchingElementIndex  end  i  index  len  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	212	212	1	replace	char  c  =  input.charAt(i)+  3;	  char    c    =    input.charAt(i)+    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
