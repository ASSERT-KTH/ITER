bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  input  ==  null?  JsonPointer.NULL  :  _parseTail(input);  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input  ==  null?  JsonPointer.NULL  :  _parseTail(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input  ==  null?  JsonPointer.NULL  :  _parseTail(input);	  return    input!=    null?    JsonPointer.NULL    :    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _matchingPropertyName(input);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _matchingPropertyName(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  JsonPointer.NULL  :  _matchingPropertyName(input);	  return    input!=    null?    JsonPointer.NULL    :    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  return  _parse(input,  expression);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  _parse(input,  expression);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  _parse(input,  expression);	  return    _parse(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  return  _parse(input,  segment);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  _parse(input,  segment);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  _parse(input,  segment);	  return    _parse(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  return  _parse(input,  input);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  _parse(input,  input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  _parse(input,  input);	  return    _parse(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/': "+input+ " " ");  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/': "+input+ " " ");  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/': "+input+ " " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/': "+_asString+ " " ");  }  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/': "+_asString+ " " ");  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( "Invalid  input:  JSON  Pointer  expression  must  start  with  '/': "+_asString+ " " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  return  input  ==  null?  EMPTY  :  _parseTail(input);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input  ==  null?  EMPTY  :  _parseTail(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input  ==  null?  EMPTY  :  _parseTail(input);	  return    input!=    null?    EMPTY    :    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonPointer(input):  input;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input  ==  null?  JsonNull.createJsonPointer(input):  input;  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonPointer(input):  input;	  return    input!=    null?    JsonNull.createJsonPointer(input):    input;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  EMPTY;  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  EMPTY;  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  JsonNull.createJsonPointer(input):  EMPTY;	  return    input!=    null?    JsonNull.createJsonPointer(input):    input;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input.toString();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input.toString();  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  JsonNull.createJsonNull()  :  input.toString();	  return    input!=    null?    JsonNull.createJsonNull()    :    input;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input.toString();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input.toString();  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonNull()  :  input.toString();	  return    input    ==    null?    JsonNull.createJsonNull()    :    input;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  return  _parseInput(input,  expression);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  _parseInput(input,  expression);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  _parseInput(input,  expression);	  return    _parseInput(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  return  _parseInput(input,  input);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  _parseInput(input,  input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  _parseInput(input,  input);	  return    _parseInput(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  return  _parseInput(input,  segment);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  _parseInput(input,  segment);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  _parseInput(input,  segment);	  return    _parseInput(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull(input):  input;  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull(input):  input;  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonNull(input):  input;	  return    input    ==    null?    JsonNull.createJsonNull()    :    input;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  return  EMPTY.compile(input);  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  EMPTY.compile(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  EMPTY.compile(input);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  return  new  JsonPointer(_asString,  input);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  new  JsonPointer(_asString,  input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  new  JsonPointer(_asString,  input);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  return  compile(input,  _asString);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  compile(input,  _asString);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  compile(input,  _asString);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  return  compile(input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  compile(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  compile(input);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  return  EMPTY.parse(input);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  EMPTY.parse(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  EMPTY.parse(input);	  return    _parse(input);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  return  _parseInput(input,  _asString);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  _parseInput(input,  _asString);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  _parseInput(input,  _asString);	  return    _parseInput(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  input.toString();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  EMPTY  :  input.toString();  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  EMPTY  :  input.toString();	  return    _parseInput(input);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseString(input);  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseString(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  JsonPointer.NULL  :  _parseString(input);	  return    input!=    null?    JsonPointer.NULL    :    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseInput(input);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  JsonPointer.NULL  :  _parseInput(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  JsonPointer.NULL  :  _parseInput(input);	  return    input!=    null?    JsonPointer.NULL    :    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input.toCharArray();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  JsonNull.createJsonNull()  :  input.toCharArray();  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  JsonNull.createJsonNull()  :  input.toCharArray();	  return    input!=    null?    JsonNull.createJsonNull()    :    input;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  return  EMPTY;  }  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  return  EMPTY;  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  return  EMPTY;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  if(input  ==  null  ||  input.length()  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	if(input  ==  null  ||  input.length()  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  return  JsonPointer.createInstance(_asString,  input);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  JsonPointer.createInstance(_asString,  input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  JsonPointer.createInstance(_asString,  input);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input.toLowerCase();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input  ==  null?  JsonNull.createJsonNull()  :  input.toLowerCase();  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input  ==  null?  JsonNull.createJsonNull()  :  input.toLowerCase();	  return    input    ==    null?    JsonNull.createJsonNull()    :    input;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  _parseString(input);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  EMPTY  :  _parseString(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  EMPTY  :  _parseString(input);	  return    input!=    null?    EMPTY    :    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  return  input!=  null?  EMPTY  :  _parseInput(input);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  EMPTY  :  _parseInput(input);  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  EMPTY  :  _parseInput(input);	  return    input!=    null?    EMPTY    :    _parseTail(input);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input.toLowerCase();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input.toLowerCase();  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  JsonNull.createJsonPointer(input):  input.toLowerCase();	  return    input!=    null?    JsonNull.createJsonPointer(input):    input;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input.toString();  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]    public  static  JsonPointer  compile(String  input)  throws  IllegalArgumentException  {  if  ((input  ==  null)  ||  input.length()  ==  0)  {  return  EMPTY;  }  if  (input.charAt(0)  !=  '/')  {  throw  new  IllegalArgumentException(   "Invalid  input:  JSON  Pointer  expression  must  start  with  '/':     "+   "\   "   "+input+   "\   "   ");  }    [BUGGY]  return  input!=  null?  JsonNull.createJsonPointer(input):  input.toString();  [BUGGY]    }  [CLASS]  JsonPointer  [METHOD]  compile  [RETURN_TYPE]  JsonPointer  String  input  [VARIABLES]  JsonPointer  EMPTY  _nextSegment  next  String  _asString  _matchingPropertyName  fullString  input  segment  boolean  int  _matchingElementIndex  	projects/JacksonCore5/src/main/java/com/fasterxml/jackson/core/JsonPointer.java	0.5	98	98	1	replace	return  input!=  null?  JsonNull.createJsonPointer(input):  input.toString();	  return    input!=    null?    JsonNull.createJsonPointer(input):    input;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
