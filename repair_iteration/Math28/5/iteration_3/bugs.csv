bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  row  =  table.getRowCount()  /  i;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount()  /  i;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount()  /  i;	  int    row    =    table.getRowCount()    +    i;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
2	[BUG]  [BUGGY]  int  row  =  table.getRowCount()  -  i;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount()  -  i;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount()  -  i;	  int    row    =    table.getRowCount()    +    i;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
3	[BUG]  [BUGGY]  int  row  =  table.getRowCount()  *  i;  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount()  *  i;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount()  *  i;	  int    row    =    table.getRowCount()    +    i;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
4	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getRow(row  -  1);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getRow(row  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getRow(row  -  1);	  Integer    minRow    =(Integer)table.getRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getRow(minIndex  -  1);  [CE]  illegal  start  of  type  [FE]                          MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getRow(minIndex  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getRow(minIndex  -  1);	  Integer    minRow    =(Integer)table.getRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
6	[BUG]  [BUGGY]  Integer  row  =(Integer)row.getValue();  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(Integer)row.getValue();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(Integer)row.getValue();	  Integer    row    =(Integer)row.next();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  0;  i++)  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  0;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >=  0;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    0;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
8	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  0;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  0;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  ==  0;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    0;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
9	[BUG]  [BUGGY]  for(;  i  <  column.getWidth()  &&  col!=  0;  i++)  {  [CE]  cannot  find  symbol  column  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  column.getWidth()  &&  col!=  0;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  column.getWidth()  &&  col!=  0;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    0;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  column	43	None	replace
10	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  minIndex;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  minIndex;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >=  minIndex;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    minIndex;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
11	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  minIndex;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  minIndex;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  ==  minIndex;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    minIndex;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
12	[BUG]  [BUGGY]  for(;  i  <  minIndex.getWidth()  &&  col!=  row.getColumn();  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  minIndex.getWidth()  &&  col!=  row.getColumn();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  minIndex.getWidth()  &&  col!=  row.getColumn();  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    minIndex;    i++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	40	None	replace
13	[BUG]  [BUGGY]  Integer  row  =  table.getRow(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getRow(i  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getRow(i  +  1);	  Integer    row    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
14	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(row  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(row  +  1);	  Integer    row    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
15	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  table.getColumnCount();  i++)  {  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  table.getColumnCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  ==  table.getColumnCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    col    ==    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
16	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  column.getRowCount();  i++)  {  [CE]  cannot  find  symbol  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  column.getRowCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  ==  column.getRowCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    col    ==    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
17	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  table.getColumnCount();  i++)  {  [CE]  cannot  find  symbol  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  table.getColumnCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  table.getColumnCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    col    ==    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
18	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(row,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(row,  col);	  Integer    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
19	[BUG]  [BUGGY]  Integer  row  =  table.getRow(i,  col);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getRow(i,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getRow(i,  col);	  Integer    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
20	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  i);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(i,  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(i,  i);	  Integer    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
21	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  col  +  1);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(i,  col  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(i,  col  +  1);	  Integer    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
22	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getRow(minIndex);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getRow(minIndex);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getRow(minIndex);	  Integer    minRow    =(Integer)table.getRow(row);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
23	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getRow(row,  i);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getRow(row,  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getRow(row,  i);	  Integer    minRow    =(Integer)table.getRow(row);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
24	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getRow(row,  col);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getRow(row,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getRow(row,  col);	  Integer    minRow    =(Integer)table.getRow(row);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
25	[BUG]  [BUGGY]  For(;  i  <  row.getWidth()  &&  col  >=  DEFAULT_EPSILON;  i++)  {  [CE]  illegal  start  of  expression  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  For(;  i  <  row.getWidth()  &&  col  >=  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	For(;  i  <  row.getWidth()  &&  col  >=  DEFAULT_EPSILON;  i++)  {	  For(;    i    <    row.getWidth()    &&    col!=    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
26	[BUG]  [BUGGY]  For(;  i  <  row.getWidth()  &&  col  ==  DEFAULT_EPSILON;  i++)  {  [CE]  illegal  start  of  expression  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  For(;  i  <  row.getWidth()  &&  col  ==  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	For(;  i  <  row.getWidth()  &&  col  ==  DEFAULT_EPSILON;  i++)  {	  For(;    i    <    row.getWidth()    &&    col!=    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
27	[BUG]  [BUGGY]  For(;  i  <  row.getHeight()  &&  col!=  DEFAULT_EPSILON;  i++)  {  [CE]  illegal  start  of  expression  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  For(;  i  <  row.getHeight()  &&  col!=  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	For(;  i  <  row.getHeight()  &&  col!=  DEFAULT_EPSILON;  i++)  {	  For(;    i    <    row.getWidth()    &&    col!=    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
28	[BUG]  [BUGGY]  int  row  =  this.table.getRowIndex(i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  this.table.getRowIndex(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  this.table.getRowIndex(i);	  int    row    =    table.getColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
29	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getKey();  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getKey();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getKey();	  Integer    minRow    =(Integer)row.getKey();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
30	[BUG]  [BUGGY]  Integer  minRow  =(Integer)i.getKey();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)i.getKey();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)i.getKey();	  Integer    minRow    =(Integer)row.getKey();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
31	[BUG]  [BUGGY]  int  row  =  table.next();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.next();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.next();	  int    row    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
32	[BUG]  [BUGGY]  int  row  =  row.next();  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  row.next();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  row.next();	  int    row    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
33	[BUG]  [BUGGY]  int  row  =  column.next();  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  column.next();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  column.next();	  int    row    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
34	[BUG]  [BUGGY]  int  row  =  column.getRowCount();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  column.getRowCount();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  column.getRowCount();	  int    row    =    column.getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
35	[BUG]  [BUGGY]  Integer  row  =  table.getRow(i  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getRow(i  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getRow(i  -  1);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
36	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(row  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(row  -  1);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
37	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex  -  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(rowIndex  -  1);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
38	[BUG]  [BUGGY]  int  minValue  =  col.intValue();  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  minValue  =  col.intValue();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  minValue  =  col.intValue();	  int    minValue    =    row.intValue();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
39	[BUG]  [BUGGY]  int  minValue  =  row.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  minValue  =  row.intValue()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  minValue  =  row.intValue()  -  1;	  int    minValue    =    row.intValue();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
40	[BUG]  [BUGGY]  int  row  =  this.table.getRow(row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  this.table.getRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  this.table.getRow(row);	  int    row    =    table.getRow(row);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  int  row  =  table.getRow(row,  col);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(row,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(row,  col);	  int    row    =    table.getRow(row);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
42	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(rowIndex,  col);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(rowIndex,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(rowIndex,  col);	  int    row    =    table.getRowIndex(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
43	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(rowIndex,  i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(rowIndex,  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(rowIndex,  i);	  int    row    =    table.getRowIndex(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
44	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(rowIndex  -  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(rowIndex  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(rowIndex  -  1);	  int    row    =    table.getRowIndex(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
45	[BUG]  [BUGGY]  for(;  i  <  column.getWidth()  &&  col!=  DEFAULT_EPSILON;  i++)  {  [CE]  cannot  find  symbol  column  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  column.getWidth()  &&  col!=  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  column.getWidth()  &&  col!=  DEFAULT_EPSILON;  i++)  {	  for(;    i    <    table.getWidth()    &&    col!=    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  column	48	None	replace
46	[BUG]  [BUGGY]  for(;  i  <  column.getWidth()  &&  row!=  DEFAULT_EPSILON;  i++)  {  [CE]  cannot  find  symbol  column  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  column.getWidth()  &&  row!=  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  column.getWidth()  &&  row!=  DEFAULT_EPSILON;  i++)  {	  for(;    i    <    row.getWidth()    &&    row!=    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  column	76	None	replace
47	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.clone(),  col;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.clone(),  col;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.clone(),  col;	  Integer    minRow    =(Integer)table.clone();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
48	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.cloneTree();  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.cloneTree();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.cloneTree();	  Integer    minRow    =(Integer)table.clone();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
49	[BUG]  [BUGGY]  int  row  =  table.getRow(rowIndex,  col);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(rowIndex,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(rowIndex,  col);	  int    row    =    table.getRow(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
50	[BUG]  [BUGGY]  int  row  =  table.getRow(rowIndex  -  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(rowIndex  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(rowIndex  -  1);	  int    row    =    table.getRow(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
51	[BUG]  [BUGGY]  int  row  =  table.getRow(rowIndex  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(rowIndex  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(rowIndex  +  1);	  int    row    =    table.getRow(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
52	[BUG]  [BUGGY]  int  row  =  table.getRowCount(row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount(row);	  int    row    =    table.getColumnRowCount(i);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
53	[BUG]  [BUGGY]  int  row  =  table.getColumnRowCount(row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRowCount(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRowCount(row);	  int    row    =    table.getColumnRowCount(i);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
54	[BUG]  [BUGGY]  int  row  =  table.getColumnRowCount(rowIndex);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRowCount(rowIndex);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRowCount(rowIndex);	  int    row    =    table.getColumnRowCount(i);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
55	[BUG]  [BUGGY]  int  minValue  =  column.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  minValue  =  column.intValue()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  minValue  =  column.intValue()  -  1;	  int    minValue    =    column.intValue();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
56	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  defColumn;  i++)  {  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  defColumn;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >=  defColumn;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    defColumn;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
57	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  defColumn  +  1;  i++)  {  [CE]  cannot  find  symbol  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  defColumn  +  1;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  defColumn  +  1;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    defColumn;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
58	[BUG]  [BUGGY]  for(;  i  <  column.getWidth()  &&  col!=  minIndex;  i++)  {  [CE]  cannot  find  symbol  column  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  column.getWidth()  &&  col!=  minIndex;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  column.getWidth()  &&  col!=  minIndex;  i++)  {	  for(;    i    <    table.getWidth()    &&    col!=    minIndex;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  column	31	None	replace
59	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i  -  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(i  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(i  -  1);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
60	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  col  -  1);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(row,  col  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(row,  col  -  1);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
61	[BUG]  [BUGGY]  int  row  =  table.getRowIndex()  -  1;  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex()  -  1;	  int    row    =    table.getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
62	[BUG]  [BUGGY]  int  row  =  this.table.getRowCount()  -  1;  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  this.table.getRowCount()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  this.table.getRowCount()  -  1;	  int    row    =    this.table.getRowCount();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
63	[BUG]  [BUGGY]  int  row  =  this.table.getRowCount(i);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  this.table.getRowCount(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  this.table.getRowCount(i);	  int    row    =    this.table.getRowCount();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
64	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  row;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  row;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  row;  i++)  {	  for(;    i    <    row.getWidth()    &&    minRow!=    row;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
65	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  row;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  row;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  ==  row;  i++)  {	  for(;    i    <    row.getWidth()    &&    minRow!=    row;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
66	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  minRow  +  1;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  minRow  +  1;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  minRow  +  1;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    minRow;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
67	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getValue();  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(Integer)table.getValue();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(Integer)table.getValue();	  Integer    row    =(Integer)table.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
68	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getValue(i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(Integer)table.getValue(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(Integer)table.getValue(i);	  Integer    row    =(Integer)table.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
69	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRowIndex();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(Integer)table.getRowIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(Integer)table.getRowIndex();	  Integer    row    =(Integer)table.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
70	[BUG]  [BUGGY]  int  row  =  table.getRow(i  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(i  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(i  -  1);	  int    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
71	[BUG]  [BUGGY]  int  row  =  table.getRow(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(i  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(i  +  1);	  int    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
72	[BUG]  [BUGGY]  int  row  =  this.table.getRowIndex(row,  col);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  this.table.getRowIndex(row,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  this.table.getRowIndex(row,  col);	  int    row    =    table.getRowIndex(row,    col);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex(row,  col);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnIndex(row,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnIndex(row,  col);	  int    row    =    table.getRowIndex(row,    col);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
74	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getValue()  -  1;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getValue()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getValue()  -  1;	  Integer    minRow    =(Integer)row.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
75	[BUG]  [BUGGY]  Integer  minRow  =(int)row.getValue()  -  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(int)row.getValue()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(int)row.getValue()  -  1;	  Integer    minRow    =(Integer)row.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
76	[BUG]  [BUGGY]  Integer  minRow  =(Integer)col.getValue();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)col.getValue();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)col.getValue();	  Integer    minRow    =(Integer)row.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
77	[BUG]  [BUGGY]  int  row  =  i.getRowIndex();  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  i.getRowIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  i.getRowIndex();	  int    row    =    table.getRowIndex();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
78	[BUG]  [BUGGY]  int  row  =  table.getRowIndex()  +  1;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex()  +  1;	  int    row    =    table.getRowIndex();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
79	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  table.getColumnCount();  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  table.getColumnCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >=  table.getColumnCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    col    >=    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
80	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  cmp;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  cmp;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  cmp;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    col;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
81	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  column.getRowCount();  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  column.getRowCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  column.getRowCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
82	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  minRow.getColumnCount();  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  minRow.getColumnCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  minRow.getColumnCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
83	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  i  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(row,  i  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(row,  i  +  1);	  int    row    =    table.getRowIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
84	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex(row,  i);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnIndex(row,  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnIndex(row,  i);	  int    row    =    table.getRowIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
85	[BUG]  [BUGGY]  int  row  =  this.table.getRowIndex(row,  i);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  this.table.getRowIndex(row,  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  this.table.getRowIndex(row,  i);	  int    row    =    table.getRowIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
86	[BUG]  [BUGGY]  int  row  =  table.getColumnRow(row  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRow(row  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRow(row  -  1);	  int    row    =    table.getColumnRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
87	[BUG]  [BUGGY]  int  row  =  table.getColumnRow(rowIndex  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRow(rowIndex  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRow(rowIndex  -  1);	  int    row    =    table.getColumnRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
88	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  minRow  ==  table.getColumnCount();  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  minRow  ==  table.getColumnCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  minRow  ==  table.getColumnCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    minRow    ==    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
89	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  column  ==  table.getRowCount();  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  column  ==  table.getRowCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  column  ==  table.getRowCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    minRow    ==    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
90	[BUG]  [BUGGY]  Integer  minRow  =(int)i.getValue();  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(int)i.getValue();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(int)i.getValue();	  Integer    minRow    =(Integer)i.getValue();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
91	[BUG]  [BUGGY]  Integer  row  =  table.getRow(row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getRow(row);	  Integer    row    =    table.getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
92	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(row,  i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(row,  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(row,  i);	  Integer    row    =    table.getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
93	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  2;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  2;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  2;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    1;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
94	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  1;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  1;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >=  1;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    1;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
95	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  1;  i++)  {  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  1;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  ==  1;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    1;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
96	[BUG]  [BUGGY]  int  row  =  column.getRowCount()  -  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  column.getRowCount()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  column.getRowCount()  -  1;	  int    row    =    table.getRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
97	[BUG]  [BUGGY]  for(;  i  <  minIndex.getWidth()  &&  row!=  minRow;  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  minIndex.getWidth()  &&  row!=  minRow;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  minIndex.getWidth()  &&  row!=  minRow;  i++)  {	  for(;    i    <    row.getWidth()    &&    row!=    minRow;    i++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	64	None	replace
98	[BUG]  [BUGGY]  Integer  minRow  =(Integer)row.getValue()  /  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)row.getValue()  /  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)row.getValue()  /  1;	  Integer    minRow    =(Integer)row.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
99	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getValue()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getValue()  +  1;	  Integer    minRow    =(Integer)row.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
100	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  column!=  table.getColumnCount();  i++)  {  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  column!=  table.getColumnCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  column!=  table.getColumnCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    minRow!=    table.getColumnCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
101	[BUG]  [BUGGY]  for(;  i  <  defs.column.getWidth()  &&  col!=  row.getColumn();  i++)  {  [CE]  package  defs  does  not  exist  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  defs.column.getWidth()  &&  col!=  row.getColumn();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  defs.column.getWidth()  &&  col!=  row.getColumn();  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    defs.column;    i++)    {    	non-compiled	[CE]  package  defs  does  not  exist	89	None	replace
102	[BUG]  [BUGGY]  for(;  i  <  defs.getWidth()  &&  col!=  row.column;  i++)  {  [CE]  cannot  find  symbol  defs  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  defs.getWidth()  &&  col!=  row.column;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  defs.getWidth()  &&  col!=  row.column;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    defs.column;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  defs	89	None	replace
103	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  defs.column;  i++)  {  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  defs.column;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >=  defs.column;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    defs.column;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
104	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getRow();  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getRow();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getRow();	  Integer    minRow    =(Integer)table.getNext();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
105	[BUG]  [BUGGY]  Integer  minRow  =(Integer)row.getNext();  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)row.getNext();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)row.getNext();	  Integer    minRow    =(Integer)table.getNext();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
106	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getNext()  -  1;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getNext()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getNext()  -  1;	  Integer    minRow    =(Integer)table.getNext();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
107	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  col  +  i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(row,  col  +  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(row,  col  +  i);	  int    row    =    table.getRowIndex(row    +    i);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
108	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  +  i,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(row  +  i,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(row  +  i,  col);	  int    row    =    table.getRowIndex(row    +    i);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
109	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(row  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(row  +  1);	  int    row    =    table.getRowIndex(row    +    i);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
110	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  i);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(row  -  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(row  -  i);	  int    row    =    table.getRowIndex(row    +    i);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
111	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >>  DEFAULT_EPSILON;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >>  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >>  DEFAULT_EPSILON;  i++)  {	  for(;    i    <    row.getWidth()    &&    col    >=    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
112	[BUG]  [BUGGY]  Integer  row  =  table.getRow(rowIndex);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getRow(rowIndex);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getRow(rowIndex);	  Integer    row    =    table.getBasicRow(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
113	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex,  col);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(rowIndex,  col);	  Integer    row    =    table.getBasicRow(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
114	[BUG]  [BUGGY]  int  row  =  column.getColumnRowCount()  -  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  column.getColumnRowCount()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  column.getColumnRowCount()  -  1;	  int    row    =    table.getColumnRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
115	[BUG]  [BUGGY]  int  row  =  i.getRowCount()  -  1;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  i.getRowCount()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  i.getRowCount()  -  1;	  int    row    =    i.getRowCount();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
116	[BUG]  [BUGGY]  int  row  =  i.getRowCount()  +  1;  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  i.getRowCount()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  i.getRowCount()  +  1;	  int    row    =    i.getRowCount();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
117	[BUG]  [BUGGY]  for(;  i  <  minRow.getWidth()  &&  col!=  minRow;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  minRow.getWidth()  &&  col!=  minRow;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  minRow.getWidth()  &&  col!=  minRow;  i++)  {	  for(;    i    <    column.getWidth()    &&    col!=    minRow;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
118	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getValue(row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getValue(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getValue(row);	  Integer    minRow    =(Integer)table.getValue(i);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
119	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getValue(i,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getValue(i,  col);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getValue(i,  col);	  Integer    minRow    =(Integer)table.getValue(i);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
120	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getValue(i  -  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getValue(i  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getValue(i  -  1);	  Integer    minRow    =(Integer)table.getValue(i);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
121	[BUG]  [BUGGY]  int  row  =  table.getRowRow(row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowRow(row);	  int    row    =    table.getColumnRow(col);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
122	[BUG]  [BUGGY]  int  row  =  table.getRowRow(i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowRow(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowRow(i);	  int    row    =    table.getColumnRow(col);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
123	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getRow(row  +  1);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getRow(row  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getRow(row  +  1);	  Integer    minRow    =(Integer)table.getRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
124	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getRow(minIndex  +  1);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getRow(minIndex  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getRow(minIndex  +  1);	  Integer    minRow    =(Integer)table.getRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
125	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i  -  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(Integer)table.getRow(i  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(Integer)table.getRow(i  -  1);	  Integer    row    =(Integer)table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
126	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(Integer)table.getRow(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(Integer)table.getRow(row);	  Integer    row    =(Integer)table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
127	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(Integer)table.getRow(i  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(Integer)table.getRow(i  +  1);	  Integer    row    =(Integer)table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
128	[BUG]  [BUGGY]  int  minValue  =  table.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  minValue  =  table.intValue()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  minValue  =  table.intValue()  -  1;	  int    minValue    =    table.intValue();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
129	[BUG]  [BUGGY]  int  row  =  table.getRowCount()  /  1;  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount()  /  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount()  /  1;	  int    row    =    table.getRowCount()    +    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
130	[BUG]  [BUGGY]  int  row  =  table.getRowCount(rowIndex);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount(rowIndex);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount(rowIndex);	  int    row    =    table.getRowCount(i);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
131	[BUG]  [BUGGY]  int  row  =  table.getRowCount(i  -  1);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount(i  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount(i  -  1);	  int    row    =    table.getRowCount(i);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
132	[BUG]  [BUGGY]  int  row  =  table.getColumnCount(i);  [CE]  illegal  start  of  type  [FE]                          MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnCount(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnCount(i);	  int    row    =    table.getRowCount(i);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
133	[BUG]  [BUGGY]  int  row  =  table.getColumnRowCount()  /  i;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRowCount()  /  i;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRowCount()  /  i;	  int    row    =    table.getColumnRowCount()    +    i;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
134	[BUG]  [BUGGY]  int  row  =  table.getColumnRowCount()  +  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRowCount()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRowCount()  +  1;	  int    row    =    table.getColumnRowCount()    +    i;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
135	[BUG]  [BUGGY]  int  row  =  table.getColumnRowCount()  -  i;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRowCount()  -  i;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRowCount()  -  i;	  int    row    =    table.getColumnRowCount()    +    i;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
136	[BUG]  [BUGGY]  for(;  i  <  row.getHeight()  &&  col!=  0;  i++)  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getHeight()  &&  col!=  0;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getHeight()  &&  col!=  0;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    ;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
137	[BUG]  [BUGGY]  for(;  i  <  column.getWidth()  &&  col  ==  DEFAULT_EPSILON;  i++)  {  [CE]  cannot  find  symbol  column  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  column.getWidth()  &&  col  ==  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  column.getWidth()  &&  col  ==  DEFAULT_EPSILON;  i++)  {	  for(;    i    <    row.getWidth()    &&    col    ==    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  column	50	None	replace
138	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  minRatioPositions;  i++)  {  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  minRatioPositions;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  minRatioPositions;  i++)  {	  for(;    i    <    table.getWidth()    &&    col!=    minRatioPositions;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
139	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  minRatioPositions;  i++)  {  [CE]  cannot  find  symbol  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  minRatioPositions;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >=  minRatioPositions;  i++)  {	  for(;    i    <    table.getWidth()    &&    col!=    minRatioPositions;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
140	[BUG]  [BUGGY]  for(;  i  <  column.getWidth()  &&  col!=  minRatioPositions;  i++)  {  [CE]  cannot  find  symbol  column  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  column.getWidth()  &&  col!=  minRatioPositions;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  column.getWidth()  &&  col!=  minRatioPositions;  i++)  {	  for(;    i    <    table.getWidth()    &&    col!=    minRatioPositions;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  column	75	None	replace
141	[BUG]  [BUGGY]  Integer  minRow  =(int)row.next();  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(int)row.next();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(int)row.next();	  Integer    minRow    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
142	[BUG]  [BUGGY]  Integer  minRow  =(int)table.next();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(int)table.next();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(int)table.next();	  Integer    minRow    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
143	[BUG]  [BUGGY]  Integer  minRow  =(int)i.next()  -  1;  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(int)i.next()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(int)i.next()  -  1;	  Integer    minRow    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
144	[BUG]  [BUGGY]  Integer  row  =(int)row.next();  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(int)row.next();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(int)row.next();	  Integer    row    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
145	[BUG]  [BUGGY]  Integer  row  =(int)table.next();  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(int)table.next();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(int)table.next();	  Integer    row    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
146	[BUG]  [BUGGY]  Integer  row  =(int)m.next();  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(int)m.next();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(int)m.next();	  Integer    row    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
147	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  minRow  ==  col;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  minRow  ==  col;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  minRow  ==  col;  i++)  {	  for(;    i    <    row.getWidth()    &&    minRow!=    col;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
148	[BUG]  [BUGGY]  int  row  =  table.getColumnRowCount(i  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRowCount(i  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRowCount(i  -  1);	  int    row    =    table.getColumnRowCount(i);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
149	[BUG]  [BUGGY]  Integer  row  =(int)table.getRowCount();  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(int)table.getRowCount();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(int)table.getRowCount();	  Integer    row    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
150	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getValue(i,  row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getValue(i,  row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getValue(i,  row);	  Integer    minRow    =(Integer)table.getValue(i);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
151	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getValue(row,  i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getValue(row,  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getValue(row,  i);	  Integer    minRow    =(Integer)table.getValue(i);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
152	[BUG]  [BUGGY]  Integer  minRow  =(int)table.getRowIndex(i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(int)table.getRowIndex(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(int)table.getRowIndex(i);	  Integer    minRow    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
153	[BUG]  [BUGGY]  int  row  =  table.getNumObjectiveFunctions()  +  1;  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getNumObjectiveFunctions()  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getNumObjectiveFunctions()  +  1;	  int    row    =    table.getNumObjectiveFunctions()    -    1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
154	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  column  >=  DEFAULT_EPSILON;  i++)  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  column  >=  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  column  >=  DEFAULT_EPSILON;  i++)  {	  for(;    i    <    row.getWidth()    &&    column!=    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
155	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  DEF_EPSILON;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  DEF_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  DEF_EPSILON;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    defs.column;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
156	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  Integer.MAX_VALUE;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  Integer.MAX_VALUE;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  Integer.MAX_VALUE;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    defs.column;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
157	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  1  +  i);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(row  -  1  +  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(row  -  1  +  i);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
158	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex(row  -  1);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnIndex(row  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnIndex(row  -  1);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
159	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  i  -  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(row,  i  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(row,  i  -  1);	  int    row    =    table.getRowIndex(row,    i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
160	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  3;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  3;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  3;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    1;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
161	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  row);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(i,  row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(i,  row);	  Integer    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
162	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  column);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(i,  column);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(i,  column);	  Integer    row    =    table.getBasicRow(i,    col);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
163	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getColumn(i  -  1);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getColumn(i  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getColumn(i  -  1);	  Integer    minRow    =(Integer)table.getRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
164	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  i!=  DEFAULT_EPSILON;  i++)  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  i!=  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  i!=  DEFAULT_EPSILON;  i++)  {	  for(;    i    <    row.getWidth()    &&    row!=    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
165	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  column!=  0;  i++)  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  column!=  0;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  column!=  0;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    0;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
166	[BUG]  [BUGGY]  int  row  =  table.getRow(rowIndex,  i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(rowIndex,  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(rowIndex,  i);	  int    row    =    table.getRow(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
167	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.get(i);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.get(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.get(i);	  Integer    minRow    =(Integer)table.next();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
168	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.get(row);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.get(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.get(row);	  Integer    minRow    =(Integer)table.next();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
169	[BUG]  [BUGGY]  int  row  =  this.table.getRowIndex(row  -  1);  [CE]  illegal  start  of  type  [FE]                        MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  this.table.getRowIndex(row  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  this.table.getRowIndex(row  -  1);	  int    row    =    this.table.getRowIndex(row);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
170	[BUG]  [BUGGY]  Integer  minRow  =(Integer)row.get(i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)row.get(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)row.get(i);	  Integer    minRow    =(Integer)row.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
171	[BUG]  [BUGGY]  int  row  =  table.getRowCount()  +  i  +  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount()  +  i  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount()  +  i  +  1;	  int    row    =    table.getRowCount()    +    i;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
172	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.clone()  -  1;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.clone()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.clone()  -  1;	  Integer    minRow    =(Integer)table.clone();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
173	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.clone(),  row;  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.clone(),  row;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.clone(),  row;	  Integer    minRow    =(Integer)table.clone();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
174	[BUG]  [BUGGY]  For(;  i  <  row.getWidth()  &&  col!=  minRow;  i++)  {  [CE]  illegal  start  of  expression  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  For(;  i  <  row.getWidth()  &&  col!=  minRow;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	For(;  i  <  row.getWidth()  &&  col!=  minRow;  i++)  {	  for(;    i    <    column.getWidth()    &&    col!=    minRow;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
175	[BUG]  [BUGGY]  int  row  =  table.getRow(row  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(row  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(row  -  1);	  int    row    =    table.getColumnRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
176	[BUG]  [BUGGY]  Integer  minRow  =(Integer)i.getValue()  -  1;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)i.getValue()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)i.getValue()  -  1;	  Integer    minRow    =(Integer)row.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
177	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  minRow  +  1;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >=  minRow  +  1;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >=  minRow  +  1;  i++)  {	  for(;    i    <    row.getWidth()    &&    col    >=    minRow;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
178	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(rowIndex  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(rowIndex  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(rowIndex  +  1);	  int    row    =    table.getRowIndex(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
179	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  minRow  >=  table.getColumnCount();  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  minRow  >=  table.getColumnCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  minRow  >=  table.getColumnCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    minRow    >=    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
180	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1  -  minIndex);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1  -  minIndex);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(i  +  1  -  minIndex);	  Integer    row    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
181	[BUG]  [BUGGY]  int  row  =  table.getRowCount(i  +  1);  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount(i  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount(i  +  1);	  int    row    =    table.getRowCount(i);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
182	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  column  >=  minRow;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  column  >=  minRow;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  column  >=  minRow;  i++)  {	  for(;    i    <    row.getWidth()    &&    column!=    minRow;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
183	[BUG]  [BUGGY]  int  minValue  =  row.intValue()  +  i;  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  minValue  =  row.intValue()  +  i;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  minValue  =  row.intValue()  +  i;	  int    minValue    =    row.intValue();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
184	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  column;  i++)  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  column;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  column;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    table;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
185	[BUG]  [BUGGY]  int  row  =  table.getColumnRowCount()  +  i  +  1;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRowCount()  +  i  +  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRowCount()  +  i  +  1;	  int    row    =    table.getColumnRowCount()    +    i;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
186	[BUG]  [BUGGY]  int  row  =  table.getRow(row,  i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(row,  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(row,  i);	  int    row    =    table.getRow(row);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
187	[BUG]  [BUGGY]  int  row  =  table.getRow(row  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(row  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(row  +  1);	  int    row    =    table.getRow(row);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
188	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1  -  minIndex);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1  -  minIndex);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(i  -  1  -  minIndex);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
189	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1  +  minIndex);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1  +  minIndex);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(i  -  1  +  minIndex);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
190	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  DEFAULT_EPSILON  +  1;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  DEFAULT_EPSILON  +  1;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  ==  DEFAULT_EPSILON  +  1;  i++)  {	  for(;    i    <    row.getWidth()    &&    col    ==    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
191	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getMinY();  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getMinY();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getMinY();	  Integer    minRow    =(Integer)table.getNext();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
192	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getLength();  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getLength();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getLength();	  Integer    minRow    =(Integer)table.getNext();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
193	[BUG]  [BUGGY]  Integer  row  =(Integer)table.get(i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(Integer)table.get(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(Integer)table.get(i);	  Integer    row    =(Integer)table.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
194	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex();  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnIndex();	  int    row    =    table.getRowIndex();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
195	[BUG]  [BUGGY]  Integer  row  =  table.getRowCount(i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getRowCount(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getRowCount(i);	  Integer    row    =    table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
196	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >  DEFAULT_EPSILON;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  >  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  >  DEFAULT_EPSILON;  i++)  {	  for(;    i    <    row.getWidth()    &&    col    >=    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
197	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  defColumn;  i++)  {  [CE]  cannot  find  symbol  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  defColumn;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  ==  defColumn;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    defColumn;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
198	[BUG]  [BUGGY]  int  row  =  table.getRow(row  +  i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRow(row  +  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRow(row  +  i);	  int    row    =    table.getRow(row);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
199	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getColumn(row);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getColumn(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getColumn(row);	  Integer    minRow    =(Integer)table.getRow(row);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
200	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  column!=  minRatio;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  column!=  minRatio;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  column!=  minRatio;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    minRatio;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
201	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  column  >=  table.getRowCount();  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  column  >=  table.getRowCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  column  >=  table.getRowCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    minRow    >=    table.getRowCount();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
202	[BUG]  [BUGGY]  int  row  =  row.getColumnCount();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  row.getColumnCount();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  row.getColumnCount();	  int    row    =    column.getColumnCount();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
203	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(rowIndex  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(rowIndex  +  1);	  Integer    row    =    table.getBasicRow(rowIndex);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
204	[BUG]  [BUGGY]  Integer  minRow  =(Integer)row.getValue(i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)row.getValue(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)row.getValue(i);	  Integer    minRow    =(Integer)row.getKey();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
205	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row  -  1  -  i);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowIndex(row  -  1  -  i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowIndex(row  -  1  -  i);	  int    row    =    table.getRowIndex(row    -    1);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
206	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  column  ==  DEFAULT_EPSILON;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  column  ==  DEFAULT_EPSILON;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  column  ==  DEFAULT_EPSILON;  i++)  {	  for(;    i    <    row.getWidth()    &&    col    ==    DEFAULT_EPSILON;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
207	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  defs.column;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col  ==  defs.column;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col  ==  defs.column;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    defs.column;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
208	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  +  2);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(i  +  2);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(i  +  2);	  Integer    row    =    table.getBasicRow(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
209	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getMin();  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getMin();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getMin();	  Integer    minRow    =(Integer)table.getNext();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
210	[BUG]  [BUGGY]  Integer  minRow  =(Integer)table.getParent();  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)table.getParent();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)table.getParent();	  Integer    minRow    =(Integer)table.getNext();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
211	[BUG]  [BUGGY]  Integer  row  =(Integer)table.get(row);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(Integer)table.get(row);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(Integer)table.get(row);	  Integer    row    =(Integer)table.next();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
212	[BUG]  [BUGGY]  int  minValue  =  table.intValue()  +  i;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  minValue  =  table.intValue()  +  i;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  minValue  =  table.intValue()  +  i;	  int    minValue    =    table.intValue();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
213	[BUG]  [BUGGY]  Integer  minRow  =(Integer)row.get(0);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)row.get(0);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)row.get(0);	  Integer    minRow    =(Integer)row.next();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
214	[BUG]  [BUGGY]  Integer  minRow  =(int)table.clone();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(int)table.clone();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(int)table.clone();	  Integer    minRow    =(Integer)table.clone();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
215	[BUG]  [BUGGY]  int  row  =  row.getColumnRowCount();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  row.getColumnRowCount();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  row.getColumnRowCount();	  int    row    =    column.getColumnRowCount();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
216	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  minIndex  >=  row;  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  minIndex  >=  row;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  minIndex  >=  row;  i++)  {	  for(;    i    <    row.getWidth()    &&    row!=    minRow;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
217	[BUG]  [BUGGY]  int  row  =  table.getRowCount()  +  i  -  1;  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getRowCount()  +  i  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getRowCount()  +  i  -  1;	  int    row    =    table.getRowCount()    +    i;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
218	[BUG]  [BUGGY]  int  row  =  this.table.getRowCount()  +  i;  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  this.table.getRowCount()  +  i;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  this.table.getRowCount()  +  i;	  int    row    =    this.table.getRowCount();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
219	[BUG]  [BUGGY]  Integer  minRow  =(Integer)row.getKey()  -  1;  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(Integer)row.getKey()  -  1;  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(Integer)row.getKey()  -  1;	  Integer    minRow    =(Integer)row.getValue()    -    1;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
220	[BUG]  [BUGGY]  Integer  minRow  =(int)table.getRowValue(i);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(int)table.getRowValue(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(int)table.getRowValue(i);	  Integer    minRow    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
221	[BUG]  [BUGGY]  Integer  minRow  =(int)table.getRowCount();  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  minRow  =(int)table.getRowCount();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  minRow  =(int)table.getRowCount();	  Integer    minRow    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
222	[BUG]  [BUGGY]  Integer  row  =(int)table.getRowIndex();  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(int)table.getRowIndex();  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(int)table.getRowIndex();	  Integer    row    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
223	[BUG]  [BUGGY]  Integer  row  =(int)table.getRowValue(i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =(int)table.getRowValue(i);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =(int)table.getRowValue(i);	  Integer    row    =(int)i.next();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
224	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  table.column;  i++)  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  table.column;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  table.column;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    table;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
225	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  INFINITE_COLLECTION;  i++)  {  [CE]  cannot  find  symbol  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  col!=  INFINITE_COLLECTION;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  col!=  INFINITE_COLLECTION;  i++)  {	  for(;    i    <    row.getWidth()    &&    col!=    col;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
226	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  -  2);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  Integer  row  =  table.getBasicRow(i  -  2);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	Integer  row  =  table.getBasicRow(i  -  2);	  Integer    row    =    table.getBasicRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
227	[BUG]  [BUGGY]  for(;  i  <  row.getWidth()  &&  minRow!=  row.getColumnCount();  i++)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  for(;  i  <  row.getWidth()  &&  minRow!=  row.getColumnCount();  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  row.getWidth()  &&  minRow!=  row.getColumnCount();  i++)  {	  for(;    i    <    row.getWidth()    &&    minRow!=    row;    i++)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
228	[BUG]  [BUGGY]  int  row  =  table.getColumnRow(col  -  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnRow(col  -  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnRow(col  -  1);	  int    row    =    table.getColumnRow(i    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
229	[BUG]  [BUGGY]  For(;  i  <  row.getWidth()  &&  col!=  minIndex;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  For(;  i  <  row.getWidth()  &&  col!=  minIndex;  i++)  {  [BUGGY]      if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	For(;  i  <  row.getWidth()  &&  col!=  minIndex;  i++)  {	  for(;    i    <    table.getWidth()    &&    col!=    minIndex;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
230	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex(row  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException      [CONTEXT]            Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();      [BUGGY]  int  row  =  table.getColumnIndex(row  +  1);  [BUGGY]      for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	int  row  =  table.getColumnIndex(row  +  1);	  int    row    =    table.getColumnIndex(row);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
