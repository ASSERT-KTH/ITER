bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  minIndex  =  row.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  row.getBasicRow(i,  col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.getBasicRow(i,  col);	      Integer    minIndex    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  Integer  minIndex  =  column.getBasicRow(i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  column.getBasicRow(i);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  column.getBasicRow(i);	      Integer    minIndex    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  if  (i  >  minIndex)  {  if  (i  >  minIndex)  {  [CE]  illegal  start  of  expression  [FE]    UnboundedSolutionException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  >  minIndex)  {  if  (i  >  minIndex)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    >    minIndex)    {    if  (i  >  minIndex)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
4	[BUG]  [BUGGY]  if  (i  >  minIndex)  {  If  (i  >  minIndex)  {  [CE]  ';'  expected  [FE]      UnboundedSolutionException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  >  minIndex)  {  If  (i  >  minIndex)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    >    minIndex)    {    If  (i  >  minIndex)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
5	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i,  col);	      Integer    minRow    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minRow  =  table.getBasicRow(i  +  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i  +  1);	      Integer    minRow    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minRow  =  table.getBasicRow(i  -  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i  -  1);	      Integer    minRow    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
8	[BUG]  [BUGGY]  int  minIndex  =  row.intValue();  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  row.intValue();  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  row.intValue();	      int    minIndex    =    i.intValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  int  minIndex  =  column.intValue();  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  column.intValue();  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  column.intValue();	      int    minIndex    =    i.intValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  int  minIndex  =  table.intValue();  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.intValue();  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.intValue();	      int    minIndex    =    i.intValue();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatio)  {  if  (i  <  minIndex  ||  col  <  minRatio)  {  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatio)  {  if  (i  <  minIndex  ||  col  <  minRatio)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    ||    col    <    minRatio)    {    if  (i  <  minIndex  ||  col  <  minRatio)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
12	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatio)  {  If  (i  <  minIndex  ||  col  <  minRatio)  {  [CE]  ';'  expected  [FE]      MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatio)  {  If  (i  <  minIndex  ||  col  <  minRatio)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    ||    col    <    minRatio)    {    If  (i  <  minIndex  ||  col  <  minRatio)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
13	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatio)  {  if  (i  <  minIndex  ||  col  >=  minRatio)  {  [CE]  illegal  start  of  expression  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatio)  {  if  (i  <  minIndex  ||  col  >=  minRatio)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    ||    col    <    minRatio)    {    if  (i  <  minIndex  ||  col  >=  minRatio)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
14	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    NullPointerException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  0)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  0)  {	  if    (minIndex    <    minRow)    {    	compilable	  [FE]  UnboundedSolutionException  	12	4	replace
15	[BUG]  [BUGGY]  if  (minIndex  <  0)  {  [FE]  UnboundedSolutionException  [FE]    NullPointerException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  0)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  0)  {	  if    (minIndex    <    minRow)    {    	compilable	  [FE]  UnboundedSolutionException  	12	4	replace
16	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]      NullPointerException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  i)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  i)  {	  if    (minIndex    <    minRow)    {    	compilable	  [FE]  UnboundedSolutionException  	12	4	replace
17	[BUG]  [BUGGY]  if  (minIndex  <  i)  {  [FE]  UnboundedSolutionException  [FE]      NullPointerException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  i)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  i)  {	  if    (minIndex    <    minRow)    {    	compilable	  [FE]  UnboundedSolutionException  	12	4	replace
18	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i,  col);	      int    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i  -  1);	      int    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(i  +  1);	      int    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  minIndex  =  table.getBasicRow(i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  minIndex  =  table.getBasicRow(i);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  table.getBasicRow(i);	      minIndex    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
22	[BUG]  [BUGGY]  minIndex  =  i.getBasicRow(row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  minIndex  =  i.getBasicRow(row);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  i.getBasicRow(row);	      minIndex    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
23	[BUG]  [BUGGY]  minIndex  =  column.getBasicRow(i);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  minIndex  =  column.getBasicRow(i);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  column.getBasicRow(i);	      minIndex    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatio)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minIndex  &&  col  <  minRatio)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    	compilable	  [FE]  UnboundedSolutionException  	4	4	replace
25	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatio)  {  [FE]  UnboundedSolutionException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatio)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  <  minRatio)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    	compilable	  [FE]  UnboundedSolutionException  	4	4	replace
26	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  ||  col  <  0)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minIndex  ||  col  <  0)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    	compilable	  [FE]  MaxCountExceededException  	4	1	replace
27	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  0)  {  [FE]  MaxCountExceededException  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  ||  col  <  0)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  <  0)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    	compilable	  [FE]  MaxCountExceededException  	4	1	replace
28	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  table.getBasicRow(i,  col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i,  col);	      Integer    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  +  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i  +  1);	      Integer    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  table.getBasicRow(i  -  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.getBasicRow(i  -  1);	      Integer    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  Integer  minIndex  =  row.intValue();  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  row.intValue();  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.intValue();	      Integer    minIndex    =    i.intValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  Integer  minIndex  =  column.intValue();  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  column.intValue();  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  column.intValue();	      Integer    minIndex    =    i.intValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  Integer  minIndex  =  i.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  i.intValue()  +  1;  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  i.intValue()  +  1;	      Integer    minIndex    =    i.intValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  Integer  minIndex  =  col.intValue();  [CE]  illegal  start  of  type  [FE]                      MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  col.intValue();  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  col.intValue();	      Integer    minIndex    =    i.intValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	2	3	replace
36	[BUG]  [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  [FE]  UnboundedSolutionException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  &&  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	2	3	replace
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	2	4	replace
38	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  [FE]  NullPointerException  [FE]      MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	2	4	replace
39	[BUG]  [BUGGY]  i  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  i  =  table.getBasicRow(i  +  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i  +  1);	      i    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  i  =  row.getBasicRow(i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  i  =  row.getBasicRow(i);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  row.getBasicRow(i);	      i    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  i  =  tableau.getBasicRow(i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  i  =  tableau.getBasicRow(i);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  tableau.getBasicRow(i);	      i    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  col);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i,  col);	      int    minIndex    =    table.getBasicColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
43	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicRowIndex(i);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRowIndex(i);	      int    minIndex    =    table.getBasicColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
44	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  column);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  column);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i,  column);	      int    minIndex    =    table.getBasicColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
45	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  row);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i,  row);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i,  row);	      int    minIndex    =    table.getBasicColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
46	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
47	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  if  (i  <  minIndex  ||  col  >=  minRatioPositions.size())  {  [CE]  illegal  start  of  expression  [FE]      MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  if  (i  <  minIndex  ||  col  >=  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    if  (i  <  minIndex  ||  col  >=  minRatioPositions.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
48	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [CE]  ';'  expected  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    If  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
49	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  col);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i,  col);	      int    minIndex    =    table.getBasicColumn(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i  -  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumn(i  -  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i  -  1);	      int    minIndex    =    table.getBasicColumn(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
51	[BUG]  [BUGGY]  if  (minIndex  <  minRow)  {  if  (minIndex  <  minRow)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  minRow)  {  if  (minIndex  <  minRow)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow)    {    if  (minIndex  <  minRow)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
52	[BUG]  [BUGGY]  if  (minIndex  <  minRow)  {  if  (minIndex  >=  minRow)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  minRow)  {  if  (minIndex  >=  minRow)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow)    {    if  (minIndex  >=  minRow)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
53	[BUG]  [BUGGY]  if  (minIndex  <  minRow)  {  If  (minIndex  <  minRow)  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  minRow)  {  If  (minIndex  <  minRow)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if    (minIndex    <    minRow)    {    If  (minIndex  <  minRow)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
54	[BUG]  [BUGGY]  minIndex  =  i;  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  minIndex  =  i;  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  i;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  i  =  table.getBasicRow(i);  minIndex  =  i;  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  i  =  table.getBasicRow(i);  minIndex  =  i;  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i);  minIndex  =  i;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  col)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  col)  {	  if    (i    <    =    col)    {    	compilable	  [FE]  UnboundedSolutionException  	17	3	replace
57	[BUG]  [BUGGY]  if  (i  <  col)  {  [FE]  UnboundedSolutionException  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  col)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  col)  {	  if    (i    <    =    col)    {    	compilable	  [FE]  UnboundedSolutionException  	17	3	replace
58	[BUG]  [BUGGY]  if  (i  <  =  minIndex)  {  [CE]  illegal  start  of  expression  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  =  minIndex)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  =  minIndex)  {	  if    (i    <    =    col)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
59	[BUG]  [BUGGY]  if  (i  <  =  minRow)  {  [CE]  illegal  start  of  expression  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  =  minRow)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  =  minRow)  {	  if    (i    <    =    col)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
60	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRow  ||  col  >  minRatio)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    	compilable	  [FE]  NullPointerException  	4	4	replace
61	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  [FE]  NullPointerException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  >  minRatio)  {	  if    (i    <    minIndex    ||    col    <    minRatio)    {    	compilable	  [FE]  NullPointerException  	4	4	replace
62	[BUG]  [BUGGY]  minIndex  =  tableau.getBasicRow(i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  minIndex  =  tableau.getBasicRow(i);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	minIndex  =  tableau.getBasicRow(i);	      minIndex    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
63	[BUG]  [BUGGY]  if  (minIndex  <  =  col)  {  [CE]  illegal  start  of  expression  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  =  col)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  =  col)  {	  if    (i    <    =    col)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  i  =  table.getBasicRow(i).intValue();  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  i  =  table.getBasicRow(i).intValue();  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(i).intValue();	      i    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  Integer  minIndex  =  table.intValue();  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  table.intValue();  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  table.intValue();	      Integer    minIndex    =    i.intValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
66	[BUG]  [BUGGY]  Integer  minIndex  =  tableau.getBasicRow(i);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  tableau.getBasicRow(i);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  tableau.getBasicRow(i);	      Integer    minIndex    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
67	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	2	4	replace
68	[BUG]  [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  [FE]  NullPointerException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow  ||  col  >  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	2	4	replace
69	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	2	4	replace
70	[BUG]  [BUGGY]  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  [FE]  NullPointerException  [FE]      MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minRow  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  NullPointerException  	2	4	replace
71	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  >  maxUlps)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  >  maxUlps)  {	  if    (i    >    minIndex)    {    	compilable	  [FE]  UnboundedSolutionException  	14	2	replace
72	[BUG]  [BUGGY]  if  (i  >  maxUlps)  {  [FE]  UnboundedSolutionException  [FE]    UnboundedSolutionException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  >  maxUlps)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  >  maxUlps)  {	  if    (i    >    minIndex)    {    	compilable	  [FE]  UnboundedSolutionException  	14	2	replace
73	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]      UnboundedSolutionException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  >  col)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  >  col)  {	  if    (i    >    minIndex)    {    	compilable	  [FE]  UnboundedSolutionException  	14	2	replace
74	[BUG]  [BUGGY]  if  (i  >  col)  {  [FE]  UnboundedSolutionException  [FE]      UnboundedSolutionException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  >  col)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  >  col)  {	  if    (i    >    minIndex)    {    	compilable	  [FE]  UnboundedSolutionException  	14	2	replace
75	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i  -  1);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(i  -  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(i  -  1);	      int    minIndex    =    table.getBasicColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
76	[BUG]  [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  row);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minRow  =  table.getBasicRow(i,  row);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minRow  =  table.getBasicRow(i,  row);	      Integer    minRow    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
77	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  row);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumn(i,  row);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(i,  row);	      int    minIndex    =    table.getBasicColumn(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(row);	      int    minIndex    =    table.getBasicColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
79	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(col);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(col);	      int    minIndex    =    table.getBasicColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
80	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumnIndex(row,  i);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumnIndex(row,  i);	      int    minIndex    =    table.getBasicColumnIndex(i);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
81	[BUG]  [BUGGY]  Integer  minIndex  =  row.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  Integer  minIndex  =  row.getBasicRow(i  +  1);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	Integer  minIndex  =  row.getBasicRow(i  +  1);	      Integer    minIndex    =    row.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
82	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minRow)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minRow)  {	  if    (minIndex    <    minRow)    {    	compilable	  [FE]  NullPointerException  	12	4	replace
83	[BUG]  [BUGGY]  if  (i  <  minRow)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  minRow)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minRow)  {	  if    (minIndex    <    minRow)    {    	compilable	  [FE]  NullPointerException  	12	4	replace
84	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicColumn(col);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicColumn(col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicColumn(col);	      int    minIndex    =    table.getBasicColumn(i);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
85	[BUG]  [BUGGY]  if  (i  <  =  col  &&  col  <  minIndex)  {  [CE]  illegal  start  of  expression  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (i  <  =  col  &&  col  <  minIndex)  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  =  col  &&  col  <  minIndex)  {	  if    (i    <    =    col)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
86	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(col);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  minIndex  =  table.getBasicRow(col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  minIndex  =  table.getBasicRow(col);	      int    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
87	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	2	3	replace
88	[BUG]  [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  [FE]  UnboundedSolutionException  [FE]    MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  0  ||  col  <  minRatioPositions.size())  {	  if    (i    <    minIndex    ||    col    <    minRatioPositions.size())    {    	compilable	  [FE]  UnboundedSolutionException  	2	3	replace
89	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  row  =  table.getBasicRow(i);  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  row  =  table.getBasicRow(i);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
90	[BUG]  [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  int  rowIndex  =  table.getBasicRowIndex(i);  [BUGGY]    minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	int  rowIndex  =  table.getBasicRowIndex(i);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
91	[BUG]  [BUGGY]  i  =  table.getBasicRow(col);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {    [BUGGY]  i  =  table.getBasicRow(col);  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	i  =  table.getBasicRow(col);	      i    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
