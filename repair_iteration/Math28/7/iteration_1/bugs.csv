bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {	if  (i  <  minIndex)  {  	compilable	  [FE]  MaxCountExceededException  	13	1	replace
2	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [FE]  MaxCountExceededException  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {	if  (i  <  minIndex)  {  	compilable	  [FE]  MaxCountExceededException  	13	1	replace
3	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  [FE]      MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatio)  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  <  minIndex  ||  col  <  minRatio)  {	if  (i  <  minIndex)  {  	compilable	  [FE]  MaxCountExceededException  	13	1	replace
4	[BUG]  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatio)  {  [FE]  MaxCountExceededException  [FE]      MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (i  <  minIndex  ||  col  <  minRatio)  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  minIndex  ||  col  <  minRatio)  {	if  (i  <  minIndex)  {  	compilable	  [FE]  MaxCountExceededException  	13	1	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	  	if  (i  <  minIndex)  {  	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]    int  minIndex  =  table.getBasicRow(i);  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    int  minIndex  =  table.getBasicRow(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    int  minIndex  =  table.getBasicRow(i);		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
7	[BUG]  [BUGGY]    i  =  table.getBasicRow(i);  [CE]  cannot  find  symbol  table  [FE]      MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    i  =  table.getBasicRow(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    i  =  table.getBasicRow(i);		non-compiled	[CE]  cannot  find  symbol  table	14	None	add
8	[BUG]  [BUGGY]    int  minIndex  =  i.intValue();  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]        MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    int  minIndex  =  i.intValue();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    int  minIndex  =  i.intValue();		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
9	[BUG]  [BUGGY]    Integer  minIndex  =  table.getBasicRow(i);  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]          MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    Integer  minIndex  =  table.getBasicRow(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    Integer  minIndex  =  table.getBasicRow(i);		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
10	[BUG]  [BUGGY]    Integer  minIndex  =  i.intValue();  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]            MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    Integer  minIndex  =  i.intValue();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    Integer  minIndex  =  i.intValue();		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
11	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (minIndex  <  minRow)  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (minIndex  <  minRow)  {	if  (i  <  minIndex)  {  	compilable	  [FE]  NullPointerException  	13	4	replace
12	[BUG]  [BUGGY]  if  (minIndex  <  minRow)  {  [FE]  NullPointerException  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (minIndex  <  minRow)  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (minIndex  <  minRow)  {	if  (i  <  minIndex)  {  	compilable	  [FE]  NullPointerException  	13	4	replace
13	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  [FE]      MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (i  >  minIndex)  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if  (i  >  minIndex)  {	if  (i  <  minIndex)  {  	compilable	  [FE]  UnboundedSolutionException  	13	4	replace
14	[BUG]  [BUGGY]  if  (i  >  minIndex)  {  [FE]  UnboundedSolutionException  [FE]      MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (i  >  minIndex)  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  >  minIndex)  {	if  (i  <  minIndex)  {  	compilable	  [FE]  UnboundedSolutionException  	13	4	replace
15	[BUG]  [BUGGY]    Integer  minRow  =  table.getBasicRow(i);  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    Integer  minRow  =  table.getBasicRow(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    Integer  minRow  =  table.getBasicRow(i);		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
16	[BUG]  [BUGGY]    int  minIndex  =  table.getBasicColumn(i);  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]      MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    int  minIndex  =  table.getBasicColumn(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    int  minIndex  =  table.getBasicColumn(i);		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
17	[BUG]  [BUGGY]  if  (i  <  =  col)  {  [CE]  illegal  start  of  expression  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (i  <  =  col)  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if  (i  <  =  col)  {	if  (i  <  minIndex)  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]    int  minIndex  =  table.getBasicColumnIndex(i);  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]    MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    int  minIndex  =  table.getBasicColumnIndex(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    int  minIndex  =  table.getBasicColumnIndex(i);		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
19	[BUG]  [BUGGY]    Integer  minIndex  =  row.getBasicRow(i);  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [FE]      MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    Integer  minIndex  =  row.getBasicRow(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    Integer  minIndex  =  row.getBasicRow(i);		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
20	[BUG]  [BUGGY]    minIndex  =  row.getBasicRow(i);  [CE]  cannot  find  symbol  [FE]        MaxCountExceededException  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    minIndex  =  row.getBasicRow(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    minIndex  =  row.getBasicRow(i);		non-compiled	[CE]  cannot  find  symbol	14	None	add
