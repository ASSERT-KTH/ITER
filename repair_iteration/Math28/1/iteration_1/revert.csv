projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumnValue(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=getColumnValue(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumnCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumn(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=getColumnIndex(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=null;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=col;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.minUlps;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.minRatioPositions;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.maxUlps;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(0);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integerrow=table.getBasicRow(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integerrow=table.getBasicRow(i);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=table.getColumnCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=table.getColumnIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=table.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=table.getRowMinimumSize();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=row;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=table.getBasicRow(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=table.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=table.getRowIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=table.getBasicRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.maxUlps+1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integerrow=this.table.getBasicRow(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integerrow=table.getBasicRow(row);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.minValue;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.table.getRowIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.col.getRowIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.row.getRowIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col+1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col-1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(minRow);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.table.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=column.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=row.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=getColumnValue(row);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=getColumnValue(tableau);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=getColumnValue(tableau,col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col);IntegerminRow=newInteger(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col);IntegerminRow=newInteger(0);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col);Integerrow=newInteger(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col);IntegerminRow=newInteger(col+1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col);Integercol=newInteger(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=getColumnIndex(row);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=getColumnIndex(tableau);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=getColumnIndex(column);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=getColumnIndex(col,cmp);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumnValue(row);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumnValue(col-1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumnValue(col,cmp);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumn(col-1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumn(col+1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumn(row);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.table.getBasicRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.tab.getBasicRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=column.getBasicRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(0);IntegerminRow=newInteger(0);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(0);IntegerminRow=newInteger(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(0);IntegerminRow=newInteger(1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(0);Integerrow=newInteger(0);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(0);IntegerminRow=newInteger(col+1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0L;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.table.getBasicRow(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=table.getBasicRow(i);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=table.getBasicRow(row);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integerrow=tableau.getBasicRow(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.table.getRowMinimumSize();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=column.getRowMinimumSize();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=table.getColumnMinimumSize();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=table.getColumnCount()-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=this.table.getColumnCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=table.getColumnCount()+1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=table.getColumnCount()-cmp;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.maxUlps;IntegerminRow=this.maxUlps;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.maxUlps;IntegerminRow=this.minUlps;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.maxUlps;IntegerminRow=this.maxUlps+1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.maxUlps;IntegerminRow=this.maxUlps+col;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.maxUlps;IntegerminRow=this.maxUlps-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=i;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=column;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.table.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.col.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.row.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumnCount()-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumnCount()+1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=this.table.getColumnCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;IntegerminRow=0;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;IntegerminRow=(int)Math.rint(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;IntegerminRow=1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;IntegerminRow=(int)Math.floor(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;IntegerminRow=(int)Math.ceil(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.minRatio;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=table.getColumnIndex()-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=this.table.getColumnIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=table.getColumnIndex()+1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=table.getColumnIndex()-cmp;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumn(column);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumn(coll);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumn(i);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.maxUlps-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.minUlps-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumnValue(i);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=table.getColumnCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.tab.getRowIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=table.getColumnIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col);Integercolumn=newInteger(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col);Integercol=newInteger(0);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(row);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=tableau.getBasicRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(0);Double.POSITIVE_INFINITY;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=getColumnIndex(Tableau.DEFAULT_EPSILON);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=getColumnValue(Tableau.DEFAULT_EPSILON);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=getColumnValue(column);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;Integerrow=0;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=tableau.getBasicRow(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=this.tab.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=2;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.maxUlps;Integerrow=this.maxUlps;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.minUlio;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.minUlties;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcol=getColumnIndex(table,column);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=getColumnValue(table,column);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=table.getRowMinimumSize()-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=tableau.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=chart.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138intcolumn=table.getColumnIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integerrow=table.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integerrow=table.getColumnCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=table.minRatioPositions;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;Integerrow=table.getBasicRow(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;Integerrow=table.getRowIndex();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;Integerrow=table.getRowCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=0;Integerrow=table.getColumnCount();
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integerrow=table.getColumnValue(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integercol=table.getColumnValue(col,DEFAULT_EPSILON);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(0);Integerrow=newInteger(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=(int)(table.getRowCount()-1);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=(int)Math.rint(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138Integerrow=table.getColumn(col);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=newInteger(col);Integerrow=newInteger(0);
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=table.getRowCount()-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138introw=table.getBasicRowCount()-1;
projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java138IntegerminRow=this.minUlps+1;
