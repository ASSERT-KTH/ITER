bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i!=  table.getBasicRow(i))  {  [CE]  cannot  find  symbol  table  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i!=  table.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i!=  table.getBasicRow(i))  {	  if(i    ==    tableau.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	10	None	replace
2	[BUG]  [BUGGY]  if(i  <  =  table.getBasicRow(i))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  <  =  table.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  table.getBasicRow(i))  {	  if(i    ==    tableau.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  if(i  ==  table.getRowCount(i))  {  [CE]  cannot  find  symbol  table  [FE]        NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  table.getRowCount(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getRowCount(i))  {	  if(i    ==    tableau.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	10	None	replace
4	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  minIndex  =  table.getBasicRow(i,  col);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i,  col);	      int    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  minIndex  =  table.getBasicRow(i  -  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i  -  1);	      int    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  minIndex  =  table.getBasicRow(i  +  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getBasicRow(i  +  1);	      int    minIndex    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  -  1;  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  -  1;  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  -  1;	      int    minIndex    =    table.getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  1;  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  1;  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  +  1;	      int    minIndex    =    table.getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions();  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  minIndex  =  table.getMinimumObjectiveFunctions();  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinimumObjectiveFunctions();	      int    minIndex    =    table.getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i  -  1);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getRow(i  -  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i  -  1);	      Integer    row    =(Integer)table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getRow(i  +  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i  +  1);	      Integer    row    =(Integer)table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getRow(i,  col);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getRow(i,  col);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getRow(i,  col);	      Integer    row    =(Integer)table.getRow(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(i  ==  row.getBasicRow(i))  {  [CE]  cannot  find  symbol  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  row.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getBasicRow(i))  {	  if(i    ==    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
14	[BUG]  [BUGGY]  if(i  ==  column.getBasicRow(i))  {  [CE]  cannot  find  symbol  column  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  column.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  column.getBasicRow(i))  {	  if(i    ==    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  column	6	None	replace
15	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i,  col);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  row  =  table.getRowIndex(i,  col);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(i,  col);	      int    row    =    table.getRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  row  =  table.getRowIndex(i  +  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(i  +  1);	      int    row    =    table.getRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(i  -  1);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  row  =  table.getRowIndex(i  -  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(i  -  1);	      int    row    =    table.getRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  int  row  =  table.getColumnIndex(i);  [CE]  illegal  start  of  type  [FE]                    MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  row  =  table.getColumnIndex(i);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getColumnIndex(i);	      int    row    =    table.getRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  Integer  row  =  table.getRow(i);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =  table.getRow(i);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getRow(i);	      Integer    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =  table.getBasicRow(i,  col);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i,  col);	      Integer    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =  table.getBasicRow(i  -  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i  -  1);	      Integer    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  int  row  =  table.getRow(i);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  row  =  table.getRow(i);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRow(i);	      int    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  row  =  table.getBasicRow(i,  col);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getBasicRow(i,  col);	      int    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  int  row  =  table.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  row  =  table.getBasicRow(i  -  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getBasicRow(i  -  1);	      int    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i  +  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getBasicRow(i  +  1);	      Integer    row    =(Integer)table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  col);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i,  col);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getBasicRow(i,  col);	      Integer    row    =(Integer)table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  if(i  ==  tableau.getBasicRow(i))  {  if(i  ==  tableau.getBasicRow(i))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  tableau.getBasicRow(i))  {  if(i  ==  tableau.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i    ==    tableau.getBasicRow(i))    {    if(i  ==  tableau.getBasicRow(i))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
28	[BUG]  [BUGGY]  if(i  ==  tableau.getBasicRow(i))  {  if(i  ==  table.getBasicRow(i))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  tableau.getBasicRow(i))  {  if(i  ==  table.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i    ==    tableau.getBasicRow(i))    {    if(i  ==  table.getBasicRow(i))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
29	[BUG]  [BUGGY]  if(i  ==  tableau.getBasicRow(i))  {  if(i  ==  Table.getBasicRow(i))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  tableau.getBasicRow(i))  {  if(i  ==  Table.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i    ==    tableau.getBasicRow(i))    {    if(i  ==  Table.getBasicRow(i))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
30	[BUG]  [BUGGY]  if(i  ==  tableau.getBasicRow(i))  {  if(i!=  tableau.getBasicRow(i))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  tableau.getBasicRow(i))  {  if(i!=  tableau.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i    ==    tableau.getBasicRow(i))    {    if(i!=  tableau.getBasicRow(i))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
31	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i  -  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getColumn(i  -  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i  -  1);	      Integer    row    =(Integer)table.getColumn(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  col);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  col);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i,  col);	      Integer    row    =(Integer)table.getColumn(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  if(col  ==  row.getBasicRow(i))  {  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(col  ==  row.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  ==  row.getBasicRow(i))  {	  if(col    ==    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
34	[BUG]  [BUGGY]  if(i  ==  table.getBasicRow(i)||  col  ==  0)  {  [CE]  cannot  find  symbol  table  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  table.getBasicRow(i)||  col  ==  0)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getBasicRow(i)||  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  table	11	None	replace
35	[BUG]  [BUGGY]  if(i  ==  row.getBasicRow(i)||  col  ==  0)  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  row.getBasicRow(i)||  col  ==  0)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getBasicRow(i)||  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
36	[BUG]  [BUGGY]  if(col  ==  row.getBasicRow(i)||  col  ==  0)  {  [CE]  cannot  find  symbol  [FE]              MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(col  ==  row.getBasicRow(i)||  col  ==  0)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  ==  row.getBasicRow(i)||  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
37	[BUG]  [BUGGY]  if(i  ==  table.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  table  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getBasicRow(i)||  row  >  col)  {	  if(row    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  table	15	None	replace
38	[BUG]  [BUGGY]  if(col  ==  row.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(col  ==  row.getBasicRow(i)||  row  >  col)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(col  ==  row.getBasicRow(i)||  row  >  col)  {	  if(row    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
39	[BUG]  [BUGGY]  if(i  ==  row.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  row.getBasicRow(i)||  row  >  col)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  row.getBasicRow(i)||  row  >  col)  {	  if(row    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
40	[BUG]  [BUGGY]  if(minRow  ==  table.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  table  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(minRow  ==  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minRow  ==  table.getBasicRow(i)||  row  >  col)  {	  if(row    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  table	15	None	replace
41	[BUG]  [BUGGY]  if(column  ==  table.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  column  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(column  ==  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(column  ==  table.getBasicRow(i)||  row  >  col)  {	  if(row    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  column	15	None	replace
42	[BUG]  [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1);  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =  table.getBasicRow(i  +  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =  table.getBasicRow(i  +  1);	      Integer    row    =    table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  if(minRow  ==  table.getBasicRow(i))  {  [CE]  cannot  find  symbol  table  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(minRow  ==  table.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minRow  ==  table.getBasicRow(i))  {	  if(row    ==    table.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	8	None	replace
44	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i  -  1);  [CE]  illegal  start  of  type  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getBasicRow(i  -  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getBasicRow(i  -  1);	      Integer    row    =(Integer)table.getBasicRow(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  i;  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions()  +  i;  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions()  +  i;	      int    minIndex    =    table.getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i);  [CE]  illegal  start  of  type  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  minIndex  =  table.getNumObjectiveFunctions(i);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getNumObjectiveFunctions(i);	      int    minIndex    =    table.getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  if(minRow  ==  table.getBasicRow(i)||  col  ==  0)  {  [CE]  cannot  find  symbol  table  [FE]          MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(minRow  ==  table.getBasicRow(i)||  col  ==  0)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(minRow  ==  table.getBasicRow(i)||  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  table	11	None	replace
48	[BUG]  [BUGGY]  if(row  ==  table.getBasicRow(i)&&  col  ==  0)  {  [CE]  cannot  find  symbol  table  [FE]            MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(row  ==  table.getBasicRow(i)&&  col  ==  0)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(row  ==  table.getBasicRow(i)&&  col  ==  0)  {	  if(row    ==    table.getBasicRow(i)||    col    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  table	11	None	replace
49	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i  +  1);  [CE]  illegal  start  of  type  [FE]                MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getColumn(i  +  1);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i  +  1);	      Integer    row    =(Integer)table.getColumn(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  minIndex);  [CE]  illegal  start  of  type  [FE]                  MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  Integer  row  =(Integer)table.getColumn(i,  minIndex);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	Integer  row  =(Integer)table.getColumn(i,  minIndex);	      Integer    row    =(Integer)table.getColumn(i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  if(i  <  =  tableau.getBasicRow(i))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  <  =  tableau.getBasicRow(i))  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  <  =  tableau.getBasicRow(i))  {	  if(i    ==    tableau.getBasicRow(i))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  if(i  ==  table.getBasicRow(i)&&  col  <  minRatioPositions.size())  {  [CE]  cannot  find  symbol  table  [FE]      NullPointerException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(i  ==  table.getBasicRow(i)&&  col  <  minRatioPositions.size())  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getBasicRow(i)&&  col  <  minRatioPositions.size())  {	  if(i    ==    tableau.getBasicRow(i))    {    	non-compiled	[CE]  cannot  find  symbol  table	10	None	replace
53	[BUG]  [BUGGY]  int  row  =  table.getRowIndex(row,  i);  [CE]  illegal  start  of  type  [FE]              MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  row  =  table.getRowIndex(row,  i);  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  row  =  table.getRowIndex(row,  i);	      int    row    =    table.getRowIndex(i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  if(field  ==  table.getBasicRow(i)||  row  >  col)  {  [CE]  cannot  find  symbol  field  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  if(field  ==  table.getBasicRow(i)||  row  >  col)  {  [BUGGY]    if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(field  ==  table.getBasicRow(i)||  row  >  col)  {	  if(row    ==    table.getBasicRow(i)||    row    >    col)    {    	non-compiled	[CE]  cannot  find  symbol  field	15	None	replace
55	[BUG]  [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions();  [CE]  illegal  start  of  type  [FE]        MaxCountExceededException    [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {    [BUGGY]  int  minIndex  =  table.getMinObjectiveFunctions();  [BUGGY]    if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	int  minIndex  =  table.getMinObjectiveFunctions();	      int    minIndex    =    table.getNumObjectiveFunctions();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
