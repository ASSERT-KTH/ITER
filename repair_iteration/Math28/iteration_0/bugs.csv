bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] Integer minRow = null; [FE] MaxCountExceededException testMath828Cycle [CONTEXT]          [BUGGY] Integer minRow = null; [BUGGY] int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	
2	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT]          [BUGGY] [BUGGY] Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	add	
3	[BUG] [BUGGY] int minIndex = tableau.getWidth(); [FE] MaxCountExceededException testMath828Cycle [CONTEXT]          Integer minRow = null; [BUGGY] int minIndex = tableau.getWidth(); [BUGGY] for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	
4	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT]          Integer minRow = null; [BUGGY] [BUGGY] int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	add	
5	[BUG] [BUGGY] for (Integer row : minRatioPositions) { [FE] MaxCountExceededException testMath828Cycle [CONTEXT]         Integer minRow = null; int minIndex = tableau.getWidth(); [BUGGY] for (Integer row : minRatioPositions) { [BUGGY] int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	
6	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT]         Integer minRow = null; int minIndex = tableau.getWidth(); [BUGGY] [BUGGY] for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	add	
7	[BUG] [BUGGY] int i = tableau.getNumObjectiveFunctions(); [FE] MaxCountExceededException testMath828Cycle [CONTEXT]        Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { [BUGGY] int i = tableau.getNumObjectiveFunctions(); [BUGGY] for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } } return minRow; [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	
8	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT]        Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { [BUGGY] [BUGGY] int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } } return minRow; [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	add	
9	[BUG] [BUGGY] for (; i < tableau.getWidth() - 1 && minRow != row; i++) { [FE] MaxCountExceededException testMath828Cycle [CONTEXT]       Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); [BUGGY] for (; i < tableau.getWidth() - 1 && minRow != row; i++) { [BUGGY] if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } } return minRow; } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	
10	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT]       Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); [BUGGY] [BUGGY] for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } } return minRow; } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	add	
11	[BUG] [BUGGY] if (row == tableau.getBasicRow(i)) { [FE] MaxCountExceededException testMath828Cycle [CONTEXT]      Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { [BUGGY] if (row == tableau.getBasicRow(i)) { [BUGGY] if (i < minIndex) { minIndex = i; minRow = row; } } } } return minRow; } return minRatioPositions.get(0); [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	
12	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT]      Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { [BUGGY] [BUGGY] if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } } return minRow; } return minRatioPositions.get(0); [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	add	
13	[BUG] [BUGGY] if (i < minIndex) { [FE] MaxCountExceededException testMath828Cycle [CONTEXT]     Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { [BUGGY] if (i < minIndex) { [BUGGY] minIndex = i; minRow = row; } } } } return minRow; } return minRatioPositions.get(0); } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	
14	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT]     Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { [BUGGY] [BUGGY] if (i < minIndex) { minIndex = i; minRow = row; } } } } return minRow; } return minRatioPositions.get(0); } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	
15	[BUG] [BUGGY] minIndex = i; [FE] MaxCountExceededException testMath828Cycle [CONTEXT]    Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { [BUGGY] minIndex = i; [BUGGY] minRow = row; } } } } return minRow; } return minRatioPositions.get(0); } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	
16	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT]    Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { [BUGGY] [BUGGY] minIndex = i; minRow = row; } } } } return minRow; } return minRatioPositions.get(0); } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	add	
17	[BUG] [BUGGY] minRow = row; [FE] MaxCountExceededException testMath828Cycle [CONTEXT]   Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; [BUGGY] minRow = row; [BUGGY] } } } } return minRow; } return minRatioPositions.get(0); } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	
18	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT]   Integer minRow = null; int minIndex = tableau.getWidth(); for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; [BUGGY] [BUGGY] minRow = row; } } } } return minRow; } return minRatioPositions.get(0); } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	add	
19	[BUG] [BUGGY] } [FE] MaxCountExceededException testMath828Cycle [CONTEXT] for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } [BUGGY] } [BUGGY] return minRow; } return minRatioPositions.get(0); } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	
20	[BUG] [BUGGY] [FE] MaxCountExceededException testMath828Cycle [CONTEXT] for (Integer row : minRatioPositions) { int i = tableau.getNumObjectiveFunctions(); for (; i < tableau.getWidth() - 1 && minRow != row; i++) { if (row == tableau.getBasicRow(i)) { if (i < minIndex) { minIndex = i; minRow = row; } } } [BUGGY] [BUGGY] } return minRow; } return minRatioPositions.get(0); } [CLASS] SimplexSolver [METHOD] getPivotRow [RETURN_TYPE] Integer  SimplexTableau tableau final int col [VARIABLES] Integer minRow row List minRatioPositions boolean SimplexTableau tableau double DEFAULT_EPSILON entry epsilon minRatio minValue ratio rhs int DEFAULT_ULPS cmp col column i maxUlps minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	add	
