bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    row  =(List)this.minRows.get(i);  [CE]  cannot  find  symbol  minRows  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =(List)this.minRows.get(i);  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =(List)this.minRows.get(i);		non-compiled	[CE]  cannot  find  symbol  minRows	12	None	add
2	[BUG]  [BUGGY]    row  =(List)this.minRow.clone();  [CE]  cannot  find  symbol  minRow  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =(List)this.minRow.clone();  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =(List)this.minRow.clone();		non-compiled	[CE]  cannot  find  symbol  minRow	12	None	add
3	[BUG]  [BUGGY]    row  =(List)this.minRow.getColumnCount();  [CE]  cannot  find  symbol  minRow  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =(List)this.minRow.getColumnCount();  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =(List)this.minRow.getColumnCount();		non-compiled	[CE]  cannot  find  symbol  minRow	12	None	add
4	[BUG]  [BUGGY]    row  =  getRow(row,  col);  [CE]  cannot  find  symbol  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =  getRow(row,  col);  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =  getRow(row,  col);		non-compiled	[CE]  cannot  find  symbol	12	None	add
5	[BUG]  [BUGGY]    row  =(List)this.minRow.get(i);  [CE]  cannot  find  symbol  minRow  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =(List)this.minRow.get(i);  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =(List)this.minRow.get(i);		non-compiled	[CE]  cannot  find  symbol  minRow	12	None	add
11	[BUG]  [BUGGY]  if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row;  if(minRow  >  col)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row;  if(minRow  >  col)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row;  if(minRow  >  col)  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
12	[BUG]  [BUGGY]  if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row;  if(minRow  >  col)  {  return  minRow;  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row;  if(minRow  >  col)  {  return  minRow;  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row;  if(minRow  >  col)  {  return  minRow;  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
13	[BUG]  [BUGGY]  if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row;  if(minRow  >  col)  {  minRow  =  row;  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row;  if(minRow  >  col)  {  minRow  =  row;  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row;  if(minRow  >  col)  {  minRow  =  row;  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
14	[BUG]  [BUGGY]  if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row.getColumnCount();  if(minRow  >  col)  {  minRow  =  row;  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row.getColumnCount();  if(minRow  >  col)  {  minRow  =  row;  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	if(col  <  column)  {  if(minRow  >  col)  {  minRow  =  row.getColumnCount();  if(minRow  >  col)  {  minRow  =  row;  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
15	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
21	[BUG]  [BUGGY]    int  col  =  tableau.getColumnCount();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    int  col  =  tableau.getColumnCount();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    int  col  =  tableau.getColumnCount();		non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
22	[BUG]  [BUGGY]    int  col  =  table.getColumnCount();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    int  col  =  table.getColumnCount();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    int  col  =  table.getColumnCount();		non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
23	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  table.getMinimumPositions();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    List  <  Integer>  minRatioPositions  =  table.getMinimumPositions();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    List  <  Integer>  minRatioPositions  =  table.getMinimumPositions();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
24	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getRows();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getRows();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    List  <  Integer>  minRatioPositions  =  tableau.getRows();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
25	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  Tableau.getIntegerSize();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    List  <  Integer>  minRatioPositions  =  Tableau.getIntegerSize();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    List  <  Integer>  minRatioPositions  =  Tableau.getIntegerSize();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
31	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  this.minRows.get(col);  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    List  <  Integer>  minRatioPositions  =  this.minRows.get(col);  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    List  <  Integer>  minRatioPositions  =  this.minRows.get(col);		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	4	None	add
32	[BUG]  [BUGGY]    SimplexTableau  <  Integer  row  =  simplexTableau.getIntegerValue();  [CE]  >  expected  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    SimplexTableau  <  Integer  row  =  simplexTableau.getIntegerValue();  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    SimplexTableau  <  Integer  row  =  simplexTableau.getIntegerValue();		non-compiled	[CE]  >  expected	4	None	add
33	[BUG]  [BUGGY]    SimplexTableau  <  Integer  row  =  simplexTableau.getIntegerColumn();  [CE]  >  expected  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    SimplexTableau  <  Integer  row  =  simplexTableau.getIntegerColumn();  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    SimplexTableau  <  Integer  row  =  simplexTableau.getIntegerColumn();		non-compiled	[CE]  >  expected	4	None	add
34	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  this.minRows.get(row);  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    List  <  Integer>  minRatioPositions  =  this.minRows.get(row);  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    List  <  Integer>  minRatioPositions  =  this.minRows.get(row);		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	4	None	add
35	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  table.getIntegerValue();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    List  <  Integer>  minRatioPositions  =  table.getIntegerValue();  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    List  <  Integer>  minRatioPositions  =  table.getIntegerValue();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	4	None	add
42	[BUG]  [BUGGY]  if(row  >  table.getBasicRow(i))  {  [CE]  cannot  find  symbol  table  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]  if(row  >  table.getBasicRow(i))  {  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(row  >  table.getBasicRow(i))  {	if  (row  ==  tableau.getBasicRow(i))  {  	non-compiled	[CE]  cannot  find  symbol  table	11	None	replace
44	[BUG]  [BUGGY]  if(row  >  table.getRowWidth())  {  [CE]  cannot  find  symbol  table  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]  if(row  >  table.getRowWidth())  {  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(row  >  table.getRowWidth())  {	if  (row  ==  tableau.getBasicRow(i))  {  	non-compiled	[CE]  cannot  find  symbol  table	11	None	replace
51	[BUG]  [BUGGY]    if(row  >  col)  {  if(minRow.getColumnCount()  >  1)  {  minRow  =  row;  }  [CE]  illegal  start  of  expression  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    if(row  >  col)  {  if(minRow.getColumnCount()  >  1)  {  minRow  =  row;  }  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    if(row  >  col)  {  if(minRow.getColumnCount()  >  1)  {  minRow  =  row;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
52	[BUG]  [BUGGY]    if(row  >  col)  {  if(minRow.getColumnCount()  >  1)  {  row  =  row;  }  [CE]  illegal  start  of  expression  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    if(row  >  col)  {  if(minRow.getColumnCount()  >  1)  {  row  =  row;  }  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    if(row  >  col)  {  if(minRow.getColumnCount()  >  1)  {  row  =  row;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
53	[BUG]  [BUGGY]    if(row  >  col)  {  if(minRow.getColumnCount()  >  1)  {  minRow  =  column;  }  [CE]  illegal  start  of  expression  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    if(row  >  col)  {  if(minRow.getColumnCount()  >  1)  {  minRow  =  column;  }  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    if(row  >  col)  {  if(minRow.getColumnCount()  >  1)  {  minRow  =  column;  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
54	[BUG]  [BUGGY]    row  =  table.getRowIndex();  [CE]  cannot  find  symbol  table  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    row  =  table.getRowIndex();  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    row  =  table.getRowIndex();		non-compiled	[CE]  cannot  find  symbol  table	18	None	add
55	[BUG]  [BUGGY]    row  =  table.getRowIndex(i);  [CE]  cannot  find  symbol  table  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    row  =  table.getRowIndex(i);  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    row  =  table.getRowIndex(i);		non-compiled	[CE]  cannot  find  symbol  table	18	None	add
61	[BUG]  [BUGGY]    column  =  tableau.getColumnCount();  [CE]  cannot  find  symbol  column  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    column  =  tableau.getColumnCount();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    column  =  tableau.getColumnCount();		non-compiled	[CE]  cannot  find  symbol  column	14	None	add
62	[BUG]  [BUGGY]    row  =  tableau.getRowIndex();  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    row  =  tableau.getRowIndex();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    row  =  tableau.getRowIndex();		non-compiled	[CE]  cannot  find  symbol	14	None	add
63	[BUG]  [BUGGY]    column  =  tableau.getColumnIndex();  [CE]  cannot  find  symbol  column  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    column  =  tableau.getColumnIndex();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    column  =  tableau.getColumnIndex();		non-compiled	[CE]  cannot  find  symbol  column	14	None	add
64	[BUG]  [BUGGY]    row  =  table.getRowIndex();  [CE]  cannot  find  symbol  table  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    row  =  table.getRowIndex();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    row  =  table.getRowIndex();		non-compiled	[CE]  cannot  find  symbol  table	14	None	add
65	[BUG]  [BUGGY]    i  =  tableau.getBasicColumn();  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    i  =  tableau.getBasicColumn();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    i  =  tableau.getBasicColumn();		non-compiled	[CE]  cannot  find  symbol	14	None	add
71	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  minRow!=  row;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	add	for(;  i  <  tableau.getWidth()  &&  minRow!=  row;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	9	1
72	[BUG]  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  minRow!=  row;  i++)  {  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  minRow!=  row;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  tableau.getWidth()  &&  minRow!=  row;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	9	1	replace
72	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  row!=  minRow;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	add	for(;  i  <  tableau.getWidth()  &&  row!=  minRow;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	9	1
73	[BUG]  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  row!=  minRow;  i++)  {  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  row!=  minRow;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  tableau.getWidth()  &&  row!=  minRow;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	9	1	replace
73	[BUG]  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  column!=  minRow;  i++)  {  [CE]  cannot  find  symbol  column  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  column!=  minRow;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  tableau.getWidth()  &&  column!=  minRow;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	non-compiled	[CE]  cannot  find  symbol  column	9	None	replace
75	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	  	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
81	[BUG]  [BUGGY]    row  =  table.getRowIndex(i);  [CE]  cannot  find  symbol  table  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =  table.getRowIndex(i);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =  table.getRowIndex(i);		non-compiled	[CE]  cannot  find  symbol  table	16	None	add
82	[BUG]  [BUGGY]    row  =(Integer)tableau.getPivotRow(i);  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =(Integer)tableau.getPivotRow(i);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =(Integer)tableau.getPivotRow(i);		non-compiled	[CE]  cannot  find  symbol	16	None	add
83	[BUG]  [BUGGY]    row  =(Integer)tableau.getColumnFloat(col);  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =(Integer)tableau.getColumnFloat(col);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =(Integer)tableau.getColumnFloat(col);		non-compiled	[CE]  cannot  find  symbol	16	None	add
84	[BUG]  [BUGGY]    row  =(Integer)tableau.getColumnSize();  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =(Integer)tableau.getColumnSize();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =(Integer)tableau.getColumnSize();		non-compiled	[CE]  cannot  find  symbol	16	None	add
85	[BUG]  [BUGGY]    row  =(Integer)tableau.getPivotRow();  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =(Integer)tableau.getPivotRow();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =(Integer)tableau.getPivotRow();		non-compiled	[CE]  cannot  find  symbol	16	None	add
91	[BUG]  [BUGGY]    int  col  =  row.getColumnCount();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  col  =  row.getColumnCount();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  col  =  row.getColumnCount();		non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	add
92	[BUG]  [BUGGY]    int  col  =  table.getColumnFunctions();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  col  =  table.getColumnFunctions();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  col  =  table.getColumnFunctions();		non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	add
93	[BUG]  [BUGGY]    int  col  =  table.getColumnCount();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  col  =  table.getColumnCount();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  col  =  table.getColumnCount();		non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	add
94	[BUG]  [BUGGY]    int  col  =  table.getColumnFunction(col);  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  col  =  table.getColumnFunction(col);  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  col  =  table.getColumnFunction(col);		non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	add
95	[BUG]  [BUGGY]    int  col  =  table.getColumnIndex();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  col  =  table.getColumnIndex();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  col  =  table.getColumnIndex();		non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	add
101	[BUG]  [BUGGY]    int  minRow  =(Integer)this.minRow.clone();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =(Integer)this.minRow.clone();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =(Integer)this.minRow.clone();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
102	[BUG]  [BUGGY]    int  minRow  =(Integer)this.minRow.getColumnCount();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =(Integer)this.minRow.getColumnCount();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =(Integer)this.minRow.getColumnCount();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
103	[BUG]  [BUGGY]    int  col  =  table.getColumnCount();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  col  =  table.getColumnCount();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  col  =  table.getColumnCount();		non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
104	[BUG]  [BUGGY]    int  minRow  =(Integer)this.minRow.toColumn();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =(Integer)this.minRow.toColumn();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =(Integer)this.minRow.toColumn();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
105	[BUG]  [BUGGY]    int  minRow  =(Integer)this.minRow;  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =(Integer)this.minRow;  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =(Integer)this.minRow;		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
112	[BUG]  [BUGGY]  int  minIndex  =  table.getHeight();  [CE]  cannot  find  symbol  table  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]  int  minIndex  =  table.getHeight();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	int  minIndex  =  table.getHeight();	int  minIndex  =  tableau.getWidth();  	non-compiled	[CE]  cannot  find  symbol  table	3	None	replace
113	[BUG]  [BUGGY]  int  minIndex  =  tableau.getColumnIndex();  [CE]  cannot  find  symbol  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]  int  minIndex  =  tableau.getColumnIndex();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	int  minIndex  =  tableau.getColumnIndex();	int  minIndex  =  tableau.getWidth();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
114	[BUG]  [BUGGY]  int  minIndex  =  tableau.getColumnCount();  [CE]  cannot  find  symbol  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]  int  minIndex  =  tableau.getColumnCount();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	int  minIndex  =  tableau.getColumnCount();	int  minIndex  =  tableau.getWidth();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
141	[BUG]  [BUGGY]  Integer  minRow  =  this.minRow;  [CE]  cannot  find  symbol  minRow  [CONTEXT]            [BUGGY]  Integer  minRow  =  this.minRow;  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	Integer  minRow  =  this.minRow;	Integer  minRow  =  null;  	non-compiled	[CE]  cannot  find  symbol  minRow	1	None	replace
142	[BUG]  [BUGGY]  Integer  minRow  =  DEFAULT_EPSILON;  [CE]  incompatible  types  [CONTEXT]            [BUGGY]  Integer  minRow  =  DEFAULT_EPSILON;  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	Integer  minRow  =  DEFAULT_EPSILON;	Integer  minRow  =  null;  	non-compiled	[CE]  incompatible  types	1	None	replace
143	[BUG]  [BUGGY]  Integer  minRow  =  this;  [CE]  incompatible  types  [CONTEXT]            [BUGGY]  Integer  minRow  =  this;  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	Integer  minRow  =  this;	Integer  minRow  =  null;  	non-compiled	[CE]  incompatible  types	1	None	replace
144	[BUG]  [BUGGY]  Integer  minRow  =  row;  [CE]  cannot  find  symbol  row  [CONTEXT]            [BUGGY]  Integer  minRow  =  row;  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	Integer  minRow  =  row;	Integer  minRow  =  null;  	non-compiled	[CE]  cannot  find  symbol  row	1	None	replace
145	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  minRow  [CONTEXT]            [BUGGY]    [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	  	Integer  minRow  =  null;  	non-compiled	[CE]  cannot  find  symbol  minRow	1	None	replace
151	[BUG]  [BUGGY]  for(Integer  row  :  minRows)  {  [CE]  cannot  find  symbol  minRows  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]  for(Integer  row  :  minRows)  {  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	for(Integer  row  :  minRows)  {	for  (Integer  row  :  minRatioPositions)  {  	non-compiled	[CE]  cannot  find  symbol  minRows	5	None	replace
153	[BUG]  [BUGGY]  for(Integer  row  :  col)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]  for(Integer  row  :  col)  {  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	for(Integer  row  :  col)  {	for  (Integer  row  :  minRatioPositions)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	5	None	replace
154	[BUG]  [BUGGY]  for(Integer  row  :  minRow)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]  for(Integer  row  :  minRow)  {  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	for(Integer  row  :  minRow)  {	for  (Integer  row  :  minRatioPositions)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	5	None	replace
161	[BUG]  [BUGGY]  [FE]  UnboundedSolutionException  testMath828  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]  int  i  =  tableau.getHeight();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	add	int  i  =  tableau.getHeight();	int  i  =  tableau.getNumObjectiveFunctions();  	compilable	  [FE]  UnboundedSolutionException  testMath828	7	1
162	[BUG]  [BUGGY]  int  i  =  tableau.getHeight();  [FE]  UnboundedSolutionException  testMath828  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]  int  i  =  tableau.getHeight();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  tableau.getHeight();	int  i  =  tableau.getNumObjectiveFunctions();  	compilable	  [FE]  UnboundedSolutionException  testMath828	7	1	replace
162	[BUG]  [BUGGY]  int  i  =  tableau.getColumnCount();  [CE]  cannot  find  symbol  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]  int  i  =  tableau.getColumnCount();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  tableau.getColumnCount();	int  i  =  tableau.getNumObjectiveFunctions();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
163	[BUG]  [BUGGY]  int  i  =  tableau.getColumnIndex();  [CE]  cannot  find  symbol  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]  int  i  =  tableau.getColumnIndex();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  tableau.getColumnIndex();	int  i  =  tableau.getNumObjectiveFunctions();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
164	[BUG]  [BUGGY]  int  i  =  table.getHeight();  [CE]  cannot  find  symbol  table  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]  int  i  =  table.getHeight();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  table.getHeight();	int  i  =  tableau.getNumObjectiveFunctions();  	non-compiled	[CE]  cannot  find  symbol  table	7	None	replace
181	[BUG]  [BUGGY]    Tableau  tableau  =  Tableau.createInstance(col);  [CE]  cannot  find  symbol  [CONTEXT]            [BUGGY]    Tableau  tableau  =  Tableau.createInstance(col);  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    Tableau  tableau  =  Tableau.createInstance(col);		non-compiled	[CE]  cannot  find  symbol	2	None	add
182	[BUG]  [BUGGY]    Tableau  tableau  =  Tableau.getInstance(col);  [CE]  cannot  find  symbol  [CONTEXT]            [BUGGY]    Tableau  tableau  =  Tableau.getInstance(col);  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    Tableau  tableau  =  Tableau.getInstance(col);		non-compiled	[CE]  cannot  find  symbol	2	None	add
183	[BUG]  [BUGGY]    int  column  =  getColumnCount();  [CE]  cannot  find  symbol  [CONTEXT]            [BUGGY]    int  column  =  getColumnCount();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    int  column  =  getColumnCount();		non-compiled	[CE]  cannot  find  symbol	2	None	add
184	[BUG]  [BUGGY]    int  col  =  getColumnCount();  [CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            [BUGGY]    int  col  =  getColumnCount();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    int  col  =  getColumnCount();		non-compiled	[CE]  variable  col  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	add
185	[BUG]  [BUGGY]    Tableau  tableau  =  Tableau.createInstance(col,  null);  [CE]  cannot  find  symbol  [CONTEXT]            [BUGGY]    Tableau  tableau  =  Tableau.createInstance(col,  null);  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    Tableau  tableau  =  Tableau.createInstance(col,  null);		non-compiled	[CE]  cannot  find  symbol	2	None	add
191	[BUG]  [BUGGY]    row  =  table.getColumnIndex(col);  [CE]  cannot  find  symbol  table  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    row  =  table.getColumnIndex(col);  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    row  =  table.getColumnIndex(col);		non-compiled	[CE]  cannot  find  symbol  table	20	None	add
192	[BUG]  [BUGGY]    row  =  table.getColumnIndex(col);  minRow  =  row;  [CE]  cannot  find  symbol  table  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    row  =  table.getColumnIndex(col);  minRow  =  row;  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    row  =  table.getColumnIndex(col);  minRow  =  row;		non-compiled	[CE]  cannot  find  symbol  table	20	None	add
193	[BUG]  [BUGGY]    row  =  table.getColumnIndex();  [CE]  cannot  find  symbol  table  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    row  =  table.getColumnIndex();  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    row  =  table.getColumnIndex();		non-compiled	[CE]  cannot  find  symbol  table	20	None	add
194	[BUG]  [BUGGY]    row  =  table.getColumnCount();  [CE]  cannot  find  symbol  table  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    row  =  table.getColumnCount();  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    row  =  table.getColumnCount();		non-compiled	[CE]  cannot  find  symbol  table	20	None	add
195	[BUG]  [BUGGY]    row  =  table.getColumnIndex(col);  minRow  =  col;  [CE]  cannot  find  symbol  table  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    row  =  table.getColumnIndex(col);  minRow  =  col;  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    row  =  table.getColumnIndex(col);  minRow  =  col;		non-compiled	[CE]  cannot  find  symbol  table	20	None	add
1	[BUG]  [BUGGY]    int  minRow  =  tableau.getLength();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    int  minRow  =  tableau.getLength();  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    int  minRow  =  tableau.getLength();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	12	None	add
2	[BUG]  [BUGGY]    row  =(Integer)tableau.getRowWidth();  [CE]  cannot  find  symbol  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =(Integer)tableau.getRowWidth();  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =(Integer)tableau.getRowWidth();		non-compiled	[CE]  cannot  find  symbol	12	None	add
3	[BUG]  [BUGGY]    int  minRow  =  tableau.getColumnWidth();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    int  minRow  =  tableau.getColumnWidth();  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    int  minRow  =  tableau.getColumnWidth();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	12	None	add
4	[BUG]  [BUGGY]    row  =(SimplexTableau)this.getRow(minIndex);  [CE]  cannot  find  symbol  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =(SimplexTableau)this.getRow(minIndex);  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =(SimplexTableau)this.getRow(minIndex);		non-compiled	[CE]  cannot  find  symbol	12	None	add
5	[BUG]  [BUGGY]    int  minRow  =  tableau.getLength()  -  1;  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    int  minRow  =  tableau.getLength()  -  1;  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    int  minRow  =  tableau.getLength()  -  1;		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	12	None	add
21	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getPositions();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getPositions();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    List  <  Integer>  minRatioPositions  =  tableau.getPositions();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
22	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getRowWidth();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getRowWidth();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    List  <  Integer>  minRatioPositions  =  tableau.getRowWidth();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
23	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getMinimumPositions();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getMinimumPositions();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    List  <  Integer>  minRatioPositions  =  tableau.getMinimumPositions();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
24	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getRowCount();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getRowCount();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    List  <  Integer>  minRatioPositions  =  tableau.getRowCount();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
25	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getMinimumFunction();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    List  <  Integer>  minRatioPositions  =  tableau.getMinimumFunction();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    List  <  Integer>  minRatioPositions  =  tableau.getMinimumFunction();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
44	[BUG]  [BUGGY]  int  minIndex  =  tableau.getMinimumFunctionIndex();  [CE]  cannot  find  symbol  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]  int  minIndex  =  tableau.getMinimumFunctionIndex();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	int  minIndex  =  tableau.getMinimumFunctionIndex();	int  minIndex  =  tableau.getWidth();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
61	[BUG]  [BUGGY]    return  tableau.getPivotRow(minIndex);  [CE]  cannot  find  symbol  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    return  tableau.getPivotRow(minIndex);  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    return  tableau.getPivotRow(minIndex);		non-compiled	[CE]  cannot  find  symbol	20	None	add
62	[BUG]  [BUGGY]    row  =(SimplexTableau)this.getBasicRow();  [CE]  cannot  find  symbol  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    row  =(SimplexTableau)this.getBasicRow();  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    row  =(SimplexTableau)this.getBasicRow();		non-compiled	[CE]  cannot  find  symbol	20	None	add
63	[BUG]  [BUGGY]    row  =(SimplexTableau)tableau.getBasicRow();  [CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    row  =(SimplexTableau)tableau.getBasicRow();  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    row  =(SimplexTableau)tableau.getBasicRow();		non-compiled	[CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;	20	None	add
64	[BUG]  [BUGGY]    table.setIndex(minIndex);  [CE]  cannot  find  symbol  table  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    table.setIndex(minIndex);  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    table.setIndex(minIndex);		non-compiled	[CE]  cannot  find  symbol  table	20	None	add
65	[BUG]  [BUGGY]    row  =(SimplexTableau)this.getPivotRow();  [CE]  method  getPivotRow  in  class  SimplexSolver  cannot  be  applied  to  given  types;  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    row  =(SimplexTableau)this.getPivotRow();  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    row  =(SimplexTableau)this.getPivotRow();		non-compiled	[CE]  method  getPivotRow  in  class  SimplexSolver  cannot  be  applied  to  given  types;	20	None	add
81	[BUG]  [BUGGY]  int  i  =  row.getNumObjectiveFunctions();  [CE]  cannot  find  symbol  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]  int  i  =  row.getNumObjectiveFunctions();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  row.getNumObjectiveFunctions();	int  i  =  tableau.getNumObjectiveFunctions();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
83	[BUG]  [BUGGY]  int  i  =  tableau.getLength();  [CE]  cannot  find  symbol  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]  int  i  =  tableau.getLength();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	int  i  =  tableau.getLength();	int  i  =  tableau.getNumObjectiveFunctions();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
101	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  row!=  minIndex;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	add	for(;  i  <  tableau.getWidth()  &&  row!=  minIndex;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	9	1
102	[BUG]  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  row!=  minIndex;  i++)  {  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  row!=  minIndex;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  tableau.getWidth()  &&  row!=  minIndex;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	9	1	replace
103	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  minIndex!=  row;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	add	for(;  i  <  tableau.getWidth()  &&  minIndex!=  row;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	9	1
104	[BUG]  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  minIndex!=  row;  i++)  {  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  minIndex!=  row;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  tableau.getWidth()  &&  minIndex!=  row;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	9	1	replace
121	[BUG]  [BUGGY]    row  =  tableau.getBasicRow();  [CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    row  =  tableau.getBasicRow();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    row  =  tableau.getBasicRow();		non-compiled	[CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;	14	None	add
122	[BUG]  [BUGGY]    row  =  tableau.getRowWidth();  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    row  =  tableau.getRowWidth();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    row  =  tableau.getRowWidth();		non-compiled	[CE]  cannot  find  symbol	14	None	add
123	[BUG]  [BUGGY]    int  minIndex  =  table.getMinimumObjectiveFunction();  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    int  minIndex  =  table.getMinimumObjectiveFunction();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    int  minIndex  =  table.getMinimumObjectiveFunction();		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
124	[BUG]  [BUGGY]    int  minIndex  =  table.getBasicIndex();  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    int  minIndex  =  table.getBasicIndex();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    int  minIndex  =  table.getBasicIndex();		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
125	[BUG]  [BUGGY]    column  =  tableau.getColumn();  [CE]  cannot  find  symbol  column  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    column  =  tableau.getColumn();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    column  =  tableau.getColumn();		non-compiled	[CE]  cannot  find  symbol  column	14	None	add
161	[BUG]  [BUGGY]    row  =(Integer)tableau.getBasicRow();  [CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =(Integer)tableau.getBasicRow();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =(Integer)tableau.getBasicRow();		non-compiled	[CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;	16	None	add
162	[BUG]  [BUGGY]    row  =(SimplexTableau)tableau.getBasicRow();  [CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =(SimplexTableau)tableau.getBasicRow();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =(SimplexTableau)tableau.getBasicRow();		non-compiled	[CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;	16	None	add
163	[BUG]  [BUGGY]    row  =(SimplexTableau)table.getBasicRow();  [CE]  cannot  find  symbol  table  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =(SimplexTableau)table.getBasicRow();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =(SimplexTableau)table.getBasicRow();		non-compiled	[CE]  cannot  find  symbol  table	16	None	add
164	[BUG]  [BUGGY]    column  =  tableau.getColumnWidth();  [CE]  cannot  find  symbol  column  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    column  =  tableau.getColumnWidth();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    column  =  tableau.getColumnWidth();		non-compiled	[CE]  cannot  find  symbol  column	16	None	add
165	[BUG]  [BUGGY]    row  =  tableau.getBasicRow();  [CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =  tableau.getBasicRow();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =  tableau.getBasicRow();		non-compiled	[CE]  method  getBasicRow  in  class  SimplexTableau  cannot  be  applied  to  given  types;	16	None	add
183	[BUG]  [BUGGY]  Integer  minRow  =(int)this.minRow;  [CE]  cannot  find  symbol  minRow  [CONTEXT]            [BUGGY]  Integer  minRow  =(int)this.minRow;  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	Integer  minRow  =(int)this.minRow;	Integer  minRow  =  null;  	non-compiled	[CE]  cannot  find  symbol  minRow	1	None	replace
184	[BUG]  [BUGGY]  Integer  minRow  =  this.minRatioPositions;  [CE]  cannot  find  symbol  minRatioPositions  [CONTEXT]            [BUGGY]  Integer  minRow  =  this.minRatioPositions;  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	Integer  minRow  =  this.minRatioPositions;	Integer  minRow  =  null;  	non-compiled	[CE]  cannot  find  symbol  minRatioPositions	1	None	replace
201	[BUG]  [BUGGY]    List  <  Integer>  row  =(List)this.minRows.get(minRow);  [CE]  cannot  find  symbol  minRows  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    List  <  Integer>  row  =(List)this.minRows.get(minRow);  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    List  <  Integer>  row  =(List)this.minRows.get(minRow);		non-compiled	[CE]  cannot  find  symbol  minRows	4	None	add
202	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =(List)this.minRows.get(col);  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    List  <  Integer>  minRatioPositions  =(List)this.minRows.get(col);  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    List  <  Integer>  minRatioPositions  =(List)this.minRows.get(col);		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	4	None	add
203	[BUG]  [BUGGY]    List  <  Integer>  row  =  getRows();  [CE]  cannot  find  symbol  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    List  <  Integer>  row  =  getRows();  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    List  <  Integer>  row  =  getRows();		non-compiled	[CE]  cannot  find  symbol	4	None	add
204	[BUG]  [BUGGY]    List  <  Integer>  minRatioPositions  =(List)this.minRows.get(row);  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    List  <  Integer>  minRatioPositions  =(List)this.minRows.get(row);  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    List  <  Integer>  minRatioPositions  =(List)this.minRows.get(row);		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	4	None	add
205	[BUG]  [BUGGY]    List  <  Integer>  row  =(List)this.minRows.get(col);  [CE]  cannot  find  symbol  minRows  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    List  <  Integer>  row  =(List)this.minRows.get(col);  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    List  <  Integer>  row  =(List)this.minRows.get(col);		non-compiled	[CE]  cannot  find  symbol  minRows	4	None	add
241	[BUG]  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  return(Integer)rhs.divide(minRow,  col);  }  [CE]  illegal  start  of  expression  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  return(Integer)rhs.divide(minRow,  col);  }  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  return(Integer)rhs.divide(minRow,  col);  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
242	[BUG]  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  throw  new  IllegalArgumentException( "Invalid  row  or  column  index  selection ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  throw  new  IllegalArgumentException( "Invalid  row  or  column  index  selection ");  }  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  throw  new  IllegalArgumentException( "Invalid  row  or  column  index  selection ");  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
243	[BUG]  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  throw  new  IllegalArgumentException( "Invalid  row  or  column  selection ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  throw  new  IllegalArgumentException( "Invalid  row  or  column  selection ");  }  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  throw  new  IllegalArgumentException( "Invalid  row  or  column  selection ");  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
244	[BUG]  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  return(Integer)rhs.get(minIndex);  }  [CE]  illegal  start  of  expression  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  return(Integer)rhs.get(minIndex);  }  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  return(Integer)rhs.get(minIndex);  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
245	[BUG]  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  return(Integer)rhs.intValue();  }  [CE]  illegal  start  of  expression  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  return(Integer)rhs.intValue();  }  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    if(i  >  0)  {  if(!(minRow  instanceof  Integer))  {  return(Integer)rhs.intValue();  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
264	[BUG]  [BUGGY]  if(i!=  column)  {  [CE]  cannot  find  symbol  column  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]  if(i!=  column)  {  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i!=  column)  {	if  (row  ==  tableau.getBasicRow(i))  {  	non-compiled	[CE]  cannot  find  symbol  column	11	None	replace
282	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]  minIndex  =  i  +  1;  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	add	minIndex  =  i  +  1;	minIndex  =  i;  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	15	1
283	[BUG]  [BUGGY]  minIndex  =  i  +  1;  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]  minIndex  =  i  +  1;  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	minIndex  =  i  +  1;	minIndex  =  i;  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	15	1	replace
302	[BUG]  [BUGGY]  column  =  tableau.getColumnIndex();  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  column  =  tableau.getColumnIndex();  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	column  =  tableau.getColumnIndex();	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
303	[BUG]  [BUGGY]  for(int  i  =  row.getWidth()  -  1;  i  <  minIndex;  i++)  {  Integer  column  =  tableau.getColumnIndex(minIndex);  if(col  <  0)  {  column  =  col  +  1;  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  for(int  i  =  row.getWidth()  -  1;  i  <  minIndex;  i++)  {  Integer  column  =  tableau.getColumnIndex(minIndex);  if(col  <  0)  {  column  =  col  +  1;  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	for(int  i  =  row.getWidth()  -  1;  i  <  minIndex;  i++)  {  Integer  column  =  tableau.getColumnIndex(minIndex);  if(col  <  0)  {  column  =  col  +  1;  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
304	[BUG]  [BUGGY]  for(int  i  =  row.getWidth()  -  1;  i  <  minIndex;  i++)  {  Integer  column  =  table.getColumnIndex(minIndex);  if(col  <  0)  {  setPosition(col);  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  for(int  i  =  row.getWidth()  -  1;  i  <  minIndex;  i++)  {  Integer  column  =  table.getColumnIndex(minIndex);  if(col  <  0)  {  setPosition(col);  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	for(int  i  =  row.getWidth()  -  1;  i  <  minIndex;  i++)  {  Integer  column  =  table.getColumnIndex(minIndex);  if(col  <  0)  {  setPosition(col);  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
321	[BUG]  [BUGGY]    int  minRow  =  row.getMinimumFunction();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =  row.getMinimumFunction();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =  row.getMinimumFunction();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
322	[BUG]  [BUGGY]    row  =(SimplexTableau)this.getRow();  [CE]  cannot  find  symbol  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    row  =(SimplexTableau)this.getRow();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    row  =(SimplexTableau)this.getRow();		non-compiled	[CE]  cannot  find  symbol	8	None	add
323	[BUG]  [BUGGY]    row  =(SimplexTableau)this.getRowWidth();  [CE]  cannot  find  symbol  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    row  =(SimplexTableau)this.getRowWidth();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    row  =(SimplexTableau)this.getRowWidth();		non-compiled	[CE]  cannot  find  symbol	8	None	add
324	[BUG]  [BUGGY]    int  minRow  =(int)this.minRow.clone();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =(int)this.minRow.clone();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =(int)this.minRow.clone();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
325	[BUG]  [BUGGY]    int  minRow  =(int)this.minRow.getColumn();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =(int)this.minRow.getColumn();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =(int)this.minRow.getColumn();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
341	[BUG]  [BUGGY]  for(Integer  row  :  minIndex)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]  for(Integer  row  :  minIndex)  {  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	for(Integer  row  :  minIndex)  {	for  (Integer  row  :  minRatioPositions)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	5	None	replace
343	[BUG]  [BUGGY]  for(Integer  row  :  minRatioPositions,  col)  {  [CE]  ')'  expected  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]  for(Integer  row  :  minRatioPositions,  col)  {  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	for(Integer  row  :  minRatioPositions,  col)  {	for  (Integer  row  :  minRatioPositions)  {  	non-compiled	[CE]  ')'  expected	5	None	replace
344	[BUG]  [BUGGY]  for(Integer  row  :  minRatioPositions.size()  -  1)  {  [CE]  for-each  not  applicable  to  expression  type  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]  for(Integer  row  :  minRatioPositions.size()  -  1)  {  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	for(Integer  row  :  minRatioPositions.size()  -  1)  {	for  (Integer  row  :  minRatioPositions)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	5	None	replace
361	[BUG]  [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)this.getPivotRow();  [CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)this.getPivotRow();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    SimplexTableau  tableau  =(SimplexTableau)this.getPivotRow();		non-compiled	[CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	add
362	[BUG]  [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getPivotRow();  [CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getPivotRow();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    SimplexTableau  tableau  =(SimplexTableau)getPivotRow();		non-compiled	[CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	add
363	[BUG]  [BUGGY]    List  <  Integer>  row  =(List)this.minRows.get(col);  [CE]  cannot  find  symbol  minRows  [CONTEXT]            [BUGGY]    List  <  Integer>  row  =(List)this.minRows.get(col);  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    List  <  Integer>  row  =(List)this.minRows.get(col);		non-compiled	[CE]  cannot  find  symbol  minRows	2	None	add
364	[BUG]  [BUGGY]    SimplexTableau  tableau  =  getSimplexTableau();  [CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            [BUGGY]    SimplexTableau  tableau  =  getSimplexTableau();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    SimplexTableau  tableau  =  getSimplexTableau();		non-compiled	[CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	add
365	[BUG]  [BUGGY]    List  <  Integer>  row  =  getRows();  [CE]  cannot  find  symbol  [CONTEXT]            [BUGGY]    List  <  Integer>  row  =  getRows();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    List  <  Integer>  row  =  getRows();		non-compiled	[CE]  cannot  find  symbol	2	None	add
381	[BUG]  [BUGGY]    int  minRow  =  row.getMinimumRow();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  minRow  =  row.getMinimumRow();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  minRow  =  row.getMinimumRow();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	add
382	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  row.getMinimumNumber());  [CE]  cannot  find  symbol  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  row.getMinimumNumber());  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  maxUlps  =  Math.max(maxUlps,  row.getMinimumNumber());		non-compiled	[CE]  cannot  find  symbol	10	None	add
383	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  col);  [CE]  variable  maxUlps  might  not  have  been  initialized  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  col);  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  maxUlps  =  Math.max(maxUlps,  col);		non-compiled	[CE]  variable  maxUlps  might  not  have  been  initialized	10	None	add
384	[BUG]  [BUGGY]    int  minRow  =(int)this.minRow.clone();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  minRow  =(int)this.minRow.clone();  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  minRow  =(int)this.minRow.clone();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	10	None	add
385	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  i);  [CE]  variable  maxUlps  might  not  have  been  initialized  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  i);  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  maxUlps  =  Math.max(maxUlps,  i);		non-compiled	[CE]  variable  maxUlps  might  not  have  been  initialized	10	None	add
1	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =  tableau.getBasicRow(i);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	add	    row  =  tableau.getBasicRow(i);		compilable	  [FE]  MaxCountExceededException  testMath828Cycle	16	1
2	[BUG]  [BUGGY]    row  =  tableau.getBasicRow(i);  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =  tableau.getBasicRow(i);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =  tableau.getBasicRow(i);		compilable	  [FE]  MaxCountExceededException  testMath828Cycle	16	1	add
2	[BUG]  [BUGGY]    row  =  tableau.getLength();  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =  tableau.getLength();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =  tableau.getLength();		non-compiled	[CE]  cannot  find  symbol	16	None	add
3	[BUG]  [BUGGY]    row  =  getRowColumn();  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =  getRowColumn();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =  getRowColumn();		non-compiled	[CE]  cannot  find  symbol	16	None	add
4	[BUG]  [BUGGY]    row  =  table.getLength();  [CE]  cannot  find  symbol  table  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =  table.getLength();  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =  table.getLength();		non-compiled	[CE]  cannot  find  symbol  table	16	None	add
5	[BUG]  [BUGGY]    row  =(int)tab.getColumnIndex(col);  [CE]  cannot  find  symbol  tab  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  [BUGGY]    row  =(int)tab.getColumnIndex(col);  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	145	145	1	replace	    row  =(int)tab.getColumnIndex(col);		non-compiled	[CE]  cannot  find  symbol  tab	16	None	add
34	[BUG]  [BUGGY]  for(Integer  row  :  this.minRatioPositions)  {  [CE]  cannot  find  symbol  minRatioPositions  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]  for(Integer  row  :  this.minRatioPositions)  {  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	for(Integer  row  :  this.minRatioPositions)  {	for  (Integer  row  :  minRatioPositions)  {  	non-compiled	[CE]  cannot  find  symbol  minRatioPositions	5	None	replace
62	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  row.getSize());  [CE]  cannot  find  symbol  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  row.getSize());  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  maxUlps  =  Math.max(maxUlps,  row.getSize());		non-compiled	[CE]  cannot  find  symbol	10	None	add
63	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  row.size()  -  1);  [CE]  cannot  find  symbol  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  row.size()  -  1);  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  maxUlps  =  Math.max(maxUlps,  row.size()  -  1);		non-compiled	[CE]  cannot  find  symbol	10	None	add
65	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  row.getLength());  [CE]  cannot  find  symbol  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  row.getLength());  [BUGGY]  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	    int  maxUlps  =  Math.max(maxUlps,  row.getLength());		non-compiled	[CE]  cannot  find  symbol	10	None	add
91	[BUG]  [BUGGY]    int  maxUlps  =  tableau.getMaxUlps();  [CE]  cannot  find  symbol  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    int  maxUlps  =  tableau.getMaxUlps();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    int  maxUlps  =  tableau.getMaxUlps();		non-compiled	[CE]  cannot  find  symbol	6	None	add
92	[BUG]  [BUGGY]    int  minRow  =  tableau.getHeight();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    int  minRow  =  tableau.getHeight();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    int  minRow  =  tableau.getHeight();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
93	[BUG]  [BUGGY]    int  minRatioPositions  =  tableau.getColumnCount();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    int  minRatioPositions  =  tableau.getColumnCount();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    int  minRatioPositions  =  tableau.getColumnCount();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	6	None	add
94	[BUG]  [BUGGY]    int  maxUlps  =  table.getMaximumFractionValue();  [CE]  cannot  find  symbol  table  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    int  maxUlps  =  table.getMaximumFractionValue();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    int  maxUlps  =  table.getMaximumFractionValue();		non-compiled	[CE]  cannot  find  symbol  table	6	None	add
95	[BUG]  [BUGGY]    int  maxUlps  =  table.getMaxUlps();  [CE]  cannot  find  symbol  table  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  [BUGGY]    int  maxUlps  =  table.getMaxUlps();  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	140	140	1	replace	    int  maxUlps  =  table.getMaxUlps();		non-compiled	[CE]  cannot  find  symbol  table	6	None	add
121	[BUG]  [BUGGY]  if(col  <  0)  {  for(int  i  =  1;  i  <  tableau.getLength();  i++)  {  table.setIndex(minRow);  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  if(col  <  0)  {  for(int  i  =  1;  i  <  tableau.getLength();  i++)  {  table.setIndex(minRow);  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	if(col  <  0)  {  for(int  i  =  1;  i  <  tableau.getLength();  i++)  {  table.setIndex(minRow);  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  tableau.getHeight();  i++)  {  if(!Table.contains(minRow))  {  table.setIndex(minRow);  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  for(int  i  =  1;  i  <  tableau.getHeight();  i++)  {  if(!Table.contains(minRow))  {  table.setIndex(minRow);  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	for(int  i  =  1;  i  <  tableau.getHeight();  i++)  {  if(!Table.contains(minRow))  {  table.setIndex(minRow);  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
123	[BUG]  [BUGGY]  if(col  <  0)  {  for(int  i  =  1;  i  <  tableau.getLength();  i++)  {  table.setItem(minRow);  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  if(col  <  0)  {  for(int  i  =  1;  i  <  tableau.getLength();  i++)  {  table.setItem(minRow);  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	if(col  <  0)  {  for(int  i  =  1;  i  <  tableau.getLength();  i++)  {  table.setItem(minRow);  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  tableau.getHeight();  i++)  {  if(!Table.contains(minRow))  {  minRow  =  col;  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]  for(int  i  =  1;  i  <  tableau.getHeight();  i++)  {  if(!Table.contains(minRow))  {  minRow  =  col;  }  [BUGGY]  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	for(int  i  =  1;  i  <  tableau.getHeight();  i++)  {  if(!Table.contains(minRow))  {  minRow  =  col;  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
151	[BUG]  [BUGGY]    i  =  table.getLength();  [CE]  cannot  find  symbol  table  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    i  =  table.getLength();  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    i  =  table.getLength();		non-compiled	[CE]  cannot  find  symbol  table	18	None	add
152	[BUG]  [BUGGY]    row  =  getRowColumn();  [CE]  cannot  find  symbol  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    row  =  getRowColumn();  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    row  =  getRowColumn();		non-compiled	[CE]  cannot  find  symbol	18	None	add
153	[BUG]  [BUGGY]    i  =  table.getBasicValue();  [CE]  cannot  find  symbol  table  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    i  =  table.getBasicValue();  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    i  =  table.getBasicValue();		non-compiled	[CE]  cannot  find  symbol  table	18	None	add
154	[BUG]  [BUGGY]    i  =  tableau.getBasicValue(i);  [CE]  cannot  find  symbol  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    i  =  tableau.getBasicValue(i);  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    i  =  tableau.getBasicValue(i);		non-compiled	[CE]  cannot  find  symbol	18	None	add
155	[BUG]  [BUGGY]    i  =  table.getBasicValue(i);  [CE]  cannot  find  symbol  table  [CONTEXT]    Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  [BUGGY]    i  =  table.getBasicValue(i);  [BUGGY]  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	146	146	1	replace	    i  =  table.getBasicValue(i);		non-compiled	[CE]  cannot  find  symbol  table	18	None	add
182	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]  if(i  >  0  &&  row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	add	if(i  >  0  &&  row  ==  tableau.getBasicRow(i))  {	if  (row  ==  tableau.getBasicRow(i))  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	11	1
183	[BUG]  [BUGGY]  if(i  >  0  &&  row  ==  tableau.getBasicRow(i))  {  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]  if(i  >  0  &&  row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  >  0  &&  row  ==  tableau.getBasicRow(i))  {	if  (row  ==  tableau.getBasicRow(i))  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	11	1	replace
184	[BUG]  [BUGGY]  if(i  ==  table.getBasicRow(i))  {  [CE]  cannot  find  symbol  table  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]  if(i  ==  table.getBasicRow(i))  {  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	if(i  ==  table.getBasicRow(i))  {	if  (row  ==  tableau.getBasicRow(i))  {  	non-compiled	[CE]  cannot  find  symbol  table	11	None	replace
241	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  col);  [CE]  variable  maxUlps  might  not  have  been  initialized  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    int  maxUlps  =  Math.max(maxUlps,  col);  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    int  maxUlps  =  Math.max(maxUlps,  col);		non-compiled	[CE]  variable  maxUlps  might  not  have  been  initialized	4	None	add
242	[BUG]  [BUGGY]    int  minRatioPositions  =  getMinimumRowPositions();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    int  minRatioPositions  =  getMinimumRowPositions();  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    int  minRatioPositions  =  getMinimumRowPositions();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	4	None	add
243	[BUG]  [BUGGY]    int  minRatioPositions  =(int)Tableau.getPositions();  [CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    int  minRatioPositions  =(int)Tableau.getPositions();  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    int  minRatioPositions  =(int)Tableau.getPositions();		non-compiled	[CE]  variable  minRatioPositions  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	4	None	add
244	[BUG]  [BUGGY]    int  minRow  =  getMaxRow();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    int  minRow  =  getMaxRow();  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    int  minRow  =  getMaxRow();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	4	None	add
245	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    Integer  maxRatioPositions  =  Math.max(16,  col);  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	add	    Integer  maxRatioPositions  =  Math.max(16,  col);		compilable	  [FE]  MaxCountExceededException  testMath828Cycle	4	1
246	[BUG]  [BUGGY]    Integer  maxRatioPositions  =  Math.max(16,  col);  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]    Integer  maxRatioPositions  =  Math.max(16,  col);  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	    Integer  maxRatioPositions  =  Math.max(16,  col);		compilable	  [FE]  MaxCountExceededException  testMath828Cycle	4	1	add
271	[BUG]  [BUGGY]    int  minRow  =(int)table.getColumnCount();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =(int)table.getColumnCount();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =(int)table.getColumnCount();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
272	[BUG]  [BUGGY]    int  minRow  =(int)tabella.getColumnCount();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =(int)tabella.getColumnCount();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =(int)tabella.getColumnCount();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
273	[BUG]  [BUGGY]    int  minRow  =  table.getColumnCount();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =  table.getColumnCount();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =  table.getColumnCount();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
274	[BUG]  [BUGGY]    int  minRow  =(int)tabell.getColumnCount();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =(int)tabell.getColumnCount();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =(int)tabell.getColumnCount();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
275	[BUG]  [BUGGY]    int  minRow  =  table.getColumnIndex();  [CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]          Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  [BUGGY]    int  minRow  =  table.getColumnIndex();  [BUGGY]  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	141	141	1	replace	    int  minRow  =  table.getColumnIndex();		non-compiled	[CE]  variable  minRow  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	8	None	add
301	[BUG]  [BUGGY]    SimplexTableau  tableau  =  getPivotTableau();  [CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            [BUGGY]    SimplexTableau  tableau  =  getPivotTableau();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    SimplexTableau  tableau  =  getPivotTableau();		non-compiled	[CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	add
302	[BUG]  [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getPivotTableau();  [CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getPivotTableau();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    SimplexTableau  tableau  =(SimplexTableau)getPivotTableau();		non-compiled	[CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	add
303	[BUG]  [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getTableau();  [CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getTableau();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    SimplexTableau  tableau  =(SimplexTableau)getTableau();		non-compiled	[CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	add
304	[BUG]  [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getObject();  [CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getObject();  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    SimplexTableau  tableau  =(SimplexTableau)getObject();		non-compiled	[CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	add
305	[BUG]  [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getDataArea(col);  [CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]            [BUGGY]    SimplexTableau  tableau  =(SimplexTableau)getDataArea(col);  [BUGGY]  Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	    SimplexTableau  tableau  =(SimplexTableau)getDataArea(col);		non-compiled	[CE]  variable  tableau  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	2	None	add
334	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if(i  <=  minIndex)  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	if(i  <=  minIndex)  {	if  (i  <  minIndex)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	13	1
335	[BUG]  [BUGGY]  if(i  <=  minIndex)  {  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]  if(i  <=  minIndex)  {  [BUGGY]  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	if(i  <=  minIndex)  {	if  (i  <  minIndex)  {  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	13	1	replace
391	[BUG]  [BUGGY]    row  =  tableau.getColumnLength();  [CE]  cannot  find  symbol  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =  tableau.getColumnLength();  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =  tableau.getColumnLength();		non-compiled	[CE]  cannot  find  symbol	12	None	add
392	[BUG]  [BUGGY]    row  =(int)table.getObject();  [CE]  cannot  find  symbol  table  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =(int)table.getObject();  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =(int)table.getObject();		non-compiled	[CE]  cannot  find  symbol  table	12	None	add
393	[BUG]  [BUGGY]    row  =  table.getColumnIndex(i);  [CE]  cannot  find  symbol  table  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =  table.getColumnIndex(i);  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =  table.getColumnIndex(i);		non-compiled	[CE]  cannot  find  symbol  table	12	None	add
394	[BUG]  [BUGGY]    row  =(int)tabella.getColumnIndex(col);  [CE]  cannot  find  symbol  tabella  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =(int)tabella.getColumnIndex(col);  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =(int)tabella.getColumnIndex(col);		non-compiled	[CE]  cannot  find  symbol  tabella	12	None	add
395	[BUG]  [BUGGY]    row  =(int)tabella.getColumnCount();  [CE]  cannot  find  symbol  tabella  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  [BUGGY]    row  =(int)tabella.getColumnCount();  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	143	143	1	replace	    row  =(int)tabella.getColumnCount();		non-compiled	[CE]  cannot  find  symbol  tabella	12	None	add
454	[BUG]  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  minRow!=  column;  i++)  {  [CE]  cannot  find  symbol  column  [CONTEXT]        Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  [BUGGY]  for(;  i  <  tableau.getWidth()  &&  minRow!=  column;  i++)  {  [BUGGY]  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	142	142	1	replace	for(;  i  <  tableau.getWidth()  &&  minRow!=  column;  i++)  {	for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  	non-compiled	[CE]  cannot  find  symbol  column	9	None	replace
481	[BUG]  [BUGGY]    if(col  <  0)  {  int  maxUlps  =  maxUlps  -  1;  if(maxUlps  >  col)  {  minRow  =  maxUlps;  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    if(col  <  0)  {  int  maxUlps  =  maxUlps  -  1;  if(maxUlps  >  col)  {  minRow  =  maxUlps;  }  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    if(col  <  0)  {  int  maxUlps  =  maxUlps  -  1;  if(maxUlps  >  col)  {  minRow  =  maxUlps;  }		non-compiled	[CE]  illegal  start  of  expression	20	None	add
482	[BUG]  [BUGGY]    if(col  <  0)  {  for(int  i  =  row;  i  <  tableau.getLength();  i++)  {  table.setIndex(minRow);  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    if(col  <  0)  {  for(int  i  =  row;  i  <  tableau.getLength();  i++)  {  table.setIndex(minRow);  }  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    if(col  <  0)  {  for(int  i  =  row;  i  <  tableau.getLength();  i++)  {  table.setIndex(minRow);  }		non-compiled	[CE]  illegal  start  of  expression	20	None	add
483	[BUG]  [BUGGY]    if(col  <  0)  {  int  maxUlps  =  maxUlps  -  1;  if(maxUlps  >=  minRow)  {  maxUlps  =  Math.max(maxUlps,  col);  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    if(col  <  0)  {  int  maxUlps  =  maxUlps  -  1;  if(maxUlps  >=  minRow)  {  maxUlps  =  Math.max(maxUlps,  col);  }  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    if(col  <  0)  {  int  maxUlps  =  maxUlps  -  1;  if(maxUlps  >=  minRow)  {  maxUlps  =  Math.max(maxUlps,  col);  }		non-compiled	[CE]  illegal  start  of  expression	20	None	add
484	[BUG]  [BUGGY]    if(col  <  0)  {  int  maxUlps  =  maxUlps  -  1;  if(maxUlps  >=  minRow)  {  maxUlps  =  maxUlps;  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    if(col  <  0)  {  int  maxUlps  =  maxUlps  -  1;  if(maxUlps  >=  minRow)  {  maxUlps  =  maxUlps;  }  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    if(col  <  0)  {  int  maxUlps  =  maxUlps  -  1;  if(maxUlps  >=  minRow)  {  maxUlps  =  maxUlps;  }		non-compiled	[CE]  illegal  start  of  expression	20	None	add
485	[BUG]  [BUGGY]    if(col  <  0)  {  int  maxUlps  =  Math.max(maxUlps,  col);  if(maxUlps  >=  minRow)  {  minRow  =  row;  }  [CE]  illegal  start  of  expression  [CONTEXT]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [BUGGY]    if(col  <  0)  {  int  maxUlps  =  Math.max(maxUlps,  col);  if(maxUlps  >=  minRow)  {  minRow  =  row;  }  [BUGGY]  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	150	150	1	replace	    if(col  <  0)  {  int  maxUlps  =  Math.max(maxUlps,  col);  if(maxUlps  >=  minRow)  {  minRow  =  row;  }		non-compiled	[CE]  illegal  start  of  expression	20	None	add
514	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]  int  minIndex  =  tableau.getWidth()  -  1;  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	add	int  minIndex  =  tableau.getWidth()  -  1;	int  minIndex  =  tableau.getWidth();  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	3	1
515	[BUG]  [BUGGY]  int  minIndex  =  tableau.getWidth()  -  1;  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]            Integer  minRow  =  null;  [BUGGY]  int  minIndex  =  tableau.getWidth()  -  1;  [BUGGY]  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	139	139	1	replace	int  minIndex  =  tableau.getWidth()  -  1;	int  minIndex  =  tableau.getWidth();  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	3	1	replace
543	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]            [BUGGY]  Integer  minRow  =  0;  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	add	Integer  minRow  =  0;	Integer  minRow  =  null;  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	1	1
544	[BUG]  [BUGGY]  Integer  minRow  =  0;  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]            [BUGGY]  Integer  minRow  =  0;  [BUGGY]  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	138	138	1	replace	Integer  minRow  =  0;	Integer  minRow  =  null;  	compilable	  [FE]  MaxCountExceededException  testMath828Cycle	1	1	replace
571	[BUG]  [BUGGY]  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    row  =  tableau.getBasicRow(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	add	    row  =  tableau.getBasicRow(i);		compilable	  [FE]  MaxCountExceededException  testMath828Cycle	14	1
572	[BUG]  [BUGGY]    row  =  tableau.getBasicRow(i);  [FE]  MaxCountExceededException  testMath828Cycle  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    row  =  tableau.getBasicRow(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    row  =  tableau.getBasicRow(i);		compilable	  [FE]  MaxCountExceededException  testMath828Cycle	14	1	add
573	[BUG]  [BUGGY]    int  minIndex  =(int)table.getBasicValue();  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    int  minIndex  =(int)table.getBasicValue();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    int  minIndex  =(int)table.getBasicValue();		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
574	[BUG]  [BUGGY]    int  minIndex  =(int)tab.getColumnIndex(i);  [CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    int  minIndex  =(int)tab.getColumnIndex(i);  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    int  minIndex  =(int)tab.getColumnIndex(i);		non-compiled	[CE]  variable  minIndex  is  already  defined  in  method  getPivotRow(SimplexTableau,int)	14	None	add
575	[BUG]  [BUGGY]    row  =  tableau.getRowLength();  [CE]  cannot  find  symbol  [CONTEXT]      Integer  minRow  =  null;  int  minIndex  =  tableau.getWidth();  for  (Integer  row  :  minRatioPositions)  {  int  i  =  tableau.getNumObjectiveFunctions();  for  (;  i  <  tableau.getWidth()  -  1  &&  minRow  !=  row;  i++)  {  if  (row  ==  tableau.getBasicRow(i))  {  [BUGGY]    row  =  tableau.getRowLength();  [BUGGY]  if  (i  <  minIndex)  {  minIndex  =  i;  minRow  =  row;  }  }  }  }  return  minRow;  }  return  minRatioPositions.get(0);  }  [CLASS]  SimplexSolver  [METHOD]  getPivotRow  [RETURN_TYPE]  Integer  SimplexTableau  tableau  final  int  col  [VARIABLES]  Integer  minRow  row  List  minRatioPositions  boolean  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  ratio  rhs  int  DEFAULT_ULPS  cmp  col  column  i  maxUlps  minIndex  	projects/Math28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java	0.5	144	144	1	replace	    row  =  tableau.getRowLength();		non-compiled	[CE]  cannot  find  symbol	14	None	add
