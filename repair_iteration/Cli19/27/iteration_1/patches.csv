bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tokens.add(token.substring(0,  token.indexOf('=')));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  tokens.add(token.substring(0,  token.indexOf('=')));  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	tokens.add(token.substring(0,  token.indexOf('=')));	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(0,  token.indexOf('=')  +  1,  token.length()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(0,  token.indexOf('=')  +  1,  token.length()));  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(0,  token.indexOf('=')  +  1,  token.length()));	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  tokens.add(token.substring(0,  token.indexOf('='))  +  1,  token.length()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  tokens.add(token.substring(0,  token.indexOf('='))  +  1,  token.length()));  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	tokens.add(token.substring(0,  token.indexOf('='))  +  1,  token.length()));	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  iter  =  currentOption.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  iter  =  currentOption.iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  iter  =  this.arguments.iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =(iter.hasNext())?  iter.next()  :  null;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  tokens  =(iter.hasNext())?  iter.next()  :  null;  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  tokens  =(iter.hasNext())?  iter.next()  :  null;	      Iterator    <    String>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =(iter.hasNext())?  iter.next()  :  arguments[0];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  tokens  =(iter.hasNext())?  iter.next()  :  arguments[0];  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  tokens  =(iter.hasNext())?  iter.next()  :  arguments[0];	      Iterator    <    String>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  tokens  =  currentOption.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  tokens  =  currentOption.iterator();	      Iterator    <    String>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  currentOption.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  iter  =  currentOption.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
10	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
11	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  iter  =  this.options.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  iter  =  this.tokens.iterator();	      Iterator    <    String>    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  String  token  =  iter.next()  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  String  token  =  iter.next()  +  1;  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	String  token  =  iter.next()  +  1;	  String    token    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  String  token  =(iter.hasNext())?  iter.next()  :  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  String  token  =(iter.hasNext())?  iter.next()  :  null;  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	String  token  =(iter.hasNext())?  iter.next()  :  null;	  String    token    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  String  token  =(iter.hasNext())?  iter.next()  : "- ";  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  String  token  =(iter.hasNext())?  iter.next()  : "- ";  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	String  token  =(iter.hasNext())?  iter.next()  : "- ";	  String    token    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
16	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  iter  =  this.tokens.iterator();	      Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
17	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  iter  =  this.arguments.iterator();	      Iterator    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  iter.next();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  iter.next();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	iter.next();	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  Iterator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  options.values().iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  iter  =  options.values().iterator();	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =(iter.next()  ==  null)?  null  :  iter.next();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  tokens  =(iter.next()  ==  null)?  null  :  iter.next();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  tokens  =(iter.next()  ==  null)?  null  :  iter.next();	      Iterator    <    String>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =(iter.hasNext())?  iter.next()  :  arguments;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  tokens  =(iter.hasNext())?  iter.next()  :  arguments;  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  tokens  =(iter.hasNext())?  iter.next()  :  arguments;	      Iterator    <    String>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  iter  =  currentOption.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  Iterator  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  iter  =  currentOptions.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  iter  =  currentOptions.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  tokens.add(token.substring(0,  iter.next()));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  tokens.add(token.substring(0,  iter.next()));  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	tokens.add(token.substring(0,  iter.next()));	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  tokens.add(token.substring(0,  token.indexOf('-')));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  tokens.add(token.substring(0,  token.indexOf('-')));  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	tokens.add(token.substring(0,  token.indexOf('-')));	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  iter  =  currentOptions.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  iter  =  currentOptions.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
27	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  iter  =  currentOption.options.iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  iter  =  currentOption.options.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
28	[BUG]  [BUGGY]  tokens.add(token);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  tokens.add(token);  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	tokens.add(token);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  Iterator  <  String>  tokens  =  this.iter.next();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  tokens  =  this.iter.next();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  tokens  =  this.iter.next();	      Iterator    <    String>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments.iterator()).iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  Iterator  <  String>  iter  =(arguments.iterator()).iterator();  [BUGGY]    String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	Iterator  <  String>  iter  =(arguments.iterator()).iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  String  token  =(iter.hasNext())?  iter.next()  :  token;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    while  (iter.hasNext())  {      [BUGGY]  String  token  =(iter.hasNext())?  iter.next()  :  token;  [BUGGY]      if  (token.startsWith(   "--   "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	String  token  =(iter.hasNext())?  iter.next()  :  token;	  String    token    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
