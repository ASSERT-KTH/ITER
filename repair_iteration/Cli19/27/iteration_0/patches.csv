bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  token  =  iter.next();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]  String  token  =  iter.next();  [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	String  token  =  iter.next();	String  token  =  (String)  iter.next();  	non-compiled	[CE]  <identifier>  expected	55	None	replace
2	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    [BUGGY]    if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	  	String  token  =  (String)  iter.next();  	non-compiled	[CE]  <identifier>  expected	55	None	replace
3	[BUG]  [BUGGY]    Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  iter  =  arguments.iterator();  [BUGGY]  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	    Iterator  iter  =  arguments.iterator();		non-compiled	[CE]  <identifier>  expected	56	None	add
4	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	56	None	add
5	[BUG]  [BUGGY]    Iterator  <  String>  tokens  =  iter.next();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  <  String>  tokens  =  iter.next();  [BUGGY]  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	    Iterator  <  String>  tokens  =  iter.next();		non-compiled	[CE]  <identifier>  expected	56	None	add
6	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	    Iterator  <  String>  iter  =  arguments.iterator();		non-compiled	[CE]  <identifier>  expected	56	None	add
7	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [BUGGY]  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	    Iterator  <  String>  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	56	None	add
8	[BUG]  [BUGGY]    Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  iter  =  tokens.iterator();  [BUGGY]  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	    Iterator  iter  =  tokens.iterator();		non-compiled	[CE]  <identifier>  expected	56	None	add
9	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    Iterator  <  String>  iter  =  tokens.iterator();  [BUGGY]  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	    Iterator  <  String>  iter  =  tokens.iterator();		non-compiled	[CE]  <identifier>  expected	56	None	add
10	[BUG]  [BUGGY]    iter.remove();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  while  (iter.hasNext())  {    [BUGGY]    iter.remove();  [BUGGY]  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  if  (token.indexOf('=')  !=  -1)  {  tokens.add(token.substring(0,  token.indexOf('=')));  tokens.add(token.substring(token.indexOf('=')  +  1,  token.length()));  }  else  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	109	109	1	replace	    iter.remove();		non-compiled	[CE]  <identifier>  expected	56	None	add
