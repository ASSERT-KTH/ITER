bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Ilerator  <  String>  iter  =  currentOption.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Ilerator  <  String>  iter  =  currentOption.iterator();	  Ilerator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
2	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Ilerator  <  String>  iter  =  arguments.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Ilerator  <  String>  iter  =  arguments.iterator();	  Ilerator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
3	[BUG]  [BUGGY]  List  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  List  <  String>  iter  =  options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	List  <  String>  iter  =  options.iterator();	  List    <    String>    iter    =    options.iterator();    tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  ArrayList  <  String>  iter  =  options.iterator();  tokens.add(token);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  ArrayList  <  String>  iter  =  options.iterator();  tokens.add(token);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	ArrayList  <  String>  iter  =  options.iterator();  tokens.add(token);	  List    <    String>    iter    =    options.iterator();    tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  tokens  =(String[])iter.getValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])iter.getValue();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])iter.getValue();	  tokens    =(String[])iter.remove();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
6	[BUG]  [BUGGY]  Option  <  String>  options  =  options.get(token);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Option  <  String>  options  =  options.get(token);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Option  <  String>  options  =  options.get(token);	  if(stopAtNonOption)    {    Iterator    <    String>    iter    =    options.iterator();    tokens.add(token);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
7	[BUG]  [BUGGY]  Option  <  String>  options  =  options.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Option  <  String>  options  =  options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Option  <  String>  options  =  options.iterator();	  if(stopAtNonOption)    {    Iterator    <    String>    iter    =    options.iterator();    tokens.add(token);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
8	[BUG]  [BUGGY]  tokens  =(String[])currentOption.clonePosition();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])currentOption.clonePosition();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])currentOption.clonePosition();	  tokens    =(String[])currentOption.cloneTree();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  tokens  =(String[])currentOption.clonePath();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])currentOption.clonePath();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])currentOption.clonePath();	  tokens    =(String[])currentOption.cloneTree();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.values().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  iter  =  currentOption.values().iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  iter  =  currentOption.values().iterator();	  Iterator    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
11	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.currentOption.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  iter  =  this.currentOption.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  iter  =  this.currentOption.iterator();	  Iterator    <    String>    iter    =    currentOption.iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
12	[BUG]  [BUGGY]  tokens.add( "# "  +  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "# "  +  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "# "  +  stopAtNonOption);	  tokens.add(   "#   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
13	[BUG]  [BUGGY]  tokens.add( "#n ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "#n ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "#n ");	  tokens.add(   "#   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  tokens.add( "# ",  arguments);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "# ",  arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "# ",  arguments);	  tokens.add(   "#   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  Option>  iter  =  currentOption.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
16	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  Option>  iter  =  arguments.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  Option>  iter  =  arguments.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
17	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOptions.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  Option>  iter  =  currentOptions.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
18	[BUG]  [BUGGY]  tokens.add( "- "+token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "+token,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "+token,  stopAtNonOption);	  tokens.add(   "-   ",    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
19	[BUG]  [BUGGY]  tokens.add( "- "+token.getValue()  + ",  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "+token.getValue()  + ",  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "+token.getValue()  + ",  stopAtNonOption);	  tokens.add(   "-   ",    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
20	[BUG]  [BUGGY]  tokens.add(token.getKey());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(token.getKey());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(token.getKey());	  tokens.add(currentOption.getKey());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
21	[BUG]  [BUGGY]  tokens.add( "- "  +  getName(),  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  getName(),  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  getName(),  stopAtNonOption);	  tokens.add(   "-   "    +    getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  tokens.add( "- "  +  getName()  + "  - ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  getName()  + "  - ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  getName()  + "  - ");	  tokens.add(   "-   "    +    getName());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  tokens.add( "-- "  +  token,  iter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "  +  token,  iter);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "  +  token,  iter);	  tokens.add(   "--   ",    iter);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
24	[BUG]  [BUGGY]  tokens  =(String[])currentOption.toArray(arguments);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])currentOption.toArray(arguments);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])currentOption.toArray(arguments);	  tokens    =(String[])currentOption.getValue();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
25	[BUG]  [BUGGY]  tokens  =(String[])currentOption.toArray(new  String[currentOption.getValues()  ]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])currentOption.toArray(new  String[currentOption.getValues()  ]);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])currentOption.toArray(new  String[currentOption.getValues()  ]);	  tokens    =(String[])currentOption.getValues();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  tokens.add( ",  stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ",  stopAtNonOption ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ",  stopAtNonOption ");	  tokens.add(   ",    eatTheRest   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
27	[BUG]  [BUGGY]  tokens.add( ",  stopAtNonOption, ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ",  stopAtNonOption, ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ",  stopAtNonOption, ");	  tokens.add(   ",    eatTheRest   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
28	[BUG]  [BUGGY]  tokens.add( ",  stopAtNonOption ",  arguments);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ",  stopAtNonOption ",  arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ",  stopAtNonOption ",  arguments);	  tokens.add(   ",    eatTheRest   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
29	[BUG]  [BUGGY]  Iterator  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  iter  =  options.entrySet().iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  iter  =  options.entrySet().iterator();	  Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  tokens.add( ",null ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ",null ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ",null ");	  tokens.add(   ",n   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  tokens  =(String[])currentOption.toArray(new  String[currentOption.size()  -  1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])currentOption.toArray(new  String[currentOption.size()  -  1]);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])currentOption.toArray(new  String[currentOption.size()  -  1]);	  tokens    =(String[])currentOption.toArray(new    String[currentOption.size()    ]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  tokens  =(String[])currentOption.toArray(new  String[currentOption.size()  +  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])currentOption.toArray(new  String[currentOption.size()  +  1]);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])currentOption.toArray(new  String[currentOption.size()  +  1]);	  tokens    =(String[])currentOption.toArray(new    String[currentOption.size()    ]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  iter  =  options.keySet().iterator();	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
34	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.currentOptions.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  iter  =  this.currentOptions.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  iter  =  this.currentOptions.iterator();	  Iterator    <    String>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
35	[BUG]  [BUGGY]  List  <  String>  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  List  <  String>  iter  =  currentOptions.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	List  <  String>  iter  =  currentOptions.iterator();	  Iterator    <    String>    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
36	[BUG]  [BUGGY]  tokens.add( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "stopAtNonOption ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "stopAtNonOption ");	  tokens.add(   "stop   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
37	[BUG]  [BUGGY]  tokens.add( "stop "  +  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "stop "  +  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "stop "  +  stopAtNonOption);	  tokens.add(   "stop   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
38	[BUG]  [BUGGY]  tokens.add( "stop: ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "stop: ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "stop: ");	  tokens.add(   "stop   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
39	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOptions.iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  iter  =  this.currentOptions.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  iter  =  this.currentOptions.iterator();	  Iterator    iter    =    currentOptions.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
40	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  tokens.add(token);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  tokens.add(token);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  iter  =  arguments.iterator();  tokens.add(token);	  Iterator    iter    =    arguments.iterator();    tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  List  <  String>  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  List  <  String>  iter  =  currentOption.options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	List  <  String>  iter  =  currentOption.options.iterator();	  Iterator    <    String>    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
42	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  iter  =  this.tokens.iterator();	  Iterator    <    String>    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
43	[BUG]  [BUGGY]  tokens.add( "-- ").append(currentOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ").append(currentOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ").append(currentOption);	  tokens.add(   "--   ").append(token);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
44	[BUG]  [BUGGY]  tokens.add( "-- ").append(arguments[token]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ").append(arguments[token]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ").append(arguments[token]);	  tokens.add(   "--   ").append(token);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
45	[BUG]  [BUGGY]  tokens.add( "-- ").append(arguments[token);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ").append(arguments[token);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ").append(arguments[token);	  tokens.add(   "--   ").append(token);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
46	[BUG]  [BUGGY]  tokens.add(token.toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(token.toString());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(token.toString());	  tokens.add(currentOption.toString());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
47	[BUG]  [BUGGY]  tokens.add(currentOption.toString(),  arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(currentOption.toString(),  arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(currentOption.toString(),  arguments);	  tokens.add(currentOption.toString());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
48	[BUG]  [BUGGY]  tokens.add(currentOption.toString()  + ": ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(currentOption.toString()  + ": ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(currentOption.toString()  + ": ");	  tokens.add(currentOption.toString());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
49	[BUG]  [BUGGY]  tokens.add( "- "  +  arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  arguments);	  tokens.add(   "-   "    +    currentOption);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  tokens.add( "-- "  +  getName(),  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "  +  getName(),  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "  +  getName(),  stopAtNonOption);	  tokens.add(   "--   "    +    getName());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
51	[BUG]  [BUGGY]  tokens.add( "-- "  +  getValue());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "  +  getValue());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "  +  getValue());	  tokens.add(   "--   "    +    getName());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
52	[BUG]  [BUGGY]  tokens.add( "-- "  +  getText());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "  +  getText());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "  +  getText());	  tokens.add(   "--   "    +    getName());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
53	[BUG]  [BUGGY]  tokens.add( ": "  +  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ": "  +  stopAtNonOption);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ": "  +  stopAtNonOption);	  tokens.add(   ":   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
54	[BUG]  [BUGGY]  tokens.add( ":n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ":n ");  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ":n ");	  tokens.add(   ":   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
55	[BUG]  [BUGGY]  tokens  =(String[])iter.previousToken();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])iter.previousToken();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])iter.previousToken();	  tokens    =(String[])iter.nextToken();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
56	[BUG]  [BUGGY]  tokens.add(token.getValue());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(token.getValue());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(token.getValue());	  tokens.add(currentOption.getValue());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
57	[BUG]  [BUGGY]  tokens.add(currentOption.getValue()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(currentOption.getValue()  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(currentOption.getValue()  +  1);	  tokens.add(currentOption.getValue());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  tokens.add(currentOption.getValue(),  arguments);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(currentOption.getValue(),  arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(currentOption.getValue(),  arguments);	  tokens.add(currentOption.getValue());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
59	[BUG]  [BUGGY]  tokens.add(currentOption.token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(currentOption.token,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(currentOption.token,  stopAtNonOption);	  tokens.add(currentOption.token);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
60	[BUG]  [BUGGY]  tokens.add(currentOption.token,  arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(currentOption.token,  arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(currentOption.token,  arguments);	  tokens.add(currentOption.token);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
61	[BUG]  [BUGGY]  tokens.add( "- "  +  getText());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  getText());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  getText());	  tokens.add(   "-   "    +    getValue());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
62	[BUG]  [BUGGY]  tokens.add( "- "  +  getKey());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  getKey());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  getKey());	  tokens.add(   "-   "    +    getValue());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
63	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  iter  =  this.options.iterator();	  Iterator    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
64	[BUG]  [BUGGY]  tokens.add( "- "  +  token.equals(token));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  token.equals(token));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  token.equals(token));	  tokens.add(   "-   ".equals(token));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
65	[BUG]  [BUGGY]  tokens.add( "- ".equals(arguments));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- ".equals(arguments));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- ".equals(arguments));	  tokens.add(   "-   ".equals(token));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
66	[BUG]  [BUGGY]  tokens.add( "-- "+token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "+token,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "+token,  stopAtNonOption);	  tokens.add(   "--   "+token);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
67	[BUG]  [BUGGY]  tokens.add( "-- "+token  + "n ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "+token  + "n ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "+token  + "n ");	  tokens.add(   "--   "+token);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
68	[BUG]  [BUGGY]  tokens.add( ";null ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ";null ");  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ";null ");	  tokens.add(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
69	[BUG]  [BUGGY]  tokens.add( ";no ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ";no ");  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ";no ");	  tokens.add(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
70	[BUG]  [BUGGY]  tokens.add( ";ne   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ";ne   ");  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ";ne   ");	  tokens.add(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
71	[BUG]  [BUGGY]  tokens.add( "-- "  +  currentOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "  +  currentOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "  +  currentOption);	  tokens.add(   "--   "    +    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
72	[BUG]  [BUGGY]  tokens.add( "-- "  +  arguments);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "  +  arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "  +  arguments);	  tokens.add(   "--   "    +    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
73	[BUG]  [BUGGY]  tokens.add( "-- "  +  argument);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "  +  argument);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "  +  argument);	  tokens.add(   "--   "    +    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
74	[BUG]  [BUGGY]  tokens.add( "null ",  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "null ",  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "null ",  stopAtNonOption);	  tokens.add(   "null   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
75	[BUG]  [BUGGY]  tokens.add( "[null] ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "[null] ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "[null] ");	  tokens.add(   "null   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
76	[BUG]  [BUGGY]  tokens.add( "false ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "false ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "false ");	  tokens.add(   "null   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  ition  <  String>  iter  =  options.iterator();  tokens.add(token);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  ition  <  String>  iter  =  options.iterator();  tokens.add(token);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	ition  <  String>  iter  =  options.iterator();  tokens.add(token);	  if(stopAtNonOption)    {    Iterator    <    String>    iter    =    options.iterator();    tokens.add(token);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
78	[BUG]  [BUGGY]  Option  <  String>  options  =  options.iterator();  tokens.add(token);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Option  <  String>  options  =  options.iterator();  tokens.add(token);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Option  <  String>  options  =  options.iterator();  tokens.add(token);	  if(stopAtNonOption)    {    Iterator    <    String>    iter    =    options.iterator();    tokens.add(token);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
79	[BUG]  [BUGGY]  tokens  =(String[])iter.toArray(new  String[iter.size()  ]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])iter.toArray(new  String[iter.size()  ]);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])iter.toArray(new  String[iter.size()  ]);	  tokens    =(String[])iter.clone();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
80	[BUG]  [BUGGY]  tokens  =(String[])iter.cloneTree();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])iter.cloneTree();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])iter.cloneTree();	  tokens    =(String[])iter.clone();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
81	[BUG]  [BUGGY]  tokens.add( "- "  +  stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  stopAtNonOption,  arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  stopAtNonOption,  arguments);	  tokens.add(   "-   "    +    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
82	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOption.arguments.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  iter  =  currentOption.arguments.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  iter  =  currentOption.arguments.iterator();	  Iterator    <    String>    iter    =    this.arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
83	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  iter  =  this.tokens.iterator();	  Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
84	[BUG]  [BUGGY]  tokens.add(currentOption.toString(),  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(currentOption.toString(),  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(currentOption.toString(),  stopAtNonOption);	  tokens.add(currentOption.toString());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
85	[BUG]  [BUGGY]  tokens.add(currentOption.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add(currentOption.getName());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add(currentOption.getName());	  tokens.add(currentOption.toString());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
86	[BUG]  [BUGGY]  tokens.add( "-- ",  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ",  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ",  stopAtNonOption);	  tokens.add(   "-   ",    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
87	[BUG]  [BUGGY]  tokens.add( "-- ", "-- ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ", "-- ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ", "-- ");	  tokens.add(   "-   ",    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
88	[BUG]  [BUGGY]  tokens.clear();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.clear();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.clear();	  iter.clear();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
89	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(token);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(token);  }  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(token);  }	  Iterator    iter    =    arguments.iterator();    tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
90	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  arguments.iterator();  tokens.add(token);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  arguments.iterator();  tokens.add(token);  }  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	if(stopAtNonOption)  {  Iterator  iter  =  arguments.iterator();  tokens.add(token);  }	  Iterator    iter    =    arguments.iterator();    tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
91	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  Option>  iter  =  currentOption.options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  Option>  iter  =  currentOption.options.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
92	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Ilerator  iter  =  options.iterator();	  Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
93	[BUG]  [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Ilerator  iter  =  options.keySet().iterator();	  Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
94	[BUG]  [BUGGY]  tokens.add( ";-- ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ";-- ");  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ";-- ");	  tokens.add(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
95	[BUG]  [BUGGY]  tokens.add( ";non-option ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ";non-option ");  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ";non-option ");	  tokens.add(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
96	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOption.values().iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  iter  =  currentOption.values().iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  iter  =  currentOption.values().iterator();	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
97	[BUG]  [BUGGY]  List  <  String>  tokens  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  List  <  String>  tokens  =  currentOption.options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	List  <  String>  tokens  =  currentOption.options.iterator();	  Iterator    <    String>    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
98	[BUG]  [BUGGY]  tokens.add( "-- ").append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ").append('n');  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ").append('n');	  tokens.add(   "--   ").append(token);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
99	[BUG]  [BUGGY]  tokens.add( "-- ").append(buffer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ").append(buffer);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ").append(buffer);	  tokens.add(   "--   ").append(token);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
100	[BUG]  [BUGGY]  tokens.add( "-- "  +  startAtNonOption,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "  +  startAtNonOption,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "  +  startAtNonOption,  stopAtNonOption);	  tokens.add(   "--   "    +    startAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
101	[BUG]  [BUGGY]  tokens.add( "-stop ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-stop ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-stop ");	  tokens.add(   "stop   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
102	[BUG]  [BUGGY]  tokens.add( ",  stopAtNonOption:  eatTheRest ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ",  stopAtNonOption:  eatTheRest ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ",  stopAtNonOption:  eatTheRest ");	  tokens.add(   ",    eatTheRest   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
103	[BUG]  [BUGGY]  tokens  =(String[])this.options.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])this.options.clone();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])this.options.clone();	  tokens    =(String[])iter.clone();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
104	[BUG]  [BUGGY]  tokens  =(String[])currentOption.peek()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])currentOption.peek()  +  1;  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])currentOption.peek()  +  1;	  tokens    =(String[])currentOption.peek();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
105	[BUG]  [BUGGY]  tokens  =(String[])currentOption.elements();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])currentOption.elements();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])currentOption.elements();	  tokens    =(String[])currentOption.peek();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
106	[BUG]  [BUGGY]  tokens.add( "-- ".equals(token));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ".equals(token));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ".equals(token));	  tokens.add(   "-   ".equals(token));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
107	[BUG]  [BUGGY]  tokens.add( "- "+token));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "+token));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "+token));	  tokens.add(   "-   ".equals(token));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
108	[BUG]  [BUGGY]  tokens.add( "- "  +  name  + "  - ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  name  + "  - ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  name  + "  - ");	  tokens.add(   "-   "    +    name);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
109	[BUG]  [BUGGY]  ArrayList  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  ArrayList  <  String>  iter  =  options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	ArrayList  <  String>  iter  =  options.iterator();	  List    <    String>    iter    =    options.iterator();    tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
110	[BUG]  [BUGGY]  Iterator  <  String>  options  =  options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  options  =  options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  options  =  options.iterator();	  if(stopAtNonOption)    {    Iterator    <    String>    iter    =    options.iterator();    tokens.add(token);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
111	[BUG]  [BUGGY]  Iterator  <  String>  options  =  options.iterator();  tokens.add(token);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  options  =  options.iterator();  tokens.add(token);  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  options  =  options.iterator();  tokens.add(token);	  if(stopAtNonOption)    {    Iterator    <    String>    iter    =    options.iterator();    tokens.add(token);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
112	[BUG]  [BUGGY]  tokens  =(String[])currentOption.getIterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens  =(String[])currentOption.getIterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens  =(String[])currentOption.getIterator();	  tokens    =(String[])currentOption.getValue();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
113	[BUG]  [BUGGY]  tokens.add( ":  eatTheRest ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ":  eatTheRest ");  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ":  eatTheRest ");	  tokens.add(   ":   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
114	[BUG]  [BUGGY]  Option  <  String>  options  =  options.getOptions();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Option  <  String>  options  =  options.getOptions();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Option  <  String>  options  =  options.getOptions();	  if(stopAtNonOption)    {    Iterator    <    String>    iter    =    options.iterator();    tokens.add(token);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
115	[BUG]  [BUGGY]  tokens.add( ",  stopAtNonOption:  eattheRest ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ",  stopAtNonOption:  eattheRest ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ",  stopAtNonOption:  eattheRest ");	  tokens.add(   ",    eattheRest   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
116	[BUG]  [BUGGY]  tokens.add( "-- "+token  + "  - ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "+token  + "  - ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "+token  + "  - ");	  tokens.add(   "--   "+token);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
117	[BUG]  [BUGGY]  tokens.add( "#  eatTheRest ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "#  eatTheRest ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "#  eatTheRest ");	  tokens.add(   "#   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
118	[BUG]  [BUGGY]  tokens.add( "#  eat  theRest ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "#  eat  theRest ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "#  eat  theRest ");	  tokens.add(   "#   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
119	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Ilerator  <  String>  iter  =  currentOption.options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Ilerator  <  String>  iter  =  currentOption.options.iterator();	  Ilerator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
120	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Ilerator  <  String>  iter  =  options.values().iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Ilerator  <  String>  iter  =  options.values().iterator();	  Ilerator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
121	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  iter  =  this.currentOption.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  iter  =  this.currentOption.iterator();	  Iterator    iter    =    currentOption.iterator();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
122	[BUG]  [BUGGY]  tokens.add( "--eatTheRest ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "--eatTheRest ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "--eatTheRest ");	  tokens.add(   ",    eatTheRest   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
123	[BUG]  [BUGGY]  tokens.add( ":  eat  theRest ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( ":  eat  theRest ");  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( ":  eat  theRest ");	  tokens.add(   ":   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
124	[BUG]  [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  iter  =  this.currentOption.options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  iter  =  this.currentOption.options.iterator();	  Iterator    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
125	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(stopAtNonOption)    {    Iterator    <    String>    iter    =    options.iterator();    tokens.add(token);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
126	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(stopAtNonOption)    {    Iterator    <    String>    iter    =    options.iterator();    tokens.add(token);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
127	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  iter  =  this.arguments.iterator();	  Iterator    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
128	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  iter  =  options.entrySet().iterator();	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
129	[BUG]  [BUGGY]  tokens.add( "- ", "- ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- ", "- ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- ", "- ");	  tokens.add(   "-   ",    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
130	[BUG]  [BUGGY]  tokens.add( "- "  +  token.toLowerCase(),  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  token.toLowerCase(),  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  token.toLowerCase(),  stopAtNonOption);	  tokens.add(   "-   ",    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
131	[BUG]  [BUGGY]  tokens.add( "- "  +  token.toString(),  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "- "  +  token.toString(),  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "- "  +  token.toString(),  stopAtNonOption);	  tokens.add(   "-   ",    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
132	[BUG]  [BUGGY]  tokens.add( "-- "  +  iter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "  +  iter);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "  +  iter);	  tokens.add(   "--   ",    iter);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
133	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  Option>  iter  =  options.values().iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
134	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	Iterator  <  String>  iter  =  this.options.iterator();	  Iterator    <    String>    iter    =    currentOption.options.iterator();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
135	[BUG]  [BUGGY]  tokens.add( "; ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "; ");  [BUGGY]      tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "; ");	  tokens.add(   ";n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
136	[BUG]  [BUGGY]  tokens.add( "-- "+token  + ";n ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- "+token  + ";n ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- "+token  + ";n ");	  tokens.add(   "--   "+token);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
137	[BUG]  [BUGGY]  tokens.add( "--eattheRest ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "--eattheRest ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "--eattheRest ");	  tokens.add(   ",    eattheRest   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
138	[BUG]  [BUGGY]  tokens.add( "null ",  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "null ",  null);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "null ",  null);	  tokens.add(   "null   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
139	[BUG]  [BUGGY]  tokens.add( "#- ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "#- ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "#- ");	  tokens.add(   "#   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
140	[BUG]  [BUGGY]  tokens.add( "-- ").append(getText());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ").append(getText());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ").append(getText());	  tokens.add(   "--   ").append(token);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
141	[BUG]  [BUGGY]  tokens.add( "-- ").append(this.token);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      else  if  (stopAtNonOption)  {  process(token);  }  else  {      [BUGGY]  tokens.add( "-- ").append(this.token);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.31622776601683794	152	152	1	replace	tokens.add( "-- ").append(this.token);	  tokens.add(   "--   ").append(token);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
