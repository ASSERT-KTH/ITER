bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    tokens.add(token);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]    tokens.add(token);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	    tokens.add(token);		non-compiled	[CE]  <identifier>  expected	66	None	add
2	[BUG]  [BUGGY]    return(String[])iter.next();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]    return(String[])iter.next();  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	    return(String[])iter.next();		non-compiled	[CE]  <identifier>  expected	66	None	add
3	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  options.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]    tokens.add(token);  currentOption  =  options.iterator();  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	    tokens.add(token);  currentOption  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	66	None	add
4	[BUG]  [BUGGY]    iter.remove();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]    iter.remove();  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	    iter.remove();		non-compiled	[CE]  <identifier>  expected	66	None	add
5	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  iter;  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]    tokens.add(token);  currentOption  =  iter;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	    tokens.add(token);  currentOption  =  iter;		non-compiled	[CE]  <identifier>  expected	66	None	add
6	[BUG]  [BUGGY]  return(String[])options.toArray(new  String[0]);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]  return(String[])options.toArray(new  String[0]);  [BUGGY]    [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	return(String[])options.toArray(new  String[0]);	}  	non-compiled	[CE]  <identifier>  expected	65	None	replace
7	[BUG]  [BUGGY]  return(String[])options.toArray(new  String[args.size()  ]);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]  return(String[])options.toArray(new  String[args.size()  ]);  [BUGGY]    [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	return(String[])options.toArray(new  String[args.size()  ]);	}  	non-compiled	[CE]  <identifier>  expected	65	None	replace
8	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  [BUGGY]    [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);	}  	non-compiled	[CE]  <identifier>  expected	65	None	replace
9	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  [BUGGY]    [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);	}  	non-compiled	[CE]  <identifier>  expected	65	None	replace
10	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  }  );  [BUGGY]    [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  }  );	}  	non-compiled	[CE]  <identifier>  expected	65	None	replace
11	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {  }  );  [BUGGY]    [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {  }  );	}  	non-compiled	[CE]  <identifier>  expected	65	None	replace
12	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(token);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	    tokens.add(token);  currentOption  =  options.getOption(token);		non-compiled	[CE]  <identifier>  expected	66	None	add
13	[BUG]  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(stopAtNonOption);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]    tokens.add(token);  currentOption  =  options.getOption(stopAtNonOption);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	    tokens.add(token);  currentOption  =  options.getOption(stopAtNonOption);		non-compiled	[CE]  <identifier>  expected	66	None	add
14	[BUG]  [BUGGY]  return(tokens  ==  null)?  false  :  tokens.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]  return(tokens  ==  null)?  false  :  tokens.toArray(new  String[tokens.size()  ]);  [BUGGY]    [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	return(tokens  ==  null)?  false  :  tokens.toArray(new  String[tokens.size()  ]);	}  	non-compiled	[CE]  <identifier>  expected	65	None	replace
15	[BUG]  [BUGGY]  return(tokens  ==  null)?  true  :  tokens.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]  return(tokens  ==  null)?  true  :  tokens.toArray(new  String[tokens.size()  ]);  [BUGGY]    [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	return(tokens  ==  null)?  true  :  tokens.toArray(new  String[tokens.size()  ]);	}  	non-compiled	[CE]  <identifier>  expected	65	None	replace
16	[BUG]  [BUGGY]    iter.remove();  tokens.add(token);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]    iter.remove();  tokens.add(token);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	    iter.remove();  tokens.add(token);		non-compiled	[CE]  <identifier>  expected	66	None	add
17	[BUG]  [BUGGY]    iter.remove();  tokens.add(arguments[0]);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  else  if  (stopAtNonOption)  {  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  [BUGGY]    iter.remove();  tokens.add(arguments[0]);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	156	156	1	replace	    iter.remove();  tokens.add(arguments[0]);		non-compiled	[CE]  <identifier>  expected	66	None	add
