projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&options.hasOption(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption||options.hasOption(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption||arguments.contains(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<String>iter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iteratoriter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<String>iter=arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146tokens.add(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&arguments.length>0){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=options.getOptions().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Optioniter=options.getOption(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146iter.remove();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146iter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146iter.add(arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<String>iter=options.values().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<String>iter=options.keySet().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=options.getIterables().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=options.getAllOptions().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&arguments.contains(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption||options.contains(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(!stopAtNonOption&&arguments.contains(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&options.hasValue(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&options.hasArg(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption||options.hasArg(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(!stopAtNonOption&&options.hasOption(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption){tokens.add(token);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146tokens.add(token,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption){tokens.add(token);}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Optioniter=options.getOption(token,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Optioniter=options.get(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Optioniter=options.getOption(token)+1;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iteratoriter=arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iteratoriter=options.values().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iteratoriter=currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption||arguments.length>0){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&arguments.length>1){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&arguments.length>0||arguments[0].equals(arguments[1])){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=options.values().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146iter=currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<String>iter=currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146iter=options.values().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iteratoriter=options.keySet().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Ileratoriter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146iter.clear();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Optioniter=options.getOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&options.hasOption(token)||stopAtNonOption){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&options.contains(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption&&arguments.length>0||options.hasOption(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption||options.hasOption(token)&&stopAtNonOption==false){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption||options.hasOption(token)&&stopAtNonOption!=false){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Ilerator<Option>iter=options.getOptions().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=options.getOptions().values().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Ilerator<String>iter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=options.keySet().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Ilerator<Option>iter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<String>iter=currentOption.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(stopAtNonOption||tokens.contains(token)){
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(options.hasOption(token)){tokens.add(token);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146elseif(options.hasOption(token)){tokens.add(token);}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<String>iter=options.entrySet().iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146iter.addValue(arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146iter.addValue(arguments[0],arguments[1]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146iter.addValue(arguments[0].toString());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Optioniter=options.getOption(arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java146Iterator<Option>iter=currentOptions.iterator();
