projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99init();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=true;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)currentOption.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptionscurrentOption=options.getOption(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=this.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=tokens.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptionscurrentOption=options.getOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments.length);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,null);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.get(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=tokens.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.eatTheRest;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.EXTENDS;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=eatTheRest;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=true;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=options;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=currentOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=option;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=OptionFactory.newInstance();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<Object>)iter.next();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next()-1;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(true);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=true;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption=true;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopsAtNonOption=true;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}else{tokens.add(token);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.currentOption.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.options.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)options.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=false;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=false;}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=false;}else{tokens.add(arguments[0]);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,null);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.eatTheRest;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.cloneTree();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}else{tokens.add(arguments[0]);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption(true);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.STRING);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=currentOptions.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=currentOption.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}else{tokens.add(token);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.get();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}else{thrownewIllegalStateException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||eatTheRest;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EMPTY;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)options.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption+1;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=currentOptions.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=Arrays.asList(options).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)super.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=newOption();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,this.stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)super.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.eatTheRest=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.remove();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.previous();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptionscurrentOption=options.getOption(token,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption(this);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&&arguments.length>0;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(this);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest=true;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest=false;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest=false;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption(true);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption(true);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){currentOption=stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){currentOption=stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.super.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newLinkedList();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(0);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){tokens.add(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption&&arguments.length>0){tokens.add(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest=false;}else{tokens.add(token);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.getValue();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.super.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99options=(Option)super.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<?>)iter.next();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<?extendsObject>)iter.next();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption+2;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,argument);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.eatTheRest=true;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.eattheRest=true;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,argument);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,arguments[stopAtNonOption]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=this.currentOptions.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,argument);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,this.stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.cloneTree();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.cloneTree();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,arguments,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,tokens);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=this.arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.eatTheRest();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=this.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(this.options);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokens);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,stopAtNonOption,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,eatTheRest);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,null);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)arguments.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,token,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,token,null);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments,currentOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption,currentOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption,options);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption,eatTheRest);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.currentOptions.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.EXTENDS&&arguments.length>0;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.EXTENDS|StopAtNonOption.FALSE;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.EXTENDS|StopAtNonOption.STOPPED;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,tokens);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,arguments,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,this.arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(this.options);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.options.get(0);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99options=(Option)this.options.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.options.get(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,arguments,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,tokens);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption){eatTheRest=true;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption){eatTheRest=false;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=this.tokens.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=currentOption.cloneTree();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption(this,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){stopAtNonOption=StopAtNonOption.stopAtNonOption(this);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){stopAtNonOption=StopAtNonOption.stopAtNonOption(this);}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Option<Option>iter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Ilerator<Option>iter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.get(0);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.toArray(newPosixParser<String>());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.toArray(newPosixParser[arguments.size()]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption+1;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption=null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99HalteAtNonOption=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,token,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT|StopAtNonOption.EXPR_RESULT;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT|StopAtNonOption.EXPR_FAILURE;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=newOption(tokens);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=newOption(this.stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=newOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption(false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){stopAtNonOption=StopAtNonOption.stopAtNonOption(false);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption=StopAtNonOption.stopAtNonOption(false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption(this);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(this,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=this.currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99posixParser<String>currentOption=(PosixParser<String>)iter.next();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.STRING,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.STRING,token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,this);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest=true;}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest=true;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest=false;}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopsAtNonOption=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopsAtNonOption=null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=OptionFactory.newInstance(this.stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=OptionFactory.newInstance(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99This.stopAtNonOption=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=stopAtNonOption;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments.length+1);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments.length-1);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments.length,arguments.length);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){arguments.add(arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99options.add(arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){arguments[0]=false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments.get(0);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,token,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,this.arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingArguments(arguments[0],stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingArgument(arguments[0],stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.STANDARD;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXTENDS;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR|StopAtNonOption.ERROR;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR|StopAtNonOption.EMPTY;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptionscurrentOption=options.getOption(token,stopAtNonOption,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptionscurrentOption=options.getOption(token,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99options=(Option)this.currentOption.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.currentOption).clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.currentOption.cloneTree();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments[1]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments[0],arguments[1]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments[0]+1);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.tokens.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption("stopAtNonOption",arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption("stopAtNonOption.");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest();}else{tokens.add(token);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption(true);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.eatTheRest();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.get(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.get(arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.get(0);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99This.stopAtNonOption=true;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){thrownewIllegalArgumentException("".equals(arguments));}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){thrownewIllegalArgumentException("".equals(arguments));}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.get(0);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.get();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||arguments.length>0;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&&arguments.length>1;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&&arguments.length>2;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=this.arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.get();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption(false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(false,false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption(false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.ERROR;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.false;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.STANDARD;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&&eatTheRest;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||currentOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||arguments;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||eatTheRest+1;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(this.stopAtNonOption,token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,this.stopAtNonOption,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(this.stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,this.eatTheRest);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,this);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=OptionFactory.newInstance(tokens);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=OptionFactory.newInstance(options);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption("startAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption(this,false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption(this);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption(this.eatTheRest);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,null,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption(true);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption(false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.STRING,null);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.EXPR_RESULT,this.stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<Object>)iter.get();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.ASSIGN,this.stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.cloneTree(0);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayList(arguments,eatTheRest);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR|StopAtNonOption.EXPR_RESULT;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR|StopAtNonOption.STANDARD;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.eatTheRest=null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)modules.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayListWithArguments(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.get();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.reset();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)options.get(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)options.get(0);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT+1;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT|StopAtNonOption.FALSE;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT&&stopAtNonOption!=null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<Option>iter=currentOption.arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=Arrays.asList(options).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(this.arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(tokens);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.toArray(newPosixParser<String>());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.get(arguments[0].clone());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption){eatTheRest=false;}else{tokens.add(arguments[1]);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption){eatTheRest=false;}else{tokens.add(arguments[0]);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowEscaped(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99[Delete]
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowEscaped("stopAtNonOption")){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowEscaped(stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption){eatTheRest();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){currentOption=false;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption-1;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){Iterator<Option>iter=Arrays.asList(arguments).iterator();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.get(token,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EOF;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.currentOption.getOption();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,null,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,stopAtNonOption,eatTheRest);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>super=(PosixParser<String>)super.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOptionstopAtNonOption=StopAtNonOption.stopAtNonOption(false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler=newAssertionFailedErrorHandler(this,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler=newAssertionFailedErrorHandler(tokens,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowNonOption(stopAtNonOption){eatTheRest();}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption("stopAtNonOption").toLowerCase();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption||currentOption==null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption||currentOption!=null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.getNext();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=currentOption.arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption){eatTheRest=true;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption+1L;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,stopAtNonOption,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments[0],stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments[0]-1);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowNonOption(stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||tokens;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowMutator(stopAtNonOption){eatTheRest();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowMutator(stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowMutator(stopAtNonOption){allowMutator();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.options.get(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.EXTENDS|StopAtNonOption.ESCAPE;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.EXTENDS|StopAtNonOption.ALL;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){Iterator<Option>iter=Arrays.asList(options).iterator();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=newOption(0);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler(tokens,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){currentOption=null;}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=newOption(stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.eatTheRest=stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)super.clone():null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(arguments,eatTheRest);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)super.currentOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.remove();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.currentOption.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowSideEffects(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowSideEffects(stopAtNonOption)){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99allowSideEffects("stopAtNonOption")){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler=stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)modules.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR||stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=(Option)this.currentOptions.clone();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){tokens.add(token);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){tokens.add(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<Object>)iter.remove();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<Object>)iter.previous();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments.get();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99Optionoption=options.getOption(arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption||currentOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=stopAtNonOption?options:null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99List<String>tokens=Lists.newArrayListWithCapacity(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOptionstopAtNonOption=StopAtNonOption.stopAtNonOption(this,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.currentOption=currentOption.getOption();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||arguments.length;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNon(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,arguments[stopAtNonOption]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.EMPTY;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT&&arguments.length>0;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT&&stopAtNonOption;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler=newAssertionFailedErrorHandler();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler=newAssertionFailedErrorHandler("Unexpectederror:"+toString());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99parent==null||stopAtNonOption){tokens.add(token);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){eatTheRest();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption(false,false);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=StopAtNonOption.stopAtNonOption(false,true);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption("stopAtNonOption",this.stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.cloneAtNonOption();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EAT;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.<Option>iter=Arrays.asList(arguments).iterator();
