bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  -  1]);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  -  1]);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	return(String[])tokens.toArray(new  String[tokens.size()  -  1]);	return  (String[])  tokens.toArray(new  String[tokens.size()]);  	non-compiled	[CE]  <identifier>  expected	67	None	replace
2	[BUG]  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  +  1]);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  +  1]);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	return(String[])tokens.toArray(new  String[tokens.size()  +  1]);	return  (String[])  tokens.toArray(new  String[tokens.size()]);  	non-compiled	[CE]  <identifier>  expected	67	None	replace
3	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	  	return  (String[])  tokens.toArray(new  String[tokens.size()]);  	non-compiled	[CE]  <identifier>  expected	67	None	replace
4	[BUG]  [BUGGY]    tokens.add(token);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    tokens.add(token);  [BUGGY]  return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	    tokens.add(token);		non-compiled	[CE]  <identifier>  expected	68	None	add
5	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [BUGGY]  return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	    Iterator  <  String>  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	68	None	add
6	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]  return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	    Iterator  <  String>  iter  =  arguments.iterator();		non-compiled	[CE]  <identifier>  expected	68	None	add
7	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	68	None	add
8	[BUG]  [BUGGY]    Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    Iterator  iter  =  arguments.iterator();  [BUGGY]  return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	    Iterator  iter  =  arguments.iterator();		non-compiled	[CE]  <identifier>  expected	68	None	add
9	[BUG]  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  ],  stopAtNonOption);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  ],  stopAtNonOption);  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	return(String[])tokens.toArray(new  String[tokens.size()  ],  stopAtNonOption);	return  (String[])  tokens.toArray(new  String[tokens.size()]);  	non-compiled	[CE]  <identifier>  expected	67	None	replace
10	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    Option  currentOption  =  options.getOption(token);  [BUGGY]  return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	    Option  currentOption  =  options.getOption(token);		non-compiled	[CE]  <identifier>  expected	68	None	add
11	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(stopAtNonOption);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    Option  currentOption  =  options.getOption(stopAtNonOption);  [BUGGY]  return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	    Option  currentOption  =  options.getOption(stopAtNonOption);		non-compiled	[CE]  <identifier>  expected	68	None	add
12	[BUG]  [BUGGY]    Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    Iterator  iter  =  tokens.iterator();  [BUGGY]  return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	    Iterator  iter  =  tokens.iterator();		non-compiled	[CE]  <identifier>  expected	68	None	add
13	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  process(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [BUGGY]    Iterator  <  String>  iter  =  tokens.iterator();  [BUGGY]  return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  	projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java	0.2581988897471611	158	158	1	replace	    Iterator  <  String>  iter  =  tokens.iterator();		non-compiled	[CE]  <identifier>  expected	68	None	add
