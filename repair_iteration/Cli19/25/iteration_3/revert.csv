projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=Arrays.asList(this.options).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption");tokens.add(currentOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption");if(currentOption!=null){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=Arrays.asList(options).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=Arrays.asList(this.arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103List<String>arguments=newArrayList<String>(arguments.size());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=this.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=this.currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=this.arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=currentOptions.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption");if(currentOption==null){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=tokens.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(token,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(arguments[0]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add(options.getOption("stopAtNonOption"));
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options!=null)?Arrays.asList(this.options).iterator():null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103List<String>arguments=newArrayList<String>(arguments.size()-1);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103List<String>arguments=newArrayList<String>(arguments.size()+1);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>arguments=newArrayList<String>(arguments.size());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=this.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(this.options).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).addAll(this.options);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).add("--");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption",arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption.");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("eatTheRest");if(currentOption!=null){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Optionsoptions=options.getOption("stopAtNonOption");if(options!=null){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Optionsoptions=options.getOption("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).clear();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).add("n");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=currentOption.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=currentOptions.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<Option>iter=options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Ileratoriter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options!=null)?Arrays.asList(this.options).iterator():this.options;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption");if(currentOption!=null){tokens.add(currentOption);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103List<String>arguments=options.getOptions("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=this.tokens.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.sort(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).addAll(this);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103List<String>arguments=currentOption.getOptions("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103List<String>arguments=options.getOptions("stopAtNonOption",token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add("stopAtNonOption",arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add("stopAtNonOption:");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).add("--"+token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).remove("--");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).put("--");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).add("-");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).add(":");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=Arrays.asList(options).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=Arrays.asList(this.options).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103List<String>iter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=this.currentOptions.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103if(this.options!=null){Arrays.asList(this.options).iterator();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103if(!stopAtNonOption){Arrays.asList(this.options).iterator();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103if(stopAtNonOption){Arrays.asList(this.options).iterator();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options==null)?Arrays.asList(this.options).iterator():null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options!=null)?Arrays.asList(arguments).iterator():null;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Optionoptions=currentOption.getOption("stopAtNonOption");if(options!=null){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Optionsoptions=currentOption.getOption("stopAtNonOption");if(options!=null){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Optionoptions=currentOption.getOption("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103options=currentOption.getOption("stopAtNonOption");if(options!=null){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption");if(currentOption==null){tokens.add(currentOption);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>arguments=newArrayList<String>(arguments.size()-1);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>arguments=newArrayList<String>(arguments.size()+1);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(token,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(token,stopAtNonOption,arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(token,eatTheRest);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(token,null);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=this.currentOptions.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=this.arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add(options.getOption("stop"));
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add(options.getString("stopAtNonOption"));
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Set<String>arguments=newHashSet<String>(arguments.size());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Optionsoptions=currentOption.getOption("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Optionoptions=options.getOption("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(this.options).addAll(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103if(stopAtNonOption){Arrays.asList(arguments).addAll(this.options);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103if(stopAtNonOption){Arrays.asList(arguments).addAll(this.options);}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(arguments[1]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(arguments[0],arguments[1]);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).addAll(this,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).addAll(options);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(options).addAll(this);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<Option>iter=currentOptions.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<Option>iter=this.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<Option>iter=currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options==null)?Arrays.asList(this.options).iterator():this.options;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options!=null)?Arrays.asList(this.options).iterator():arguments;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options!=null)?Arrays.asList(this.options).iterator():options;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).remove(arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).add(argument);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=this.currentOption.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.sort(arguments).clear();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.sort(arguments).add("--");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.sort(arguments).addAll(this.options);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Ileratoriter=Arrays.asList(arguments,stopAtNonOption).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=currentOption.arguments.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(arguments,stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption".toString());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options!=null)?Arrays.asList(arguments).iterator():this.options;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).add(";n");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Ileratoriter=Arrays.asList(options).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Optionoptions=options.getOption("stopAtNonOption");if(options!=null){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(arguments[0],stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Set<String>arguments=newArrayList<String>(arguments.size());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=currentOption.tokens.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=arrays.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add(options.getOption("stopAtNonOption")));
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.sort(arguments).add("--").iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103if(stopAtNonOption){Iterator<String>iter=Arrays.asList(arguments).iterator();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Ilerator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("eatTheRest");if(currentOption==null){thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103List<String>arguments=options.getOptions("stopAtNonOption.");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103List<String>arguments=options.getOptions("stopAtNonOption").iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103if(stopAtNonOption){Arrays.asList(arguments).addAll(this);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add("stopAtNonOptioneatTheRest");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add("-stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption(this.arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options!=null)?Arrays.asList(this.options).iterator():this;
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("eatTheRest");if(currentOption!=null){tokens.add(currentOption);}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption".clone());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103OptioncurrentOption=options.getOption("stopAtNonOption".cloneTree());
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.sort(arguments,stopAtNonOption).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103if(this.options!=null){Arrays.asList(this.options).iterator();}else{thrownewIllegalArgumentException("");}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103if(this.options!=null){Arrays.asList(this.options).iterator();}else{tokens=newArrayList<String>();}
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).add("--",stopAtNonOption);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).add(token);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).removeAll(this.options);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).addAll(this.options,options);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=this.currentOption.options.iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add("stopAtNonOption:eatTheRest");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103IllegalArgumentIteratoriter=Arrays.asList(arguments).iterator();
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103options=options.getOption("stopAtNonOption");
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Arrays.asList(arguments).addAll(tokens);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103tokens.add(options.getOption("stopAtNonOption"),arguments);
projects/Cli19/src/java/org/apache/commons/cli/PosixParser.java103Set<String>arguments=options.getOptions("stopAtNonOption");
