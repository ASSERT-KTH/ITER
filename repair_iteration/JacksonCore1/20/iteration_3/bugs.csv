bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_currentSegment  ==  null  &&!_currentSegment.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  &&!_currentSegment.isEmpty())  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  &&!_currentSegment.isEmpty())  {	  if(_currentSegment!=    null    &&!_currentSegment.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length()  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _currentSegment.length()  ==  0)  {	  if(_currentSegment!=    null    ||    _currentSegment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  if(_currentSegment!=  null  &&  _currentSegment.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  &&  _currentSegment.length()  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  &&  _currentSegment.length()  ==  0)  {	  if(_currentSegment!=    null    ||    _currentSegment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  if(_currentSegment!=  null  ||  _currentSegment.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  ||  _currentSegment.length()  >=  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  ||  _currentSegment.length()  >=  0)  {	  if(_currentSegment!=    null    ||    _currentSegment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length  >=  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _currentSegment.length  >=  0)  {	  if(_currentSegment!=    null    ||    _currentSegment.length    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  if(_currentSegment!=  null  ||  _currentSegment.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  ||  _currentSegment.length  >  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  ||  _currentSegment.length  >  0)  {	  if(_currentSegment!=    null    ||    _currentSegment.length    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }	  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  if(_currentSegment!=  null  ||  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  ||  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER))  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  ||  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER))  {	  if(_currentSegment!=    null    ||    _allocator    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
9	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _allocator!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _allocator!=  null)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _allocator!=  null)  {	  if(_currentSegment!=    null    ||    _allocator    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  if(_currentSegment!=  null  ||  _allocator!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  ||  _allocator!=  null)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  ||  _allocator!=  null)  {	  if(_currentSegment!=    null    ||    _allocator    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  _currentSegment  =  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  _currentSegment  =  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	_currentSegment  =  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);	  _currentSegment    =    _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
12	[BUG]  [BUGGY]  if(_allocator!=  null)  {  _currentSegment  =  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_allocator!=  null)  {  _currentSegment  =  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_allocator!=  null)  {  _currentSegment  =  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }	  _currentSegment    =    _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
13	[BUG]  [BUGGY]  _currentSegment  =  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  _currentSegment  =  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	_currentSegment  =  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);	  _currentSegment    =    _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
14	[BUG]  [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  null);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  null);  }  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  null);  }	  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,    null);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  if(_resultString!=  null  ||  _currentSegment.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_resultString!=  null  ||  _currentSegment.length()  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_resultString!=  null  ||  _currentSegment.length()  ==  0)  {	  if(_currentSegment!=    null    ||    _resultString.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  if(_resultString  ==  null  ||  _currentSegment.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_resultString  ==  null  ||  _currentSegment.length()  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_resultString  ==  null  ||  _currentSegment.length()  ==  0)  {	  if(_currentSegment!=    null    ||    _resultString.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length!=  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _currentSegment.length!=  0)  {	  if(_currentSegment    ==    null    ||    _currentSegment.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length  <  MAX_SEGMENT_LEN)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length  <  MAX_SEGMENT_LEN)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _currentSegment.length  <  MAX_SEGMENT_LEN)  {	  if(_currentSegment    ==    null    ||    _currentSegment.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _currentSize  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _currentSize  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _currentSize  ==  0)  {	  if(_currentSegment!=    null    ||    _currentSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _currentSize!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _currentSize!=  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _currentSize!=  0)  {	  if(_currentSegment!=    null    ||    _currentSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  if(_currentSegment!=  null  ||  _currentSize  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  ||  _currentSize  >=  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  ||  _currentSize  >=  0)  {	  if(_currentSegment!=    null    ||    _currentSize    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  if(_segments  ==  null  ||  _resultString.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_segments  ==  null  ||  _resultString.length()  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_segments  ==  null  ||  _resultString.length()  ==  0)  {	  if(_currentSegment    ==    null    ||    _resultString.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSegment);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSegment);  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	_allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSegment);	  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,    buf);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSize);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSize);  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	_allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSize);	  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,    buf);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  if(_currentSegment!=  null  &&  _currentSegment.length  <  MAX_SEGMENT_LEN)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  &&  _currentSegment.length  <  MAX_SEGMENT_LEN)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  &&  _currentSegment.length  <  MAX_SEGMENT_LEN)  {	  if(_currentSegment!=    null    ||    _currentSegment.length    <    MAX_SEGMENT_LEN)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  if(_currentSegment!=  null  ||  _currentSegment.length  <  =  MAX_SEGMENT_LEN)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  ||  _currentSegment.length  <  =  MAX_SEGMENT_LEN)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  ||  _currentSegment.length  <  =  MAX_SEGMENT_LEN)  {	  if(_currentSegment!=    null    ||    _currentSegment.length    <    MAX_SEGMENT_LEN)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  if(_currentSegment!=  null  &&  _currentSegment.length  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  &&  _currentSegment.length  >  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  &&  _currentSegment.length  >  0)  {	  if(_currentSegment!=    null    &&    _currentSegment.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
28	[BUG]  [BUGGY]  if(_currentSegment  ==  null  &&  _currentSegment.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  &&  _currentSegment.length  >  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  &&  _currentSegment.length  >  0)  {	  if(_currentSegment!=    null    &&    _currentSegment.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
29	[BUG]  [BUGGY]  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSegment);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSegment);  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	_allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSegment);	  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,    buf);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSize);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSize);  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	_allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf,  _currentSize);	  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,    buf);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_allocator!=  null)  {  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }	  _allocator.releaseBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,    buf);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  if(_currentSegment!=  null  ||  _currentSize.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  ||  _currentSize.length()  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  ||  _currentSize.length()  ==  0)  {	  if(_currentSegment!=    null    ||    _currentSegment.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  if(_currentSegment!=  null  ||  _resultArray.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  ||  _resultArray.length()  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  ||  _resultArray.length()  ==  0)  {	  if(_currentSegment!=    null    ||    _resultString.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  if(_allocator!=  null  ||  _currentSegment!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_allocator!=  null  ||  _currentSegment!=  null)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_allocator!=  null  ||  _currentSegment!=  null)  {	  if(_currentSegment!=    null    ||    _allocator    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _allocator  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _allocator  ==  null)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _allocator  ==  null)  {	  if(_currentSegment!=    null    ||    _allocator    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  _currentSegment  =  allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  _currentSegment  =  allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	_currentSegment  =  allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);	  _currentSegment    =    _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
37	[BUG]  [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }	  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,    buf);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
38	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _resultArray.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _resultArray.length()  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _resultArray.length()  ==  0)  {	  if(_currentSegment    ==    null    ||    _resultString.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  if(_currentSegment!=  null  &&  _resultString.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  &&  _resultString.length()  ==  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  &&  _resultString.length()  ==  0)  {	  if(_currentSegment!=    null    ||    _resultString.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  if(_currentSegment!=  null  &&  _currentSegment.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  &&  _currentSegment.length  >=  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  &&  _currentSegment.length  >=  0)  {	  if(_currentSegment!=    null    ||    _currentSegment.length    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length  <  2)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _currentSegment.length  <  2)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _currentSegment.length  <  2)  {	  if(_currentSegment    ==    null    ||    _currentSegment.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  else  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BU  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  else  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BU  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  else  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BU	  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  else  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  else  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);  }  else  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_	  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  _currentSegment  =  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  _currentSegment  =  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  null);  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	_currentSegment  =  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  null);	  _currentSegment    =    _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
45	[BUG]  [BUGGY]  if(_currentSegment!=  null  &&  _allocator  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment!=  null  &&  _allocator  ==  null)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment!=  null  &&  _allocator  ==  null)  {	  if(_currentSegment!=    null    ||    _allocator    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
46	[BUG]  [BUGGY]  if(_currentSegment  ==  null  ||  _resultString.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_currentSegment  ==  null  ||  _resultString.length()!=  0)  {  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_currentSegment  ==  null  ||  _resultString.length()!=  0)  {	  if(_currentSegment    ==    null    ||    _resultString.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
47	[BUG]  [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  null);  }  else  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  releaseBuffers()  {  if  (_allocator  ==  null)  {  resetWithEmpty();  }  else  {      [BUGGY]  if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  null);  }  else  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_  [BUGGY]        resetWithEmpty();  char[]  buf  =  _currentSegment;  _currentSegment  =  null;  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  buf);  }  }  }  [CLASS]  TextBuffer  [METHOD]  releaseBuffers  [RETURN_TYPE]  void  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.31622776601683794	140	140	1	replace	if(_allocator!=  null)  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,  null);  }  else  {  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_	  _allocator.releaseCharBuffer(BufferRecycler.CharBufferType.TEXT_BUFFER,    null);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
