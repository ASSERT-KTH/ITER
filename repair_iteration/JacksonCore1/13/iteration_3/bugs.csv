bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  _resultString.toString();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  _resultString.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  _resultString.toString();  }	  if(_resultString!=    null)    {    return    _resultString.toString();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  _resultString  =  _resultString.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultString  =  _resultString.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  _resultString.toString();	  if(_resultString!=    null)    {    return    _resultString.toString();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  _resultString.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultString.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString.toString();	  if(_resultString!=    null)    {    return    _resultString.toString();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  if(_resultString  ==  null)return  null;  if(_resultString!=  null)return  null;  return  null;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)return  null;  if(_resultString!=  null)return  null;  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)return  null;  if(_resultString!=  null)return  null;  return  null;  }	  return(_resultString    ==    null)?    null    :    _resultString.toString();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  resultString;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  resultString;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  resultString;  }	  if(_resultString!=    null)    {    return    _resultArray;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
6	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  null;  }	  if(_resultString!=    null)    {    return    _resultArray;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
7	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  _resultArray;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  _resultArray;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  _resultArray;  }	  if(_resultString!=    null)    {    return    _resultArray;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
8	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultString!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
9	[BUG]  [BUGGY]  ||(_resultString!=  null  &&!_resultString.equals(_resultString)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  ||(_resultString!=  null  &&!_resultString.equals(_resultString)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	||(_resultString!=  null  &&!_resultString.equals(_resultString)))  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultString!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
10	[BUG]  [BUGGY]  ||(_resultString!=  null  &&!_resultString.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  ||(_resultString!=  null  &&!_resultString.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	||(_resultString!=  null  &&!_resultString.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultString!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
11	[BUG]  [BUGGY]  if(_hasSegments)  {  if(_resultArray!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  if(_resultArray!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  if(_resultArray!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }	  if(_resultString!=    null)    {    if(_resultArray!=    null)    {    return    new    String(_resultString,    0,    _resultString.length());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  if(_resultArray!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  if(_resultArray!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  if(_resultArray!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }	  if(_resultString!=    null)    {    if(_resultArray!=    null)    {    return    new    String(_resultString,    0,    _resultString.length());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  if(_hasSegments)  {  if(_resultString!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  if(_resultString!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  if(_resultString!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }	  if(_resultString!=    null)    {    if(_resultArray!=    null)    {    return    new    String(_resultString,    0,    _resultString.length());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  return(_resultString!=  null)?  null  :  _resultString.trim();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultString!=  null)?  null  :  _resultString.trim();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString!=  null)?  null  :  _resultString.trim();	  return(_resultString    ==    null)?    null    :    _resultString.trim();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
15	[BUG]  [BUGGY]  return(_resultString  ==  null)?  null  :  _resultString.substring(0,  _resultString.length());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultString  ==  null)?  null  :  _resultString.substring(0,  _resultString.length());  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString  ==  null)?  null  :  _resultString.substring(0,  _resultString.length());	  return(_resultString    ==    null)?    null    :    _resultString.trim();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
16	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultString!=    null)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
17	[BUG]  [BUGGY]  if(_hasSegments)  {  if(_resultString  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  if(_resultString  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  if(_resultString  ==  null)  {  return  null;  }	  if(_resultString!=    null)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
18	[BUG]  [BUGGY]  if(_resultArray  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray  ==  null)  {  return  null;  }	  if(_resultString!=    null)    {    if(_resultArray!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  return  _segments.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  _segments.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _segments.toString();	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
20	[BUG]  [BUGGY]  if(!_hasSegments)  {  sb.append(_resultString);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(!_hasSegments)  {  sb.append(_resultString);  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(!_hasSegments)  {  sb.append(_resultString);  }	  if(_hasSegments)    {    sb.append(_resultString);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  if(_hasSegments)  {  sb.append(_resultString,  0,  _resultString.length());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  sb.append(_resultString,  0,  _resultString.length());  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  sb.append(_resultString,  0,  _resultString.length());  }	  if(_hasSegments)    {    sb.append(_resultString);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  return  _resultString.toString()  +  sb.toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  _resultString.toString()  +  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _resultString.toString()  +  sb.toString();	  return    sb.toString()    +    _resultString;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
23	[BUG]  [BUGGY]  return  sb.toString()  +  _resultString.substring(0,  _resultString.length());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  sb.toString()  +  _resultString.substring(0,  _resultString.length());  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sb.toString()  +  _resultString.substring(0,  _resultString.length());	  return    sb.toString()    +    _resultString;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
24	[BUG]  [BUGGY]  return  sb.toString()  +  _resultString.trim();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  sb.toString()  +  _resultString.trim();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sb.toString()  +  _resultString.trim();	  return    sb.toString()    +    _resultString;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
25	[BUG]  [BUGGY]  _resultArray  =  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultArray  =  null;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultArray  =  null;	  if(_hasSegments)    {    sb.append(_resultString);    }    else    {    _resultArray    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
26	[BUG]  [BUGGY]  sb.append(_resultArray,  0,  _resultString.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultArray,  0,  _resultString.length);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultArray,  0,  _resultString.length);	  sb.append(_resultArray);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
27	[BUG]  [BUGGY]  sb.append(_resultArray,  0,  _resultString.length());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultArray,  0,  _resultString.length());  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultArray,  0,  _resultString.length());	  sb.append(_resultArray);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
28	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  sb.append(_resultArray);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  sb.append(_resultArray);  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  sb.append(_resultArray);  }	  sb.append(_resultArray);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
29	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  resultString;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  resultString;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  resultString;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultArray    ==    null)    {    return    _resultString;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
30	[BUG]  [BUGGY]  _resultString  =  sb.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultString  =  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  sb.toString();	  _resultString    =    null;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
31	[BUG]  [BUGGY]  _resultString  =  _resultArray;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultString  =  _resultArray;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  _resultArray;	  _resultString    =    null;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
32	[BUG]  [BUGGY]  _resultString  =  value;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultString  =  value;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  value;	  _resultString    =    null;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
33	[BUG]  [BUGGY]  _resultString  =  resultString;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultString  =  resultString;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  resultString;	  _resultString    =    null;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
34	[BUG]  [BUGGY]  return(_resultArray  ==  null)?  null  :  _resultArray.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultArray  ==  null)?  null  :  _resultArray.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultArray  ==  null)?  null  :  _resultArray.toString();	  return(_resultString    ==    null)?    null    :    _resultArray.toString();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
35	[BUG]  [BUGGY]  return(_resultArray  ==  null)?  null  :  _resultString.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultArray  ==  null)?  null  :  _resultString.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultArray  ==  null)?  null  :  _resultString.toString();	  return(_resultString    ==    null)?    null    :    _resultArray.toString();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
36	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  if(_resultString!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  if(_resultString!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  if(_resultString!=  null)  {  return  null;  }	  if(_resultString!=    null)    {    return    _resultArray;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
37	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  if(_resultString  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  if(_resultString  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  if(_resultString  ==  null)  {  return  null;  }	  if(_resultString!=    null)    {    return    _resultArray;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
38	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultString!=    null)    {    return    _resultArray;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
39	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  resultString.toString();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  return  resultString.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  resultString.toString();  }	  if(_resultString!=    null)    {    return    resultString;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  this;  }	  if(_resultString    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  Collections.emptyList();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  Collections.emptyList();  }	  if(_resultString    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  return  _resultString.substring(0,  _resultString.length());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  _resultString.substring(0,  _resultString.length());  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _resultString.substring(0,  _resultString.length());	  return    _resultString.substring(0,    _resultString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  return  sb.substring(0,  _resultString.length());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  sb.substring(0,  _resultString.length());  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sb.substring(0,  _resultString.length());	  return    _resultString.substring(0,    _resultString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  return  String.valueOf(_resultString.substring(0,  _resultString.length()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  String.valueOf(_resultString.substring(0,  _resultString.length()));  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  String.valueOf(_resultString.substring(0,  _resultString.length()));	  return    _resultString.substring(0,    _resultString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  return  _segments.substring(0,  _resultString.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  _segments.substring(0,  _resultString.length());  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _segments.substring(0,  _resultString.length());	  return    _resultString.substring(0,    _resultString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }	  _resultString    =    _resultArray.toString();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
47	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _resultString    =    _resultArray.toString();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
48	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  resultArray;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  resultArray;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  resultArray;  }	  if(_resultString!=    null)    {    return    resultArray;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
49	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  resultArray;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  resultArray;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  resultArray;  }	  if(_resultString!=    null)    {    return    resultArray;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
50	[BUG]  [BUGGY]  if(_resultArray  ==  null)  {  return  resultArray;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray  ==  null)  {  return  resultArray;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray  ==  null)  {  return  resultArray;  }	  if(_resultString!=    null)    {    return    resultArray;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
51	[BUG]  [BUGGY]  ||(_resultString!=  null  &&!_resultString.equals(_resultString)))  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  ||(_resultString!=  null  &&!_resultString.equals(_resultString)))  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	||(_resultString!=  null  &&!_resultString.equals(_resultString)))  {  return  null;  }	  if(_resultString!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  ||(_resultString!=  null  &&!_resultString.isEmpty()))  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  ||(_resultString!=  null  &&!_resultString.isEmpty()))  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	||(_resultString!=  null  &&!_resultString.isEmpty()))  {  return  null;  }	  if(_resultString!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  if(_resultArray!=  null)  {  return  resultString;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  if(_resultArray!=  null)  {  return  resultString;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  if(_resultArray!=  null)  {  return  resultString;  }	  if(_resultString!=    null)    {    if(_resultArray!=    null)    {    return    resultString;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
54	[BUG]  [BUGGY]  if(_resultString!=  null)  {  if(_resultArray  ==  null)  {  return  resultString;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  if(_resultArray  ==  null)  {  return  resultString;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  if(_resultArray  ==  null)  {  return  resultString;  }	  if(_resultString!=    null)    {    if(_resultArray!=    null)    {    return    resultString;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
55	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  sb.toString();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  return  sb.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  sb.toString();  }	  if(sb!=    null)    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
56	[BUG]  [BUGGY]  if(_segments!=  null)  {  return  sb.toString();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_segments!=  null)  {  return  sb.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_segments!=  null)  {  return  sb.toString();  }	  if(sb!=    null)    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
57	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  _resultArray.toString();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  _resultArray.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  _resultArray.toString();  }	  if(_resultString!=    null)    {    return    _resultArray.toString();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
58	[BUG]  [BUGGY]  _resultArray.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultArray.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultArray.toString();	  if(_resultString!=    null)    {    return    _resultArray.toString();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
59	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  resultString.toString();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  resultString.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  resultString.toString();  }	  if(_resultString!=    null)    {    return    _resultArray.toString();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
60	[BUG]  [BUGGY]  if(_hasSegments)  {  sb.append(_currentSegment);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  sb.append(_currentSegment);  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  sb.append(_currentSegment);  }	  sb.append(_currentSegment);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
61	[BUG]  [BUGGY]  return(_resultString  ==  null)?  null  :  _resultArray;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultString  ==  null)?  null  :  _resultArray;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString  ==  null)?  null  :  _resultArray;	  return    _resultArray;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
62	[BUG]  [BUGGY]  return(_resultString  ==  null)?  null  :  sb.toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultString  ==  null)?  null  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString  ==  null)?  null  :  sb.toString();	  return(sb    ==    null)?    null    :    sb.toString();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
63	[BUG]  [BUGGY]  return(_segments  ==  null)?  null  :  sb.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_segments  ==  null)?  null  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_segments  ==  null)?  null  :  sb.toString();	  return(sb    ==    null)?    null    :    sb.toString();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
64	[BUG]  [BUGGY]  sb.append(_resultString,  0,  _resultString.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultString,  0,  _resultString.length);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultString,  0,  _resultString.length);	  sb.append(_resultString);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  if(_resultString!=  null)  {  sb.append(_resultString);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  sb.append(_resultString);  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  sb.append(_resultString);  }	  sb.append(_resultString);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  sb.append(_resultString,  0,  _resultString.length()  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultString,  0,  _resultString.length()  +  1);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultString,  0,  _resultString.length()  +  1);	  sb.append(_resultString,    0,    _resultString.length());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
67	[BUG]  [BUGGY]  sb.append(_resultString,  0,  _resultString.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultString,  0,  _resultString.length()  -  1);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultString,  0,  _resultString.length()  -  1);	  sb.append(_resultString,    0,    _resultString.length());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
68	[BUG]  [BUGGY]  sb.append(_resultString,  0,  _resultString.length()  -  2);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultString,  0,  _resultString.length()  -  2);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultString,  0,  _resultString.length()  -  2);	  sb.append(_resultString,    0,    _resultString.length());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  return(sb!=  null)?  _resultString  :  sb.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(sb!=  null)?  _resultString  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(sb!=  null)?  _resultString  :  sb.toString();	  return(sb!=    null)?    sb    :    sb.toString();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
70	[BUG]  [BUGGY]  return(sb  ==  null)?  _resultString  :  sb.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(sb  ==  null)?  _resultString  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(sb  ==  null)?  _resultString  :  sb.toString();	  return(sb!=    null)?    sb    :    sb.toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
71	[BUG]  [BUGGY]  if(_resultString!=  null)return  null;  if(_resultString!=  null)return  null;  _resultString  =  _resultString.toString();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)return  null;  if(_resultString!=  null)return  null;  _resultString  =  _resultString.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)return  null;  if(_resultString!=  null)return  null;  _resultString  =  _resultString.toString();  }	  return(_resultString!=    null)?    null    :    _resultString.toString();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
72	[BUG]  [BUGGY]  if(!_hasSegments)  {  return  sb.toString();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(!_hasSegments)  {  return  sb.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(!_hasSegments)  {  return  sb.toString();  }	  if(_hasSegments)    {    return    sb.toString();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
73	[BUG]  [BUGGY]  if(_hasSegments)  {  return  sb.toString()  +  1;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  return  sb.toString()  +  1;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  return  sb.toString()  +  1;  }	  if(_hasSegments)    {    return    sb.toString();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
74	[BUG]  [BUGGY]  sb.append(_currentSegment,  0,  _currentSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_currentSegment,  0,  _currentSize  +  1);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_currentSegment,  0,  _currentSize  +  1);	  sb.append(_currentSegment,    0,    _currentSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
75	[BUG]  [BUGGY]  sb.append(_resultString,  0,  _currentSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultString,  0,  _currentSize);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultString,  0,  _currentSize);	  sb.append(_currentSegment,    0,    _currentSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
76	[BUG]  [BUGGY]  if(_hasSegments)  {  sb.append(_currentSegment,  0,  _currentSize);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  sb.append(_currentSegment,  0,  _currentSize);  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  sb.append(_currentSegment,  0,  _currentSize);  }	  sb.append(_currentSegment,    0,    _currentSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
77	[BUG]  [BUGGY]  _resultArray  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultArray  =  new  ArrayList  <  String>();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultArray  =  new  ArrayList  <  String>();	  if(_hasSegments)    {    if(_resultArray!=    null)    {    _resultArray    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
78	[BUG]  [BUGGY]  if(_hasSegments)  {  if(_resultArray  ==  null)  {  _resultArray  =  new  ArrayList  <  String>();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  if(_resultArray  ==  null)  {  _resultArray  =  new  ArrayList  <  String>();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  if(_resultArray  ==  null)  {  _resultArray  =  new  ArrayList  <  String>();  }	  if(_hasSegments)    {    if(_resultArray!=    null)    {    _resultArray    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
79	[BUG]  [BUGGY]  if(_resultString!=  null)  {  if(_hasSegments)  {  _resultArray  =  new  ArrayList  <  String>();  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  if(_hasSegments)  {  _resultArray  =  new  ArrayList  <  String>();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  if(_hasSegments)  {  _resultArray  =  new  ArrayList  <  String>();  }	  if(_hasSegments)    {    if(_resultArray!=    null)    {    _resultArray    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
80	[BUG]  [BUGGY]  return  _segments.toArray(new  String[_segments.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  _segments.toArray(new  String[_segments.size()  ]);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _segments.toArray(new  String[_segments.size()  ]);	  return    _segments;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
81	[BUG]  [BUGGY]  return(_segments  ==  null)?  null  :  _segments;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_segments  ==  null)?  null  :  _segments;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_segments  ==  null)?  null  :  _segments;	  return    _segments;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
82	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  sb.toString();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  sb.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  sb.toString();  }	  if(sb!=    null)    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
83	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  sb.toString();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  sb.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  sb.toString();  }	  if(sb!=    null)    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
84	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  if(_hasSegments)  {  sb.append(_resultString);  }  else  {  _resultArray  =  null;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  if(_hasSegments)  {  sb.append(_resultString);  }  else  {  _resultArray  =  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  if(_hasSegments)  {  sb.append(_resultString);  }  else  {  _resultArray  =  null;  }	  if(_hasSegments)    {    sb.append(_resultString);    }    else    {    _resultArray    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
85	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  if(_hasSegments)  {  sb.append(_resultString);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  if(_hasSegments)  {  sb.append(_resultString);  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  if(_hasSegments)  {  sb.append(_resultString);  }	  if(_hasSegments)    {    sb.append(_resultString);    }    else    {    _resultArray    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
86	[BUG]  [BUGGY]  sb.toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.toString();	  if(_hasSegments)    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  _segments  =  sb.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _segments  =  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_segments  =  sb.toString();	  if(_hasSegments)    {    return    sb.toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  return(_resultArray!=  null)?  null  :  _resultArray.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultArray!=  null)?  null  :  _resultArray.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultArray!=  null)?  null  :  _resultArray.toString();	  return(_resultString    ==    null)?    null    :    _resultArray.toString();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
89	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  new  StringBuffer();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  new  StringBuffer();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  new  StringBuffer();  }	  if(_resultString!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
90	[BUG]  [BUGGY]  sb.append(_resultArray,  0,  _resultLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultArray,  0,  _resultLen);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultArray,  0,  _resultLen);	  sb.append(_resultArray);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
91	[BUG]  [BUGGY]  sb.append(_resultArray,  0,  _currentSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultArray,  0,  _currentSize);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultArray,  0,  _currentSize);	  sb.append(_resultArray);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
92	[BUG]  [BUGGY]  if(_resultString!=  null)  {  if(_hasSegments)  {  sb.append(_resultString);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  if(_hasSegments)  {  sb.append(_resultString);  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  if(_hasSegments)  {  sb.append(_resultString);  }	  if(_hasSegments)    {    sb.append(_resultString);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
93	[BUG]  [BUGGY]  if(_hasSegments)  {  sb.append(_resultString,  0,  _resultString.length);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  sb.append(_resultString,  0,  _resultString.length);  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  sb.append(_resultString,  0,  _resultString.length);  }	  if(_hasSegments)    {    sb.append(_resultString);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
94	[BUG]  [BUGGY]  if(_resultString!=  null)  {  sb.append(_resultString);  }  else  {  sb.append(';');  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  sb.append(_resultString);  }  else  {  sb.append(';');  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  sb.append(_resultString);  }  else  {  sb.append(';');  }	  sb.append(_resultString);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
95	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  else  {  _resultArray  =  new  ArrayList  <  String>();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  else  {  _resultArray  =  new  ArrayList  <  String>();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  else  {  _resultArray  =  new  ArrayList  <  String>();  }	  _resultString    =    _resultArray.toString();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
96	[BUG]  [BUGGY]  _resultString  =  resultArray;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultString  =  resultArray;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  resultArray;	  _resultString    =    null;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
97	[BUG]  [BUGGY]  _resultString  =  result;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultString  =  result;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  result;	  _resultString    =    null;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
98	[BUG]  [BUGGY]  return(_resultString!=  null)?  null  :  sb.toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultString!=  null)?  null  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString!=  null)?  null  :  sb.toString();	  return(sb!=    null)?    null    :    sb.toString();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
99	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  curr;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  curr;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  curr;  }	  if(_resultString!=    null)    {    return    _resultArray;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
100	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  if(_hasSegments)  {  _resultArray  =  new  ArrayList  <  String>();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  if(_hasSegments)  {  _resultArray  =  new  ArrayList  <  String>();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  if(_hasSegments)  {  _resultArray  =  new  ArrayList  <  String>();  }	  if(_hasSegments)    {    if(_resultArray!=    null)    {    _resultArray    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
101	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  _resultArray  =  new  ArrayList  <  String>();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  _resultArray  =  new  ArrayList  <  String>();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  _resultArray  =  new  ArrayList  <  String>();  }	  if(_hasSegments)    {    if(_resultArray!=    null)    {    _resultArray    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
102	[BUG]  [BUGGY]  return(_resultString!=  null)?  null  :  _resultString.substring(0,  _resultString.length());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultString!=  null)?  null  :  _resultString.substring(0,  _resultString.length());  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString!=  null)?  null  :  _resultString.substring(0,  _resultString.length());	  return    _resultString.substring(0,    _resultString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
103	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultString!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
104	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  throw  new  IllegalArgumentException( " ".equals(_resultString));  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  throw  new  IllegalArgumentException( " ".equals(_resultString));  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  throw  new  IllegalArgumentException( " ".equals(_resultString));  }	  if(_resultString!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
105	[BUG]  [BUGGY]  return  sbu.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  sbu.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sbu.toString();	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
106	[BUG]  [BUGGY]  return(_resultArray!=  null)?  null  :  _resultArray;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultArray!=  null)?  null  :  _resultArray;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultArray!=  null)?  null  :  _resultArray;	  return    _resultArray;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
107	[BUG]  [BUGGY]  _resultArray  =  _resultArray.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultArray  =  _resultArray.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultArray  =  _resultArray.toString();	  if(_resultString!=    null)    {    return    _resultArray.toString();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
108	[BUG]  [BUGGY]  _resultArray  =  _resultString.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultArray  =  _resultString.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultArray  =  _resultString.toString();	  if(_resultString!=    null)    {    return    _resultArray.toString();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
109	[BUG]  [BUGGY]  return(sb  ==  null)?  sb  :  sb.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(sb  ==  null)?  sb  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(sb  ==  null)?  sb  :  sb.toString();	  return(sb!=    null)?    sb    :    sb.toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
110	[BUG]  [BUGGY]  return(_resultString!=  null)?  sb  :  sb.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultString!=  null)?  sb  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString!=  null)?  sb  :  sb.toString();	  return(sb!=    null)?    sb    :    sb.toString();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
111	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  _resultArray;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  _resultArray;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  _resultArray;  }	  if(_resultString    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
112	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  this;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  this;  }	  if(_resultString    ==    null)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
113	[BUG]  [BUGGY]  if(_resultString!=  null)return  null;  if(_resultArray!=  null)return  null;  _resultString  =  _resultString.toString();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)return  null;  if(_resultArray!=  null)return  null;  _resultString  =  _resultString.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)return  null;  if(_resultArray!=  null)return  null;  _resultString  =  _resultString.toString();  }	  return(_resultString!=    null)?    null    :    _resultString.toString();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
114	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  resultString;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  resultString;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  resultString;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultString!=    null)    {    return    _resultArray;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
115	[BUG]  [BUGGY]  if(resultString!=  null)  {  if(_resultArray!=  null)  {  return  resultString;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(resultString!=  null)  {  if(_resultArray!=  null)  {  return  resultString;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(resultString!=  null)  {  if(_resultArray!=  null)  {  return  resultString;  }	  if(_resultString!=    null)    {    if(_resultArray!=    null)    {    return    resultString;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
116	[BUG]  [BUGGY]  sb.append(_currentSegment,  0,  _resultString.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_currentSegment,  0,  _resultString.length);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_currentSegment,  0,  _resultString.length);	  sb.append(_currentSegment);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
117	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  curr.toString();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  return  curr.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  curr.toString();  }	  if(_resultArray!=    null)    {    return    _resultString.toString();    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
118	[BUG]  [BUGGY]  return  sb.toString()  +  _resultArray;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  sb.toString()  +  _resultArray;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sb.toString()  +  _resultArray;	  return    sb.toString()    +    _resultString;    	non-compiled	[CE]  ';'  expected	23	None	replace
119	[BUG]  [BUGGY]  return  sb.toString()  +  _resultString  +  1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  sb.toString()  +  _resultString  +  1;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sb.toString()  +  _resultString  +  1;	  return    sb.toString()    +    _resultString;    	non-compiled	[CE]  ';'  expected	23	None	replace
120	[BUG]  [BUGGY]  if(_hasSegments)  {  if(_resultArray!=  null)  {  return  null;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_hasSegments)  {  if(_resultArray!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  if(_resultArray!=  null)  {  return  null;  }	  if(_resultString    ==    null)    {    if(_resultArray!=    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	11	None	replace
121	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  curr;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null)  {  return  curr;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  curr;  }	  if(_resultArray    ==    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
122	[BUG]  [BUGGY]  _resultString  =  _resultString;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  _resultString  =  _resultString;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  _resultString;	  if(_resultString    ==    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
123	[BUG]  [BUGGY]  return  _resultArray!=  null?  null  :  _resultArray.toString();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  _resultArray!=  null?  null  :  _resultArray.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _resultArray!=  null?  null  :  _resultArray.toString();	  return    _resultArray.toString();    	non-compiled	[CE]  ';'  expected	24	None	replace
124	[BUG]  [BUGGY]  ||(_resultString!=  null  &&  _resultString.length()  >  0))  {  return  null;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  ||(_resultString!=  null  &&  _resultString.length()  >  0))  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	||(_resultString!=  null  &&  _resultString.length()  >  0))  {  return  null;  }	  if(_resultString!=    null)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
125	[BUG]  [BUGGY]  return  sb.toString()  +  _currentSegment;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  sb.toString()  +  _currentSegment;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sb.toString()  +  _currentSegment;	  return    sb.toString()    +    _resultString;    	non-compiled	[CE]  ';'  expected	23	None	replace
126	[BUG]  [BUGGY]  return  sb.toString()  +  _inputStart;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  sb.toString()  +  _inputStart;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sb.toString()  +  _inputStart;	  return    sb.toString()    +    _resultString;    	non-compiled	[CE]  ';'  expected	23	None	replace
127	[BUG]  [BUGGY]  if(resultString!=  null)  {  return  resultString;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(resultString!=  null)  {  return  resultString;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(resultString!=  null)  {  return  resultString;  }	  if(_resultString    ==    null)    {    return    resultString;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
128	[BUG]  [BUGGY]  if(resultString  ==  null)  {  return  _resultString;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(resultString  ==  null)  {  return  _resultString;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(resultString  ==  null)  {  return  _resultString;  }	  if(_resultString    ==    null)    {    return    resultString;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
129	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  resultArray.toString();  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  resultArray.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  resultArray.toString();  }	  if(_resultString!=    null)    {    return    resultArray;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
130	[BUG]  [BUGGY]  if(_segments!=  null)  {  return  _segments;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_segments!=  null)  {  return  _segments;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_segments!=  null)  {  return  _segments;  }	  return    _segments;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
131	[BUG]  [BUGGY]  return  _segments  ==  null?  null  :  _segments.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  _segments  ==  null?  null  :  _segments.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _segments  ==  null?  null  :  _segments.toString();	  return    _segments;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
132	[BUG]  [BUGGY]  ||(_resultString!=  null  &&  _resultString.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  ||(_resultString!=  null  &&  _resultString.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	||(_resultString!=  null  &&  _resultString.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultString!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
133	[BUG]  [BUGGY]  return(sb.toString()  ==  null)?  sb.toString()  :  sb.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(sb.toString()  ==  null)?  sb.toString()  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(sb.toString()  ==  null)?  sb.toString()  :  sb.toString();	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
134	[BUG]  [BUGGY]  return(sb.toString()  ==  0)?  sb.toString()  :  sb.toString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(sb.toString()  ==  0)?  sb.toString()  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(sb.toString()  ==  0)?  sb.toString()  :  sb.toString();	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
135	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  else  {  return  sb.toString();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  else  {  return  sb.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  _resultString  =  _resultArray.toString();  }  else  {  return  sb.toString();  }	  _resultString    =    _resultArray.toString();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
136	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }	  if(_resultString!=    null)    {    if(_resultArray!=    null)    {    return    new    String(_resultString,    0,    _resultString.length());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
137	[BUG]  [BUGGY]  sb.append(_resultString,  0,  _resultArray.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  sb.append(_resultString,  0,  _resultArray.length);  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultString,  0,  _resultArray.length);	  sb.append(_resultString);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
138	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  _result.toString();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultArray!=  null)  {  return  _result.toString();  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  _result.toString();  }	  if(_resultString!=    null)    {    return    _resultArray.toString();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
139	[BUG]  [BUGGY]  return(_resultString  ==  null)?  null  :  _resultString.toLowerCase();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultString  ==  null)?  null  :  _resultString.toLowerCase();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString  ==  null)?  null  :  _resultString.toLowerCase();	  return(_resultString    ==    null)?    null    :    _resultString.toString();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
140	[BUG]  [BUGGY]  return(_resultArray  ==  null)?  null  :  sb.toString();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return(_resultArray  ==  null)?  null  :  sb.toString();  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultArray  ==  null)?  null  :  sb.toString();	  return(sb!=    null)?    null    :    sb.toString();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
141	[BUG]  [BUGGY]  if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  _resultString;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  _resultString;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  _resultString;  }	  if(_resultString!=    null)    {    if(_resultArray!=    null)    {    return    resultString;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
142	[BUG]  [BUGGY]  if(_resultString  ==  null  ||  _resultArray!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null  ||  _resultArray!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null  ||  _resultArray!=  null)  {  return  null;  }	  if(_resultString    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
143	[BUG]  [BUGGY]  if(_resultString  ==  null  ||!_hasSegments)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  if(_resultString  ==  null  ||!_hasSegments)  {  return  null;  }  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null  ||!_hasSegments)  {  return  null;  }	  if(_resultString    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
144	[BUG]  [BUGGY]  return  _resultString.substring(0,  _reasultString.length());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  _resultString.substring(0,  _reasultString.length());  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _resultString.substring(0,  _reasultString.length());	  return    _resultString.substring(0,    _resultString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
145	[BUG]  [BUGGY]  return  _resultString.substring(0,  _resultString.length())+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }      [BUGGY]  return  _resultString.substring(0,  _resultString.length())+  1;  [BUGGY]      }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _resultString.substring(0,  _resultString.length())+  1;	  return    _resultString.substring(0,    _resultString.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
