bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  null;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  return  null;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  null;  }	  if(_resultString!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
2	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  _resultString;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString  ==  null)  {  return  _resultString;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  _resultString;  }	  if(_resultString!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
3	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  null;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString  ==  null)  {  return  null;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  null;  }	  if(_resultString!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
4	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  _resultString.toString();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  return  _resultString.toString();  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  _resultString.toString();  }	  return    _resultString.toString();    	non-compiled	[CE]  ';'  expected	7	None	replace
5	[BUG]  [BUGGY]  return  _resultString.substring(0,  _resultString.length()  -  1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return  _resultString.substring(0,  _resultString.length()  -  1);  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _resultString.substring(0,  _resultString.length()  -  1);	  return    _resultString.toString();    	non-compiled	[CE]  ';'  expected	7	None	replace
6	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  resultString;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  return  resultString;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  resultString;  }	  if(_resultArray!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
7	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  return  resultString;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString  ==  null)  {  return  resultString;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  return  resultString;  }	  if(_resultArray!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
8	[BUG]  [BUGGY]  if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  null;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  null;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  null;  }	  if(_resultArray!=    null)    {    return    _resultString;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	9	None	replace
9	[BUG]  [BUGGY]  if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  new  String(_resultString,  0,  _resultString.length());  }	  if(_resultArray!=    null)    {    return    _resultString;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	9	None	replace
10	[BUG]  [BUGGY]  if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  resultString;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  resultString;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  if(_resultArray!=  null)  {  return  resultString;  }	  if(_resultArray!=    null)    {    return    _resultString;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	9	None	replace
11	[BUG]  [BUGGY]  if(_resultString  ==  null)  {  if(_resultArray!=  null)  {  return  null;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString  ==  null)  {  if(_resultArray!=  null)  {  return  null;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString  ==  null)  {  if(_resultArray!=  null)  {  return  null;  }	  if(_resultArray!=    null)    {    return    _resultString;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	9	None	replace
12	[BUG]  [BUGGY]  return(_resultString  ==  null)?  null  :  _resultString.toString();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return(_resultString  ==  null)?  null  :  _resultString.toString();  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString  ==  null)?  null  :  _resultString.toString();	  return(_resultString!=    null)?    null    :    _resultString;    	non-compiled	[CE]  ';'  expected	2	None	replace
13	[BUG]  [BUGGY]  return(_resultString!=  null)?  null  :  _resultString.toString();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return(_resultString!=  null)?  null  :  _resultString.toString();  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString!=  null)?  null  :  _resultString.toString();	  return(_resultString!=    null)?    null    :    _resultString;    	non-compiled	[CE]  ';'  expected	2	None	replace
14	[BUG]  [BUGGY]  sb.append(_resultString);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  sb.append(_resultString);  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultString);	      	non-compiled	[CE]  ';'  expected	5	None	replace
15	[BUG]  [BUGGY]  if(_hasSegments)  {  sb.append(_resultString);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_hasSegments)  {  sb.append(_resultString);  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  sb.append(_resultString);  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
16	[BUG]  [BUGGY]  sb.append(_resultString,  0,  _resultString.length());  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  sb.append(_resultString,  0,  _resultString.length());  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultString,  0,  _resultString.length());	      	non-compiled	[CE]  ';'  expected	5	None	replace
17	[BUG]  [BUGGY]  if(_hasSegments)  {  sb.append(_resultString);  }  else  {  _resultArray  =  null;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_hasSegments)  {  sb.append(_resultString);  }  else  {  _resultArray  =  null;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  sb.append(_resultString);  }  else  {  _resultArray  =  null;  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
18	[BUG]  [BUGGY]  if(_hasSegments)  {  return  sb.toString();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_hasSegments)  {  return  sb.toString();  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  return  sb.toString();  }	  return    sb.toString();    	non-compiled	[CE]  ';'  expected	1	None	replace
19	[BUG]  [BUGGY]  return  sb.toString()  +  1;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return  sb.toString()  +  1;  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sb.toString()  +  1;	  return    sb.toString();    	non-compiled	[CE]  ';'  expected	1	None	replace
20	[BUG]  [BUGGY]  return  _resultArray;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return  _resultArray;  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _resultArray;	  return    sb;    	non-compiled	[CE]  ';'  expected	6	None	replace
21	[BUG]  [BUGGY]  return  _segments;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return  _segments;  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _segments;	  return    sb;    	non-compiled	[CE]  ';'  expected	6	None	replace
22	[BUG]  [BUGGY]  return(_resultString  ==  null)?  null  :  _resultString.trim();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return(_resultString  ==  null)?  null  :  _resultString.trim();  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString  ==  null)?  null  :  _resultString.trim();	  return(_resultString    ==    null)?    null    :    _resultString;    	non-compiled	[CE]  ';'  expected	3	None	replace
23	[BUG]  [BUGGY]  return  sb.toString()  +  _resultString;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return  sb.toString()  +  _resultString;  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  sb.toString()  +  _resultString;	  return    sb.toString();    	non-compiled	[CE]  ';'  expected	1	None	replace
24	[BUG]  [BUGGY]  return  _resultArray.toString();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return  _resultArray.toString();  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return  _resultArray.toString();	  return    sb.toString();    	non-compiled	[CE]  ';'  expected	1	None	replace
25	[BUG]  [BUGGY]  _resultString  =  null;  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  _resultString  =  null;  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  null;	  if(_resultString!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
26	[BUG]  [BUGGY]  return(sb  ==  null)?  null  :  sb.toString();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return(sb  ==  null)?  null  :  sb.toString();  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(sb  ==  null)?  null  :  sb.toString();	  return    sb;    	non-compiled	[CE]  ';'  expected	6	None	replace
27	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  resultArray;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  return  resultArray;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  resultArray;  }	  if(_resultArray!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
28	[BUG]  [BUGGY]  if(_resultArray  ==  null)  {  return  _resultString;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultArray  ==  null)  {  return  _resultString;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray  ==  null)  {  return  _resultString;  }	  if(_resultArray!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
29	[BUG]  [BUGGY]  _resultString  =  _resultArray.toString();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  _resultString  =  _resultArray.toString();  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	_resultString  =  _resultArray.toString();	  if(_resultArray!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
30	[BUG]  [BUGGY]  return(_resultString  ==  null)?  null  :  _resultArray.toString();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return(_resultString  ==  null)?  null  :  _resultArray.toString();  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(_resultString  ==  null)?  null  :  _resultArray.toString();	  return(_resultString    ==    null)?    null    :    _resultString;    	non-compiled	[CE]  ';'  expected	3	None	replace
31	[BUG]  [BUGGY]  if(_hasSegments)  {  if(_resultArray!=  null)  {  _resultArray  =  new  ArrayList  <  String>();  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_hasSegments)  {  if(_resultArray!=  null)  {  _resultArray  =  new  ArrayList  <  String>();  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_hasSegments)  {  if(_resultArray!=  null)  {  _resultArray  =  new  ArrayList  <  String>();  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
32	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultArray!=    null)    {    return    _resultString;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	9	None	replace
33	[BUG]  [BUGGY]  if(_resultString!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultArray!=    null)    {    return    _resultString;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	9	None	replace
34	[BUG]  [BUGGY]  sb.append(_currentSegment,  0,  _currentSize);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  sb.append(_currentSegment,  0,  _currentSize);  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_currentSegment,  0,  _currentSize);	      	non-compiled	[CE]  ';'  expected	5	None	replace
35	[BUG]  [BUGGY]  sb.append(_resultArray);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  sb.append(_resultArray);  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_resultArray);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  sb.append(_currentSegment);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  sb.append(_currentSegment);  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	sb.append(_currentSegment);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  if(sb!=  null)  {  return  sb.toString();  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(sb!=  null)  {  return  sb.toString();  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(sb!=  null)  {  return  sb.toString();  }	  return    sb.toString();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  if(_resultArray!=  null)  {  return  _resultString.toString();  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultArray!=  null)  {  return  _resultString.toString();  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray!=  null)  {  return  _resultString.toString();  }	  return    _resultString.toString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  _resultArray.toString();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  return  _resultArray.toString();  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  _resultArray.toString();  }	  if(_resultString!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  _resultArray;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  return  _resultArray;  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  _resultArray;  }	  if(_resultString!=    null)    {    return    _resultString;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  if(_resultArray  ==  null)  {  return  _resultString;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultArray  ==  null)  {  return  _resultString;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultArray  ==  null)  {  return  _resultString;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultArray!=    null)    {    return    _resultString;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  if(_resultString!=  null)  {  return  _resultArray;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  if(_resultString!=  null)  {  return  _resultArray;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	if(_resultString!=  null)  {  return  _resultArray;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(_resultArray!=    null)    {    return    _resultString;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  return(sb!=  null)?  null  :  sb.toString();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return(sb!=  null)?  null  :  sb.toString();  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(sb!=  null)?  null  :  sb.toString();	  return    sb;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  return(sb!=  null)?  sb  :  sb.toString();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    sb.append(curr,  0,  curr.length);  }  }  sb.append(_currentSegment,  0,  _currentSize);  _resultString  =  sb.toString();  }  }  }  }    [BUGGY]  return(sb!=  null)?  sb  :  sb.toString();  [BUGGY]    }  [CLASS]  TextBuffer  [METHOD]  contentsAsString  [RETURN_TYPE]  String  [VARIABLES]  boolean  _hasSegments  StringBuilder  sb  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  currLen  i  len  needed  segLen  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  curr  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.35355339059327373	366	366	1	replace	return(sb!=  null)?  sb  :  sb.toString();	  return    sb;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
