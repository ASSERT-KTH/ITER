bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _inputStart  =  MAX_SEGMENT_LEN;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  _inputStart  =  MAX_SEGMENT_LEN;  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_inputStart  =  MAX_SEGMENT_LEN;	  _inputStart    =    0;    	non-compiled	[CE]  ';'  expected	1	None	replace
2	[BUG]  [BUGGY]  _resultArray  =  null;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  _resultArray  =  null;  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultArray  =  null;	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  _inputStart  =  value.length();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  _inputStart  =  value.length();  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_inputStart  =  value.length();	      	non-compiled	[CE]  ';'  expected	3	None	replace
4	[BUG]  [BUGGY]  _resultString  =  value.substring(0,  value.length()  -  1);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  _resultString  =  value.substring(0,  value.length()  -  1);  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultString  =  value.substring(0,  value.length()  -  1);	      	non-compiled	[CE]  ';'  expected	3	None	replace
5	[BUG]  [BUGGY]  _resultString  =  value.toCharArray();  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  _resultString  =  value.toCharArray();  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultString  =  value.toCharArray();	      	non-compiled	[CE]  ';'  expected	3	None	replace
6	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }	  if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
7	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }	  if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
8	[BUG]  [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }	  if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  ';'  expected	5	None	replace
9	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }	  if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  ';'  expected	5	None	replace
10	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  _inputStart  =  0;  }	  _inputStart    =    0;    	non-compiled	[CE]  ';'  expected	1	None	replace
11	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }	  _inputStart    =    0;    	non-compiled	[CE]  ';'  expected	1	None	replace
12	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputBuffer.resetWithString(value);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputBuffer.resetWithString(value);  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputBuffer.resetWithString(value);  }	  _inputStart    =    0;    	non-compiled	[CE]  ';'  expected	1	None	replace
13	[BUG]  [BUGGY]  _resultString  =  value;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  _resultString  =  value;  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultString  =  value;	      	non-compiled	[CE]  ';'  expected	3	None	replace
14	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }	  if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
15	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }	  if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
16	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  0;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  0;  }	  _inputStart    =    0;    	non-compiled	[CE]  ';'  expected	1	None	replace
17	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _segmentSize  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _segmentSize  =  0;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _segmentSize  =  0;  }	  _inputStart    =    0;    	non-compiled	[CE]  ';'  expected	1	None	replace
18	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( " ")))  {  _inputStart  =  -1;  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( " ")))  {  _inputStart  =  -1;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.equals( " ")))  {  _inputStart  =  -1;  }	  if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    	non-compiled	[CE]  	4	None	replace
19	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }	  if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    	non-compiled	[CE]  	4	None	replace
20	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputLen  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputLen  =  0;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputLen  =  0;  }	      	non-compiled	[CE]  ';'  expected	3	None	replace
21	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  clearSegments();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  clearSegments();  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  clearSegments();  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  void  resetWithString(String  value)  {  _inputBuffer  =  null;    [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  return;  }  [BUGGY]    _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  return;  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
