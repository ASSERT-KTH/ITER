bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _inputStart  =  value.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _inputStart  =  value.length()  +  1;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_inputStart  =  value.length()  +  1;	  _inputStart    =    value.length();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  _inputStart  =  value.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _inputStart  =  value.length()  -  1;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_inputStart  =  value.length()  -  1;	  _inputStart    =    value.length();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  _resultString  =  value.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _resultString  =  value.toLowerCase();  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultString  =  value.toLowerCase();	  _resultString    =    value;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  _resultString  =  value.trim();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _resultString  =  value.trim();  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultString  =  value.trim();	  _resultString    =    value;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
7	[BUG]  [BUGGY]  ||(value!=  null  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value!=  null  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value!=  null  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    'n'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
8	[BUG]  [BUGGY]  ||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    'n'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
9	[BUG]  [BUGGY]  ||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    'n'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
10	[BUG]  [BUGGY]  ||(value!=  null  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value!=  null  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value!=  null  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    ':'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
11	[BUG]  [BUGGY]  ||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    ':'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
12	[BUG]  [BUGGY]  ||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    ':'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
13	[BUG]  [BUGGY]  _resultArray  =  value;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _resultArray  =  value;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultArray  =  value;	  _resultArray    =    null;    	non-compiled	[CE]  ';'  expected	2	None	replace
14	[BUG]  [BUGGY]  _resultArray  =  resultArray;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _resultArray  =  resultArray;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultArray  =  resultArray;	  _resultArray    =    null;    	non-compiled	[CE]  ';'  expected	2	None	replace
15	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value!=  null  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value!=  null  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.equals(   "-   ")))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  	19	None	replace
16	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equals( "-- ")))  {  _inputStart  =  -1;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value!=  null  &&  value.equals( "-- ")))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value!=  null  &&  value.equals( "-- ")))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.equals(   "-   ")))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  	19	None	replace
17	[BUG]  [BUGGY]  ||(value!=  0  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value!=  0  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value!=  0  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.equals(   "-   ")))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  	19	None	replace
18	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart!=  0)  {  clearSegments();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart!=  0)  {  clearSegments();  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart!=  0)  {  clearSegments();  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    clearSegments();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
19	[BUG]  [BUGGY]  _inputLen  =  0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _inputLen  =  0;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_inputLen  =  0;	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  _inputStart  =  MAX_SEGMENT_LEN  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _inputStart  =  MAX_SEGMENT_LEN  +  1;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_inputStart  =  MAX_SEGMENT_LEN  +  1;	  _inputStart    =    MAX_SEGMENT_LEN;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  _inputStart  =  MIN_SEGMENT_LEN;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _inputStart  =  MIN_SEGMENT_LEN;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_inputStart  =  MIN_SEGMENT_LEN;	  _inputStart    =    MAX_SEGMENT_LEN;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  _segmentSize  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _segmentSize  =  0;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_segmentSize  =  0;	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _segmentSize    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputBuffer.resetWithString(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputBuffer.resetWithString(value);  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputBuffer.resetWithString(value);  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputBuffer.resetWithString(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputBuffer.resetWithString(value);  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputBuffer.resetWithString(value);  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  ||(value!=  null  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value!=  null  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value!=  null  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    ';'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
26	[BUG]  [BUGGY]  ||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    ';'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
27	[BUG]  [BUGGY]  ||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    ';'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
28	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart!=  0)  {  _inputLen  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart!=  0)  {  _inputLen  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart!=  0)  {  _inputLen  =  0;  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    _inputLen    =    0;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
29	[BUG]  [BUGGY]  if(_inputLen  >  0)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentS  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputLen  >  0)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentS  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputLen  >  0)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentS	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _currentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
30	[BUG]  [BUGGY]  if(_inputLen  >  0)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputLen  >  0)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputLen  >  0)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _currentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
31	[BUG]  [BUGGY]  if(_inputLen  >  0)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputLen  >  0)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputLen  >  0)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _currentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
32	[BUG]  [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  return;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  return;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  if(_inputStart  >=  0)  {  return;  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    return;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
33	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  if(value  ==  null)  {  return;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputStart  >=  0)  {  if(value  ==  null)  {  return;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  if(value  ==  null)  {  return;  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    return;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
34	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart!=  0)  {  return;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart!=  0)  {  return;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart!=  0)  {  return;  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    return;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
35	[BUG]  [BUGGY]  _resultString  =  value.substring(0,  value.length());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _resultString  =  value.substring(0,  value.length());  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultString  =  value.substring(0,  value.length());	  _resultString    =    value.substring(0,    value.length()    -    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
36	[BUG]  [BUGGY]  if(value.length()  ==  0)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value.length()  ==  0)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value.length()  ==  0)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }	  _resultString    =    value.substring(0,    value.length()    -    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
37	[BUG]  [BUGGY]  if(value.length()  ==  0)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  else  {  _resultArray  =  null;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value.length()  ==  0)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  else  {  _resultArray  =  null;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value.length()  ==  0)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  else  {  _resultArray  =  null;  }	  _resultString    =    value.substring(0,    value.length()    -    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
38	[BUG]  [BUGGY]  ||(value!=  null  &&  value.equals( "   ")))  {  _inputStart  =  -1;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value!=  null  &&  value.equals( "   ")))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value!=  null  &&  value.equals( "   ")))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.equals(   "   ")))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  	18	None	replace
39	[BUG]  [BUGGY]  ||(value!=  0  &&  value.equals( "   ")))  {  _inputStart  =  -1;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value!=  0  &&  value.equals( "   ")))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value!=  0  &&  value.equals( "   ")))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.equals(   "   ")))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  	18	None	replace
40	[BUG]  [BUGGY]  ||(value  ==  null  &&  value.equals( "   ")))  {  _inputStart  =  -1;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value  ==  null  &&  value.equals( "   ")))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value  ==  null  &&  value.equals( "   ")))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.equals(   "   ")))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  	18	None	replace
41	[BUG]  [BUGGY]  if(value!=  null)  {  _resultString  =  value.toCharArray();  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  _resultString  =  value.toCharArray();  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  _resultString  =  value.toCharArray();  }	  _resultString    =    value.toCharArray();    	non-compiled	[CE]  not  a  statement	5	None	replace
42	[BUG]  [BUGGY]  ||(value!=  null  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value!=  null  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value!=  null  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    '/'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
43	[BUG]  [BUGGY]  ||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value.length()!=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    '/'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  ||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    '/'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    _inputEnd    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    _inputEnd    =    0;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
47	[BUG]  [BUGGY]  if(value!=  null)  {  if(_inputStart  ==  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  if(_inputStart  ==  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  if(_inputStart  ==  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }	  if(value!=    null)    {    if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
48	[BUG]  [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  -1;  }	  if(value!=    null)    {    if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
49	[BUG]  [BUGGY]  if(_inputStart  ==  0)  {  _inputStart  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputStart  ==  0)  {  _inputStart  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  ==  0)  {  _inputStart  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
50	[BUG]  [BUGGY]  _resultString  =  value  +  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _resultString  =  value  +  1;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultString  =  value  +  1;	  _resultString    =    value;    	non-compiled	[CE]  ';'  expected	13	None	replace
51	[BUG]  [BUGGY]  if(value!=  null)  {  _resultString  =  value;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  _resultString  =  value;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  _resultString  =  value;  }	  _resultString    =    value;    	non-compiled	[CE]  ';'  expected	13	None	replace
52	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >  0)  {  _inputLen  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart  >  0)  {  _inputLen  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >  0)  {  _inputLen  =  0;  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    _inputLen    =    0;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
53	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart!=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart!=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart!=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }	  if(value!=    null)    {    if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
54	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputLen  >=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputLen  >=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputLen  >=  0)  {  _inputStart  =  -1;  }  else  {  _inputBuffer.resetWithString(value);  }	  if(value!=    null)    {    if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
55	[BUG]  [BUGGY]  ||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  ':'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    ':'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
56	[BUG]  [BUGGY]  ||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  'n'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    'n'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
57	[BUG]  [BUGGY]  if(value!=  null)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }	  _resultString    =    value.substring(0,    value.length()    -    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
58	[BUG]  [BUGGY]  _resultArray  =  resultString;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _resultArray  =  resultString;  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultArray  =  resultString;	  _resultArray    =    null;    	non-compiled	[CE]  ';'  expected	2	None	replace
59	[BUG]  [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    _inputEnd    =    0;    }    	non-compiled	[CE]  ';'  expected	11	None	replace
60	[BUG]  [BUGGY]  ||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value.length()  >=  0  &&  value.charAt(value.length()  -  1)!=  '/'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    '/'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
61	[BUG]  [BUGGY]  ||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value  ==  null  &&  value.charAt(value.length()  -  1)!=  ';'))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.charAt(value.length()    -    1)!=    ';'))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
62	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _currentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
63	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _currentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
64	[BUG]  [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentS  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentS  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentS	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _currentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
65	[BUG]  [BUGGY]  if(value!=  null)  {  _inputStart  =  value.length();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  _inputStart  =  value.length();  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  _inputStart  =  value.length();  }	  _inputStart    =    value.length();    	non-compiled	[CE]  ';'  expected	3	None	replace
66	[BUG]  [BUGGY]  if(_segmentSize  ==  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _segmentSize  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_segmentSize  ==  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _segmentSize  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_segmentSize  ==  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _segmentSize  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _segmentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
67	[BUG]  [BUGGY]  _segmentSize  =  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _segmentSize  =  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_segmentSize  =  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _segmentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
68	[BUG]  [BUGGY]  if(_segmentSize  ==  MAX_SEGMENT_LEN)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_segmentSize  ==  MAX_SEGMENT_LEN)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_segmentSize  ==  MAX_SEGMENT_LEN)  {  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _segmentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
69	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( " ")))  {  _inputStart  =  0;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( " ")))  {  _inputStart  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.equals( " ")))  {  _inputStart  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    	non-compiled	[CE]  	10	None	replace
70	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( "- ")))  {  _inputStart  =  0;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( "- ")))  {  _inputStart  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.equals( "- ")))  {  _inputStart  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    	non-compiled	[CE]  	10	None	replace
71	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.length()  >  0))  {  _inputStart  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(_inputStart  >=  0  &&  value.length()  >  0))  {  _inputStart  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.length()  >  0))  {  _inputStart  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
72	[BUG]  [BUGGY]  _inputLen  =  value.length();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _inputLen  =  value.length();  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_inputLen  =  value.length();	  if(value!=    null)    {    if(_inputStart    >=    0)    {    _inputStart    =    -1;    }    else    {    _inputBuffer.resetWithString(value);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
73	[BUG]  [BUGGY]  if(value  ==  null)  {  _inputStart  =  MAX_SEGMENT_LEN;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  _inputStart  =  MAX_SEGMENT_LEN;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  _inputStart  =  MAX_SEGMENT_LEN;  }	  _inputStart    =    MAX_SEGMENT_LEN;    	non-compiled	[CE]  ';'  expected	1	None	replace
74	[BUG]  [BUGGY]  if(value  ==  null)  {  _inputStart  =  MAX_SEGMENT_LEN;  }  else  {  _inputBuffer.resetWithString(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null)  {  _inputStart  =  MAX_SEGMENT_LEN;  }  else  {  _inputBuffer.resetWithString(value);  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null)  {  _inputStart  =  MAX_SEGMENT_LEN;  }  else  {  _inputBuffer.resetWithString(value);  }	  _inputStart    =    MAX_SEGMENT_LEN;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  if(value!=  null)  {  _resultString  =  value.toCharArray();  }  else  {  _resultArray  =  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value!=  null)  {  _resultString  =  value.toCharArray();  }  else  {  _resultArray  =  null;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value!=  null)  {  _resultString  =  value.toCharArray();  }  else  {  _resultArray  =  null;  }	  _resultString    =    value.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  _inputLen  =  0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputStart  >=  0)  {  _inputLen  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  _inputLen  =  0;  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    _inputLen    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
77	[BUG]  [BUGGY]  _segmentSize  =  Math.min(_segmentSize,  value.length());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _segmentSize  =  Math.min(_segmentSize,  value.length());  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_segmentSize  =  Math.min(_segmentSize,  value.length());	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _segmentSize    =    0;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
78	[BUG]  [BUGGY]  if(value.length()  ==  0)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  else  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value.length()  ==  0)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  else  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value.length()  ==  0)  {  _resultString  =  value.substring(0,  value.length()  -  1);  }  else  {  _resultString  =  value.substring(0,  value.length()  -  1);  }	  _resultString    =    value.substring(0,    value.length()    -    1);    	non-compiled	[CE]  ';'  expected	4	None	replace
79	[BUG]  [BUGGY]  if(_inputStart  ==  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputStart  ==  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  ==  0)  {  _inputStart  =  0;  }  else  {  _inputEnd  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    _inputEnd    =    0;    }    	non-compiled	[CE]  ';'  expected	11	None	replace
80	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  return;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputStart  >=  0)  {  return;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  return;  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    return;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
81	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  <  0)  {  return;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(value  ==  null  ||  value.length()  <  0)  {  return;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(value  ==  null  ||  value.length()  <  0)  {  return;  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    return;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
82	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  clearSegments();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputStart  >=  0)  {  clearSegments();  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  clearSegments();  }	  if(value    ==    null)    {    if(_inputStart    >=    0)    {    clearSegments();    }    	non-compiled	[CE]  ';'  expected	21	None	replace
83	[BUG]  [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( "n ")))  {  _inputStart  =  -1;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(_inputStart  >=  0  &&  value.equals( "n ")))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(_inputStart  >=  0  &&  value.equals( "n ")))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.equals(   "   ")))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
84	[BUG]  [BUGGY]  _resultArray  =  new  ArrayList  <  String>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  _resultArray  =  new  ArrayList  <  String>();  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	_resultArray  =  new  ArrayList  <  String>();	  _resultArray    =    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
85	[BUG]  [BUGGY]  ||(value  ==  null  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value  ==  null  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value  ==  null  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.equals(   "-   ")))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
86	[BUG]  [BUGGY]  ||(value  >=  null  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  ||(value  >=  null  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	||(value  >=  null  &&  value.equals( "- ")))  {  _inputStart  =  -1;  }	  ||(_inputStart    >=    0    &&    value.equals(   "-   ")))    {    _inputStart    =    -1;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
87	[BUG]  [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _currentSize);  _currentSize  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _currentSize);  _currentSize  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  0)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _currentSize);  _currentSize  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _currentSize    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
88	[BUG]  [BUGGY]  if(_inputStart  >=  1)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  resetWithString(String  value)  {  _inputBuffer  =  null;      [BUGGY]  if(_inputStart  >=  1)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  0;  }  [BUGGY]      _inputLen  =  0;  _resultString  =  value;  _resultArray  =  null;  if  (_hasSegments)  {  clearSegments();  }  _currentSize  =  0;  [CLASS]  TextBuffer  [METHOD]  resetWithString  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  _hasSegments  BufferRecycler  _allocator  allocator  ArrayList  _segments  String  _resultString  value  int  MAX_SEGMENT_LEN  MIN_SEGMENT_LEN  _currentSize  _inputLen  _inputStart  _segmentSize  len  start  char[]  NO_CHARS  _currentSegment  _inputBuffer  _resultArray  buf  	projects/JacksonCore1/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java	0.7071067811865475	216	216	1	replace	if(_inputStart  >=  1)  {  _inputStart  =  0;  }  else  {  System.arraycopy(value,  0,  _inputBuffer,  _inputStart,  _inputLen);  _currentSize  =  0;  }	  if(_inputStart    >=    0)    {    _inputStart    =    0;    }    else    {    System.arraycopy(value,    0,    _inputBuffer,    _inputStart,    _inputLen);    _currentSize    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
