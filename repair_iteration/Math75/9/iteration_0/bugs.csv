bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
17	[BUG] [BUGGY] return getSumFreq();// v is comparable, but greater than the last value } [FE] AssertionFailedError [CONTEXT] } } catch (ClassCastException ex) { return result; // v is not comparable } if (c.compare(v, freqTable.firstKey()) < 0) { return 0;// v is comparable, but less than first value } if (c.compare(v, freqTable.lastKey()) >= 0) { [BUGGY] return getSumFreq();// v is comparable, but greater than the last value  } [BUGGY] } Iterator<Comparable<?>> values = valuesIterator(); while (values.hasNext()) { Comparable<?> nextValue = values.next(); if (c.compare(v, nextValue) > 0) { result += getCount(nextValue); } else { return result; } [CLASS] Frequency NaturalComparator [METHOD] getCumFreq [RETURN_TYPE] long  Comparable<?> v [VARIABLES] Comparable nextValue v boolean ClassCastException ex Long value Iterator values TreeMap freqTable long result serialVersionUID sumFreq v Comparator c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	408	409	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } } catch (ClassCastException ex) { return result; // v is not comparable } if (c.compare(v, freqTable.firstKey()) < 0) { return 0;// v is comparable, but less than first value } if (c.compare(v, freqTable.lastKey()) >= 0) { [BUGGY] [BUGGY] return getSumFreq();// v is comparable, but greater than the last value  } } Iterator<Comparable<?>> values = valuesIterator(); while (values.hasNext()) { Comparable<?> nextValue = values.next(); if (c.compare(v, nextValue) > 0) { result += getCount(nextValue); } else { return result; } [CLASS] Frequency NaturalComparator [METHOD] getCumFreq [RETURN_TYPE] long  Comparable<?> v [VARIABLES] Comparable nextValue v boolean ClassCastException ex Long value Iterator values TreeMap freqTable long result serialVersionUID sumFreq v Comparator c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	408	409	1	add	
