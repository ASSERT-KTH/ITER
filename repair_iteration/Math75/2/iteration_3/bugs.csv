bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.getPct(v  +  1);  [CE]  cannot  find  symbol  sumFreq  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreq  =  freqTable.getPct(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreq  =  freqTable.getPct(v  +  1);	  this.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	13	None	replace
2	[BUG]  [BUGGY]  This.sumFreqTable  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  This  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreqTable  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreqTable  =  freqTable.get(v  -  1);	  This.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	61	None	replace
3	[BUG]  [BUGGY]  This.sumFreqTable  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  This  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreqTable  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreqTable  =  freqTable.get(v  +  1);	  This.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	61	None	replace
4	[BUG]  [BUGGY]  This.sumFreqTable  =  this.sumFreqTable.get(v);  [CE]  cannot  find  symbol  This  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreqTable  =  this.sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreqTable  =  this.sumFreqTable.get(v);	  This.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	61	None	replace
5	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
6	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
7	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
8	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
9	[BUG]  [BUGGY]  return  getPct(v  /  long.valueOf(v));  [CE]  class  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  /  long.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v  /  long.valueOf(v));	  return    getPct(v    -    long.valueOf(v));    	non-compiled	[CE]  class  expected	69	None	replace
10	[BUG]  [BUGGY]  return  getPct(v  *  long.valueOf(v));  [CE]  class  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  *  long.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v  *  long.valueOf(v));	  return    getPct(v    -    long.valueOf(v));    	non-compiled	[CE]  class  expected	69	None	replace
11	[BUG]  [BUGGY]  return  getPct(v  -  freqTable.valueOf(v));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  -  freqTable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v  -  freqTable.valueOf(v));	  return    getPct(v    -    long.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
12	[BUG]  [BUGGY]  long  v  =  this.freqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  this.freqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  this.freqTable.size();	  int    v    =    this.freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	66	None	replace
13	[BUG]  [BUGGY]  double  v  =  this.freqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  this.freqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  this.freqTable.size();	  int    v    =    this.freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	66	None	replace
14	[BUG]  [BUGGY]  int  v  =  this.freqTable.size()  -  1;  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  int  v  =  this.freqTable.size()  -  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	int  v  =  this.freqTable.size()  -  1;	  int    v    =    this.freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	66	None	replace
15	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    Long(v));    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  getPct(new  Long(v));  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	getPct(new  Long(v));	  return    getPct(new    Long(v));    getPct(new    Long(v));    	non-compiled	[CE]  missing  return  statement	8	None	replace
17	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(new  Long(v));  }	  return    getPct(new    Long(v));    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  getPct(v),  sumFreq);	  this.serialVersionUID.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	49	None	replace
19	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  sumFreqTable.getPct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  sumFreqTable.getPct(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  sumFreqTable.getPct(v));	  this.serialVersionUID.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	49	None	replace
20	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  v);  [CE]  long  cannot  be  dereferenced  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  getPct(v),  v);	  this.serialVersionUID.put(v,    getPct(v));    	non-compiled	[CE]  long  cannot  be  dereferenced	49	None	replace
21	[BUG]  [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  Long.MAX_VALUE,  sumFreq);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	71	None	replace
22	[BUG]  [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  v);  [CE]  no  suitable  method  found  for  getPct(long,long,long)  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  Long.MAX_VALUE,  v);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(long,long,long)	71	None	replace
23	[BUG]  [BUGGY]  return  getPct(v,  Double.MIN_VALUE,  Long.MAX_VALUE);  [CE]  no  suitable  method  found  for  getPct(long,double,long)  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  Double.MIN_VALUE,  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  Double.MIN_VALUE,  Long.MAX_VALUE);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(long,double,long)	71	None	replace
24	[BUG]  [BUGGY]  return  getPct(v,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getPct(long,int)  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  Integer.MAX_VALUE);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(long,int)	71	None	replace
25	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  This  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreq  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreq  =  freqTable.get(v  -  1);	  This.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	63	None	replace
26	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  This  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreq  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreq  =  freqTable.get(v  +  1);	  This.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	63	None	replace
27	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.get(v)-  1;  [CE]  cannot  find  symbol  This  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreq  =  freqTable.get(v)-  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreq  =  freqTable.get(v)-  1;	  This.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	63	None	replace
28	[BUG]  [BUGGY]  null  result  =  getPct(Number.MAX_VALUE);  [CE]  not  a  statement  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  null  result  =  getPct(Number.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	null  result  =  getPct(Number.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	44	None	replace
29	[BUG]  [BUGGY]  null  result  =  getPct(Long.MAX_VALUE);  [CE]  not  a  statement  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  null  result  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	null  result  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	44	None	replace
30	[BUG]  [BUGGY]  result  =  getPct(Long.MAX_VALUE);  [CE]  cannot  find  symbol  result  [FE]                StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  result  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	result  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  result	44	None	replace
31	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	return  getPct(new  Long(v)/  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	65	1	replace
32	[BUG]  [BUGGY]  return  getPct(new  Long(v)/  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v)/  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	65	1	replace
33	[BUG]  [BUGGY]  return  getPct(new  long(v)/  1);  [CE]  '['  expected  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  long(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  long(v)/  1);	  return    getPct(new    Long(v)+    1);    	non-compiled	[CE]  '['  expected	65	None	replace
34	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)/  2  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	return  getPct(new  Long(v)/  2  +  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	65	1	replace
35	[BUG]  [BUGGY]  return  getPct(new  Long(v)/  2  +  1);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)/  2  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v)/  2  +  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	65	1	replace
36	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  0);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  sumFreq,  0);	  return    getPct(Long.parseLong(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	38	None	replace
37	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  sumFreq);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  freqTable,  sumFreq);	  return    getPct(Long.parseLong(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	38	None	replace
38	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  freq);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  freq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  freq);	  return    getPct(Long.parseLong(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	38	None	replace
39	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  sumFreq,  freqTable);	  return    getPct(Long.parseLong(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	38	None	replace
40	[BUG]  [BUGGY]  return  getPct(new  Double(v),  0);  [CE]  no  suitable  method  found  for  getPct(Double,int)  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v),  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Double(v),  0);	  return    getPct(new    Double(v));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Double,int)	31	None	replace
41	[BUG]  [BUGGY]  return  getPct(new  Double(v),  0.0);  [CE]  no  suitable  method  found  for  getPct(Double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v),  0.0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Double(v),  0.0);	  return    getPct(new    Double(v));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Double,double)	31	None	replace
42	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  sumFreq,  v);	  return    getPct(Long.parseLong(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	72	None	replace
43	[BUG]  [BUGGY]  return  getPct(long.parseLong(v),  sumFreq,  v);  [CE]  class  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(long.parseLong(v),  sumFreq,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(long.parseLong(v),  sumFreq,  v);	  return    getPct(Long.parseLong(v),    v);    	non-compiled	[CE]  class  expected	72	None	replace
44	[BUG]  [BUGGY]  return  getPct(Util.parseLong(v),  v);  [CE]  cannot  find  symbol  Util  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Util.parseLong(v),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Util.parseLong(v),  v);	  return    getPct(Long.parseLong(v),    v);    	non-compiled	[CE]  cannot  find  symbol  Util	72	None	replace
45	[BUG]  [BUGGY]  long  v  =  freqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  freqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  freqTable.doubleValue();	  int    v    =    freqTable.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	37	None	replace
46	[BUG]  [BUGGY]  double  v  =  freqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  freqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  freqTable.doubleValue();	  int    v    =    freqTable.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	37	None	replace
47	[BUG]  [BUGGY]  int  v  =  sumFreqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  int  v  =  sumFreqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	int  v  =  sumFreqTable.doubleValue();	  int    v    =    freqTable.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	37	None	replace
48	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  null,  v);  [CE]  no  suitable  method  found  for  getPct()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  null,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  null,  v);	  this.sumFreqTable.put(v,    getPct(),    null);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	74	None	replace
49	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  freqTable,  null);  [CE]  no  suitable  method  found  for  getPct()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  freqTable,  null);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  freqTable,  null);	  this.sumFreqTable.put(v,    getPct(),    null);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	74	None	replace
50	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  new  Double(v));  [CE]  no  suitable  method  found  for  getPct()  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  new  Double(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  new  Double(v));	  this.sumFreqTable.put(v,    getPct(),    null);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	74	None	replace
51	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  new  Long(v));  [CE]  no  suitable  method  found  for  getPct()  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  new  Long(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  new  Long(v));	  this.sumFreqTable.put(v,    getPct(),    null);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	74	None	replace
52	[BUG]  [BUGGY]  double  v  =  this.sumFreq.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  this.sumFreq.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  this.sumFreq.doubleValue();	  double    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	36	None	replace
53	[BUG]  [BUGGY]  double  v  =  sumFreq.doubleValue()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  sumFreq.doubleValue()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  sumFreq.doubleValue()  +  1;	  double    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	36	None	replace
54	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
55	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
56	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFre  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFre  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFre	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
57	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  sumFreqTable.put(v,  sumFreq	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
58	[BUG]  [BUGGY]  return  getPct(v  +  long.length());  [CE]  class  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  +  long.length());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v  +  long.length());	  return    getPct(v    +    long.valueOf(v));    	non-compiled	[CE]  class  expected	68	None	replace
59	[BUG]  [BUGGY]  return  getPct(v  +  long.doubleValue());  [CE]  class  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  +  long.doubleValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v  +  long.doubleValue());	  return    getPct(v    +    long.valueOf(v));    	non-compiled	[CE]  class  expected	68	None	replace
60	[BUG]  [BUGGY]  return  getPct(new  Double(v));  getPct(new  Double(v));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  getPct(new  Double(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    getPct(new  Double(v));	  	non-compiled	[CE]  unreachable  statement	30	None	add
61	[BUG]  [BUGGY]  return  getPct(new  Double(v));  return  getPct(new  Double(v));  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  return  getPct(new  Double(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    return  getPct(new  Double(v));	  	non-compiled	[CE]  unreachable  statement	30	None	add
62	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
63	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
64	[BUG]  [BUGGY]  return  getPct(new  Double(v));  this.sumFreqTable.put(v,  getPct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  this.sumFreqTable.put(v,  getPct(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    this.sumFreqTable.put(v,  getPct(v));	  	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	30	None	add
65	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
66	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
67	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  long(v));  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
68	[BUG]  [BUGGY]  this.serialVersionUID  =  sumFreqTable.get(v);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID  =  sumFreqTable.get(v);	  this.serialVersionUID    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	2	None	replace
69	[BUG]  [BUGGY]  this.serialVersionUID  =  freqTable.get(v  -  1);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID  =  freqTable.get(v  -  1);	  this.serialVersionUID    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	2	None	replace
70	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
71	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  return  getPct(long.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  return  getPct(long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  return  getPct(long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
72	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
73	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
74	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreq  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreq  =  freqTable.get(v  -  1);	  this.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	1	None	replace
75	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreq  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreq  =  freqTable.get(v  +  1);	  this.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	1	None	replace
76	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.get(v)+  1;  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreq  =  freqTable.get(v)+  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreq  =  freqTable.get(v)+  1;	  this.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	1	None	replace
77	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(new  Long(v));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(new  Long(v));	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  ')'  expected	11	None	replace
78	[BUG]  [BUGGY]  return  this.sumFreqTable.getPct(v);  [CE]  cannot  find  symbol  sumFreqTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  this.sumFreqTable.getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  this.sumFreqTable.getPct(v);	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	11	None	replace
79	[BUG]  [BUGGY]  this.freqTable  =  sumFreqTable.get(v);  [CE]  cannot  assign  a  value  to  final  variable  freqTable  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable  =  sumFreqTable.get(v);	  this.freqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  freqTable	33	None	replace
80	[BUG]  [BUGGY]  this.figTable  =  sumFreqTable.get(v);  [CE]  cannot  find  symbol  figTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.figTable  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.figTable  =  sumFreqTable.get(v);	  this.freqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  figTable	33	None	replace
81	[BUG]  [BUGGY]  this.maxFreq  =  sumFreqTable.getPct(v);  [CE]  cannot  find  symbol  maxFreq  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.maxFreq  =  sumFreqTable.getPct(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.maxFreq  =  sumFreqTable.getPct(v);	  this.maxFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	15	None	replace
82	[BUG]  [BUGGY]  this.maxFreq  =  maxFreqTable.getPct(v);  [CE]  cannot  find  symbol  maxFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.maxFreq  =  maxFreqTable.getPct(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.maxFreq  =  maxFreqTable.getPct(v);	  this.maxFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	15	None	replace
83	[BUG]  [BUGGY]  this.maxFreq  =  super.getPct(v);  [CE]  cannot  find  symbol  maxFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.maxFreq  =  super.getPct(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.maxFreq  =  super.getPct(v);	  this.maxFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	15	None	replace
84	[BUG]  [BUGGY]  return  getPct(v,  v.longValue());  [CE]  long  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  v.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  v.longValue());	  return    getPct(v.longValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	24	None	replace
85	[BUG]  [BUGGY]  return  getPct(v,  freqTable.longValue());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  freqTable.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  freqTable.longValue());	  return    getPct(v.longValue());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
86	[BUG]  [BUGGY]  return  getPct(v,  sumFreqTable.longValue());  [CE]  cannot  find  symbol  sumFreqTable  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  sumFreqTable.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  sumFreqTable.longValue());	  return    getPct(v.longValue());    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	24	None	replace
87	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.getPct(v  +  1);  [CE]  cannot  find  symbol  This  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreq  =  freqTable.getPct(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreq  =  freqTable.getPct(v  +  1);	  This.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	70	None	replace
88	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.getPct(v  -  1);  [CE]  cannot  find  symbol  This  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreq  =  freqTable.getPct(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreq  =  freqTable.getPct(v  -  1);	  This.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	70	None	replace
89	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  0);  [CE]  cannot  find  symbol  This  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreq  =  freqTable.getPct(v,  0);	  This.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	70	None	replace
90	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	return  getPct(v  -  1);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	51	1	replace
91	[BUG]  [BUGGY]  return  getPct(v  -  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v  -  1);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	51	1	replace
92	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	return  getPct(v  +  1);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	51	1	replace
93	[BUG]  [BUGGY]  return  getPct(v  +  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v  +  1);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	51	1	replace
94	[BUG]  [BUGGY]  return  getPct(v,  0);  [CE]  no  suitable  method  found  for  getPct(long,int)  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  0);	  return    getPct(v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(long,int)	51	None	replace
95	[BUG]  [BUGGY]  return  getPct(0,  v,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(0,  v,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(0,  v,  sumFreq);	  return    getPct(0,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	52	None	replace
96	[BUG]  [BUGGY]  return  getPct(0,  v,  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(0,  v,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(0,  v,  sumFreqTable);	  return    getPct(0,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	52	None	replace
97	[BUG]  [BUGGY]  return  getPct(0,  v,  this.sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(0,  v,  this.sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(0,  v,  this.sumFreqTable);	  return    getPct(0,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	52	None	replace
98	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)/  1);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v)/  1);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	80	None	replace
99	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  1,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  1,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v)+  1,  v);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	80	None	replace
100	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  1,  sumFreqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  1,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v)+  1,  sumFreqTable);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	80	None	replace
101	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  v  +  1);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  v  +  1);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	80	None	replace
102	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));  [CE]  cannot  find  symbol  sumFreqTable  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(Long.MAX_VALUE));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	43	None	replace
103	[BUG]  [BUGGY]  return  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));  [CE]  cannot  find  symbol  sumFreqTable  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(Long.MAX_VALUE));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	43	None	replace
104	[BUG]  [BUGGY]  return  this.sumFreqTable.get(v,  getPct(Long.MAX_VALUE));  [CE]  cannot  find  symbol  sumFreqTable  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  this.sumFreqTable.get(v,  getPct(Long.MAX_VALUE));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  this.sumFreqTable.get(v,  getPct(Long.MAX_VALUE));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(Long.MAX_VALUE));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	43	None	replace
105	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  freqTable.convertUTCToLocal(v));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  freqTable.convertUTCToLocal(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  freqTable.convertUTCToLocal(v));	  this.sumFreqTable.put(v,    freqTable.getPct(v));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
106	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  freqTable.data.getPct(v));  [CE]  cannot  find  symbol  data  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  freqTable.data.getPct(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  freqTable.data.getPct(v));	  this.sumFreqTable.put(v,    freqTable.getPct(v));    	non-compiled	[CE]  cannot  find  symbol  data	19	None	replace
107	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  freqTable.getPct(new  Long(v));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  freqTable.getPct(new  Long(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  freqTable.getPct(new  Long(v));	  this.sumFreqTable.put(v,    freqTable.getPct(v));    	non-compiled	[CE]  ')'  expected	19	None	replace
108	[BUG]  [BUGGY]  this.serialVersionUID  =  sumFreqTable.getPct(v);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID  =  sumFreqTable.getPct(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID  =  sumFreqTable.getPct(v);	  this.serialVersionUID    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	14	None	replace
109	[BUG]  [BUGGY]  This.serialVersionUID  =  sumFreqTable.getPct(v);  [CE]  cannot  find  symbol  This  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.serialVersionUID  =  sumFreqTable.getPct(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.serialVersionUID  =  sumFreqTable.getPct(v);	  this.serialVersionUID    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	14	None	replace
110	[BUG]  [BUGGY]  this.result  =  sumFreqTable.get(v);  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result  =  sumFreqTable.get(v);	  this.result    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  result	34	None	replace
111	[BUG]  [BUGGY]  this.result  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result  =  freqTable.get(v  -  1);	  this.result    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  result	34	None	replace
112	[BUG]  [BUGGY]  null  v  =  getPct(new  Long(v));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  null  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	null  v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    long    v    =    getPct(new    Long(v));    	non-compiled	[CE]  not  a  statement	12	None	replace
113	[BUG]  [BUGGY]  long  v  =  getPct(new  Long(v));  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    long    v    =    getPct(new    Long(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	12	None	replace
114	[BUG]  [BUGGY]  v  =  getPct(new  Long(v));  [CE]  possible  loss  of  precision  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    long    v    =    getPct(new    Long(v));    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
115	[BUG]  [BUGGY]  this.freqTable.put(v,  0);  [CE]  no  suitable  method  found  for  put(long,int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable.put(v,  0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable.put(v,  0);	  this.sumFreqTable.put(v,    0);    	non-compiled	[CE]  no  suitable  method  found  for  put(long,int)	7	None	replace
116	[BUG]  [BUGGY]  this.result.put(v,  0);  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result.put(v,  0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result.put(v,  0);	  this.sumFreqTable.put(v,    0);    	non-compiled	[CE]  cannot  find  symbol  result	7	None	replace
117	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  0);  [CE]  long  cannot  be  dereferenced  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  0);	  this.sumFreqTable.put(v,    0);    	non-compiled	[CE]  long  cannot  be  dereferenced	7	None	replace
118	[BUG]  [BUGGY]  double  v  =  freqTable.size()  -  1;  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  freqTable.size()  -  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  freqTable.size()  -  1;	  double    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	22	None	replace
119	[BUG]  [BUGGY]  double  v  =  freqTable.size()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  freqTable.size()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  freqTable.size()  +  1;	  double    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	22	None	replace
120	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
121	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  sumFreqTable.put(v,  new  Double(v));  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  sumFreqTable.put(v,  new  Double(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  sumFreqTable.put(v,  new  Double(v));  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
122	[BUG]  [BUGGY]  return  getPct(v,  long.parseLong(v));  [CE]  class  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  long.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  long.parseLong(v));	  return    getPct(v,    long.valueOf(v));    	non-compiled	[CE]  class  expected	25	None	replace
123	[BUG]  [BUGGY]  return  getPct(v,  0.0);  [CE]  no  suitable  method  found  for  getPct(long,double)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  0.0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  0.0);	  return    getPct(v,    long.valueOf(v));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(long,double)	25	None	replace
124	[BUG]  [BUGGY]  return  getPct(v,  long.length());  [CE]  class  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  long.length());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  long.length());	  return    getPct(v,    long.valueOf(v));    	non-compiled	[CE]  class  expected	25	None	replace
125	[BUG]  [BUGGY]  this.result.put(v,  getPct(v),  null);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result.put(v,  getPct(v),  null);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result.put(v,  getPct(v),  null);	  this.result.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  result	48	None	replace
126	[BUG]  [BUGGY]  this.result.put(v,  getPct(new  Long(v)));  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result.put(v,  getPct(new  Long(v)));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result.put(v,  getPct(new  Long(v)));	  this.result.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  result	48	None	replace
127	[BUG]  [BUGGY]  this.result.put(v,  getPct(v),  0);  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result.put(v,  getPct(v),  0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result.put(v,  getPct(v),  0);	  this.result.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  result	48	None	replace
128	[BUG]  [BUGGY]  this.result.put(v,  Long.valueOf(v));  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result.put(v,  Long.valueOf(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result.put(v,  Long.valueOf(v));	  this.result.put(v,    v);    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
129	[BUG]  [BUGGY]  this.result.put(v,  0.0);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result.put(v,  0.0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result.put(v,  0.0);	  this.result.put(v,    v);    	non-compiled	[CE]  cannot  find  symbol  result	6	None	replace
130	[BUG]  [BUGGY]  return  getPct(v,  v.doubleValue());  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  v.doubleValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  v.doubleValue());	  return    getPct(v.doubleValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	26	None	replace
131	[BUG]  [BUGGY]  return  getPct(v,  sumFreqTable.doubleValue());  [CE]  cannot  find  symbol  sumFreqTable  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  sumFreqTable.doubleValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  sumFreqTable.doubleValue());	  return    getPct(v.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	26	None	replace
132	[BUG]  [BUGGY]  return  getPct(v,  sumFreq.doubleValue());  [CE]  cannot  find  symbol  sumFreq  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  sumFreq.doubleValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  sumFreq.doubleValue());	  return    getPct(v.doubleValue());    	non-compiled	[CE]  cannot  find  symbol  sumFreq	26	None	replace
133	[BUG]  [BUGGY]  long  v  =  freq.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  freq.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  freq.doubleValue();	  int    v    =    freq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	60	None	replace
134	[BUG]  [BUGGY]  double  v  =  freq.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  freq.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  freq.doubleValue();	  int    v    =    freq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	60	None	replace
135	[BUG]  [BUGGY]  long  v  =  freqTable.size()  -  1;  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  freqTable.size()  -  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  freqTable.size()  -  1;	  long    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	21	None	replace
136	[BUG]  [BUGGY]  long  v  =  freqTable.size()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  freqTable.size()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  freqTable.size()  +  1;	  long    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	21	None	replace
137	[BUG]  [BUGGY]  null  result  =  getPct(Number.MAX_VALUE);  sumFreqTable.put(v,  result);  [CE]  not  a  statement  [FE]                StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  null  result  =  getPct(Number.MAX_VALUE);  sumFreqTable.put(v,  result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	null  result  =  getPct(Number.MAX_VALUE);  sumFreqTable.put(v,  result);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    sumFreqTable.put(v,    result);    	non-compiled	[CE]  not  a  statement	46	None	replace
138	[BUG]  [BUGGY]  null  result  =  getPct(Long.MAX_VALUE);  sumFreqTable.put(v,  result);  [CE]  not  a  statement  [FE]                  StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  null  result  =  getPct(Long.MAX_VALUE);  sumFreqTable.put(v,  result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	null  result  =  getPct(Long.MAX_VALUE);  sumFreqTable.put(v,  result);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    sumFreqTable.put(v,    result);    	non-compiled	[CE]  not  a  statement	46	None	replace
139	[BUG]  [BUGGY]  result  =  getPct(v);  sumFreqTable.put(v,  result);  [CE]  cannot  find  symbol  result  [FE]                    StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  result  =  getPct(v);  sumFreqTable.put(v,  result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	result  =  getPct(v);  sumFreqTable.put(v,  result);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    sumFreqTable.put(v,    result);    	non-compiled	[CE]  cannot  find  symbol  result	46	None	replace
140	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
141	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
142	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
143	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  sumFreqTable.size();  ++i)  {  sumFreqTable.clear();  }  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  sumFreqTable.size();  ++i)  {  sumFreqTable.clear();  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  sumFreqTable.size();  ++i)  {  sumFreqTable.clear();  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
144	[BUG]  [BUGGY]  this.successTable.put(v,  getPct(v));  [CE]  cannot  find  symbol  successTable  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.successTable.put(v,  getPct(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.successTable.put(v,  getPct(v));	  this.resultTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  successTable	59	None	replace
145	[BUG]  [BUGGY]  this.resultTable.put(v,  getPct(v),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.resultTable.put(v,  getPct(v),  sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.resultTable.put(v,  getPct(v),  sumFreq);	  this.resultTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	59	None	replace
146	[BUG]  [BUGGY]  this.maxFreq  =  sumFreqTable.get(v);  [CE]  cannot  find  symbol  maxFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.maxFreq  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.maxFreq  =  sumFreqTable.get(v);	  this.maxFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	3	None	replace
147	[BUG]  [BUGGY]  this.maxFreq  =  maxFreqTable.get(v);  [CE]  cannot  find  symbol  maxFreq  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.maxFreq  =  maxFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.maxFreq  =  maxFreqTable.get(v);	  this.maxFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	3	None	replace
148	[BUG]  [BUGGY]  this.maxFreq  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  maxFreq  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.maxFreq  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.maxFreq  =  freqTable.get(v  -  1);	  this.maxFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	3	None	replace
149	[BUG]  [BUGGY]  this.result  =  sumFreqTable.getPct(v);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result  =  sumFreqTable.getPct(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result  =  sumFreqTable.getPct(v);	  this.result    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
150	[BUG]  [BUGGY]  this.result  =  freqTable.getPct(v  +  1);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result  =  freqTable.getPct(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result  =  freqTable.getPct(v  +  1);	  this.result    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
151	[BUG]  [BUGGY]  return  getPct(new  Long(v),  sumFreq,  v);  [CE]  cannot  find  symbol  sumFreq  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  sumFreq,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  sumFreq,  v);	  return    getPct(new    Long(v),    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	79	None	replace
152	[BUG]  [BUGGY]  return  getPct(new  Long(v),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  sumFreq);	  return    getPct(new    Long(v),    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	79	None	replace
153	[BUG]  [BUGGY]  return  getPct(new  Long(v),  sumFreqTable,  v);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  sumFreqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  sumFreqTable,  v);	  return    getPct(new    Long(v),    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	79	None	replace
154	[BUG]  [BUGGY]  return  getPct(new  Long(v),  freqTable,  v);  [CE]  no  suitable  method  found  for  getPct(Long,TreeMap<Comparable<?>,Long>,long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  freqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  freqTable,  v);	  return    getPct(new    Long(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Long,TreeMap<Comparable<?>,Long>,long)	79	None	replace
155	[BUG]  [BUGGY]  this.freqTable.put(v,  sumFreqTable.getPct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable.put(v,  sumFreqTable.getPct(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable.put(v,  sumFreqTable.getPct(v));	  this.freqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	47	None	replace
156	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable.put(v,  getPct(v),  sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable.put(v,  getPct(v),  sumFreq);	  this.freqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	47	None	replace
157	[BUG]  [BUGGY]  this.freqTable.put(v,  sumFreqTable,  getPct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable.put(v,  sumFreqTable,  getPct(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable.put(v,  sumFreqTable,  getPct(v));	  this.freqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	47	None	replace
158	[BUG]  [BUGGY]  this.freqTable.put(v,  0.0);  [CE]  no  suitable  method  found  for  put(long,double)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable.put(v,  0.0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable.put(v,  0.0);	  this.sumFreqTable.put(v,    0.0);    	non-compiled	[CE]  no  suitable  method  found  for  put(long,double)	62	None	replace
159	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  0.0);  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  0.0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  0.0);	  this.sumFreqTable.put(v,    0.0);    	non-compiled	[CE]  long  cannot  be  dereferenced	62	None	replace
160	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  sumFreq);	  this.serialVersionUID.put(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	5	None	replace
161	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  null);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  null);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  null);	  this.serialVersionUID.put(v,    v);    	non-compiled	[CE]  long  cannot  be  dereferenced	5	None	replace
162	[BUG]  [BUGGY]  this.serializeFreqTable.put(v,  getSerialVersionUID(v));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serializeFreqTable.put(v,  getSerialVersionUID(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serializeFreqTable.put(v,  getSerialVersionUID(v));	  this.serializeFreqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
163	[BUG]  [BUGGY]  this.serializeTable.put(v,  getPct(v));  [CE]  cannot  find  symbol  serializeTable  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serializeTable.put(v,  getPct(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serializeTable.put(v,  getPct(v));	  this.serializeFreqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  serializeTable	76	None	replace
164	[BUG]  [BUGGY]  this.serializeFreqTable.put(v,  sumFreqTable.getPct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serializeFreqTable.put(v,  sumFreqTable.getPct(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serializeFreqTable.put(v,  sumFreqTable.getPct(v));	  this.serializeFreqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	76	None	replace
165	[BUG]  [BUGGY]  return  getPct(new  Integer(v),  sumFreq);  [CE]  no  suitable  constructor  found  for  Integer(long)  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Integer(v),  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Integer(v),  sumFreq);	  return    getPct(new    Integer(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(long)	28	None	replace
166	[BUG]  [BUGGY]  return  getPct(new  Integer(v),  0);  [CE]  no  suitable  constructor  found  for  Integer(long)  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Integer(v),  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Integer(v),  0);	  return    getPct(new    Integer(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(long)	28	None	replace
167	[BUG]  [BUGGY]  return  getPct(new  Integer(v),  sumFreqTable);  [CE]  no  suitable  constructor  found  for  Integer(long)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Integer(v),  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Integer(v),  sumFreqTable);	  return    getPct(new    Integer(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(long)	28	None	replace
168	[BUG]  [BUGGY]  return  getPct(new  Integer(v),  0.0);  [CE]  no  suitable  constructor  found  for  Integer(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Integer(v),  0.0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Integer(v),  0.0);	  return    getPct(new    Integer(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(long)	28	None	replace
169	[BUG]  [BUGGY]  return  getPct(v);  getPct(v);  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    getPct(v);	  	non-compiled	[CE]  unreachable  statement	50	None	add
170	[BUG]  [BUGGY]  return  getPct(v);  return  getPct(v);  [CE]  unreachable  statement  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  return  getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    return  getPct(v);	  	non-compiled	[CE]  unreachable  statement	50	None	add
171	[BUG]  [BUGGY]  return  getPct(v);  double  v  =  getPct(v);  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  double  v  =  getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    double  v  =  getPct(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	50	None	add
172	[BUG]  [BUGGY]  return  getPct(v);  this.sumFreqTable.put(v,  getPct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]          StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  this.sumFreqTable.put(v,  getPct(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    this.sumFreqTable.put(v,  getPct(v));	  	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	50	None	add
173	[BUG]  [BUGGY]  return  getPct(v);  this.sumFreqTable.put(v,  v);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  this.sumFreqTable.put(v,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    this.sumFreqTable.put(v,  v);	  	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	50	None	add
174	[BUG]  [BUGGY]  return  getPct(new  Long(v),  0,  v);  [CE]  no  suitable  method  found  for  getPct(Long,int,long)  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  0,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  0,  v);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Long,int,long)	29	None	replace
175	[BUG]  [BUGGY]  return  getPct(new  Long(v),  0,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  0,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  0,  sumFreq);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	29	None	replace
176	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getPct()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  Integer.MIN_VALUE,  Integer.MAX_VALUE);	  this.sumFreqTable.put(v,    getPct(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	73	None	replace
177	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Long.MAX_VALUE);  [CE]  no  suitable  method  found  for  getPct()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Long.MAX_VALUE);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  Long.MAX_VALUE);	  this.sumFreqTable.put(v,    getPct(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	73	None	replace
178	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MAX_VALUE,  v);  [CE]  no  suitable  method  found  for  getPct()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MAX_VALUE,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  Integer.MAX_VALUE,  v);	  this.sumFreqTable.put(v,    getPct(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	73	None	replace
179	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  result,  getPct(),  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  result,  getPct(),  Integer.MAX_VALUE);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  result,  getPct(),  Integer.MAX_VALUE);	  this.sumFreqTable.put(v,    getPct(),    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  result	73	None	replace
180	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  getPct(new  Long(v)+  1);  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  getPct(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Long(v)+    1);    getPct(new  Long(v)+  1);	  	non-compiled	[CE]  unreachable  statement	64	None	add
181	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  return  getPct(new  Long(v)+  1);  [CE]  unreachable  statement  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  return  getPct(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Long(v)+    1);    return  getPct(new  Long(v)+  1);	  	non-compiled	[CE]  unreachable  statement	64	None	add
182	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Long(v)+    1);    if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
183	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  this.sumFreqTable.put(v,  getPct(new  Long(v)+  1);  [CE]  ')'  expected  [FE]          StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  this.sumFreqTable.put(v,  getPct(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Long(v)+    1);    this.sumFreqTable.put(v,  getPct(new  Long(v)+  1);	  	non-compiled	[CE]  ')'  expected	64	None	add
184	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Long(v)+    1);    if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
185	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  freqTable);  [CE]  no  suitable  method  found  for  getPct()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  freqTable);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  freqTable);	  this.sumFreqTable.put(v,    getPct(),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	20	None	replace
186	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  freqTable,  v);  [CE]  no  suitable  method  found  for  getPct()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  freqTable,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  freqTable,  v);	  this.sumFreqTable.put(v,    getPct(),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	20	None	replace
187	[BUG]  [BUGGY]  long  v  =  this.sumFreq.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  this.sumFreq.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  this.sumFreq.doubleValue();	  long    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	35	None	replace
188	[BUG]  [BUGGY]  long  v  =  this.sumFreqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  this.sumFreqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  this.sumFreqTable.doubleValue();	  long    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	35	None	replace
189	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MIN_VALUE,  v);  [CE]  no  suitable  method  found  for  getPct()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MIN_VALUE,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  Integer.MIN_VALUE,  v);	  this.sumFreqTable.put(v,    getPct(),    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	75	None	replace
190	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Long.MIN_VALUE);  [CE]  no  suitable  method  found  for  getPct()  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Long.MIN_VALUE);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  Long.MIN_VALUE);	  this.sumFreqTable.put(v,    getPct(),    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	75	None	replace
191	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  v,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  getPct()  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  v,  Integer.MIN_VALUE);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  v,  Integer.MIN_VALUE);	  this.sumFreqTable.put(v,    getPct(),    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	75	None	replace
192	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  result,  getPct(),  Integer.MIN_VALUE);  [CE]  cannot  find  symbol  result  [FE]                              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  result,  getPct(),  Integer.MIN_VALUE);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  result,  getPct(),  Integer.MIN_VALUE);	  this.sumFreqTable.put(v,    getPct(),    Integer.MIN_VALUE);    	non-compiled	[CE]  cannot  find  symbol  result	75	None	replace
193	[BUG]  [BUGGY]  this.serializeFreqTable.put(v,  0.0);  [CE]  cannot  find  symbol  serializeFreqTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serializeFreqTable.put(v,  0.0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serializeFreqTable.put(v,  0.0);	  this.serializeFreqTable.put(v,    v);    	non-compiled	[CE]  cannot  find  symbol  serializeFreqTable	78	None	replace
194	[BUG]  [BUGGY]  this.serializeFreqTable.put(v,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serializeFreqTable.put(v,  sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serializeFreqTable.put(v,  sumFreq);	  this.serializeFreqTable.put(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	78	None	replace
195	[BUG]  [BUGGY]  this.serializeFreqTable.put(v,  0);  [CE]  cannot  find  symbol  serializeFreqTable  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serializeFreqTable.put(v,  0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serializeFreqTable.put(v,  0);	  this.serializeFreqTable.put(v,    v);    	non-compiled	[CE]  cannot  find  symbol  serializeFreqTable	78	None	replace
196	[BUG]  [BUGGY]  return  freqTable.getPct(v);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  freqTable.getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  freqTable.getPct(v);	  return    getFreqTable().getPct(v);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
197	[BUG]  [BUGGY]  return  getFreqTable().getPct(v,  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getFreqTable().getPct(v,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getFreqTable().getPct(v,  sumFreqTable);	  return    getFreqTable().getPct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	77	None	replace
198	[BUG]  [BUGGY]  return  getFreqTable().getPct(v,  0);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getFreqTable().getPct(v,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getFreqTable().getPct(v,  0);	  return    getFreqTable().getPct(v);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
199	[BUG]  [BUGGY]  this.freqTable.put(v,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable.put(v,  sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable.put(v,  sumFreq);	  this.freqTable.put(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	4	None	replace
200	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  0);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  sumFreqTable,  0);	  return    getPct(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	40	None	replace
201	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  result);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  sumFreqTable,  result);	  return    getPct(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	40	None	replace
202	[BUG]  [BUGGY]  return  getPct(v.valueOf(v));  [CE]  long  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v.valueOf(v));	  return    getPct(v.valueOf(long));    	non-compiled	[CE]  long  cannot  be  dereferenced	27	None	replace
203	[BUG]  [BUGGY]  return  getPct(v.intValue());  [CE]  long  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v.intValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v.intValue());	  return    getPct(v.valueOf(long));    	non-compiled	[CE]  long  cannot  be  dereferenced	27	None	replace
204	[BUG]  [BUGGY]  return  getPct(Short.parseLong(v),  freqTable);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Short.parseLong(v),  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Short.parseLong(v),  freqTable);	  return    getPct(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
205	[BUG]  [BUGGY]  return  getPct(TreeMap.parseLong(v),  freqTable);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(TreeMap.parseLong(v),  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(TreeMap.parseLong(v),  freqTable);	  return    getPct(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
206	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  0,  sumFreq);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  0,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  0,  sumFreq);	  return    getPct(Long.parseLong(v),    0);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	41	None	replace
207	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  0,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  0,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  0,  v);	  return    getPct(Long.parseLong(v),    0);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	41	None	replace
208	[BUG]  [BUGGY]  this.sumFreqTable  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable  =  freqTable.get(v  -  1);	  this.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	32	None	replace
209	[BUG]  [BUGGY]  this.sumFreqTable  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  sumFreqTable  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable  =  freqTable.get(v  +  1);	  this.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	32	None	replace
210	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
211	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFre  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFre  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFre	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
212	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  sumFreq	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
213	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
214	[BUG]  [BUGGY]  return  this.sumFreqTable.getPct(v,  getPct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  this.sumFreqTable.getPct(v,  getPct(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  this.sumFreqTable.getPct(v,  getPct(v));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(long.MAX_VALUE));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	45	None	replace
215	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
216	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
217	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
218	[BUG]  [BUGGY]  return  getPct(new  long(v)+  1);  [CE]  '['  expected  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  long(v)+  1);	  return    getPct(new    long(v));    	non-compiled	[CE]  '['  expected	53	None	replace
219	[BUG]  [BUGGY]  return  getPct(new  long(v),  0);  [CE]  '['  expected  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  long(v),  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  long(v),  0);	  return    getPct(new    long(v));    	non-compiled	[CE]  '['  expected	53	None	replace
220	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct()  /  1);  [CE]  no  suitable  method  found  for  getPct()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct()  /  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct()  /  1);	  this.sumFreqTable.put(v,    getPct()    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	86	None	replace
221	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct()  -  1,  v);  [CE]  no  suitable  method  found  for  getPct()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct()  -  1,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct()  -  1,  v);	  this.sumFreqTable.put(v,    getPct()    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	86	None	replace
222	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  0);  [CE]  no  suitable  method  found  for  put(long,double,int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable.put(v,  getPct(v),  0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable.put(v,  getPct(v),  0);	  this.freqTable.put(v,    getPct(v));    	non-compiled	[CE]  no  suitable  method  found  for  put(long,double,int)	47	None	replace
223	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  freq);  [CE]  cannot  find  symbol  freq  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable.put(v,  getPct(v),  freq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable.put(v,  getPct(v),  freq);	  this.freqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  freq	47	None	replace
224	[BUG]  [BUGGY]  double  v  =  freqTable.size()  -  2;  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  freqTable.size()  -  2;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  freqTable.size()  -  2;	  double    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	22	None	replace
225	[BUG]  [BUGGY]  this.resultTable.put(v,  getPct(new  Long(v)));  [CE]  cannot  find  symbol  resultTable  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.resultTable.put(v,  getPct(new  Long(v)));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.resultTable.put(v,  getPct(new  Long(v)));	  this.resultTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  resultTable	59	None	replace
226	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  return  getPct(long.MAX_VALUE);  }  [CE]  class  expected  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  return  getPct(long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  return  getPct(long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	non-compiled	[CE]  class  expected	57	None	replace
227	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	compilable	  [FE]  StackOverflowError  	57	1	replace
228	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }  [FE]  StackOverflowError  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	compilable	  [FE]  StackOverflowError  	57	1	replace
229	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  freqTable.valueOf(v));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  freqTable.valueOf(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  freqTable.valueOf(v));	  this.sumFreqTable.put(v,    freqTable.getPct(v));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
230	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  freqTable.getPct(v),  false);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  freqTable.getPct(v),  false);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  freqTable.getPct(v),  false);	  this.sumFreqTable.put(v,    freqTable.getPct(v));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    return    getPct(new    Long(v));    }    	compilable	  [FE]  AssertionFailedError  	82	1	replace
232	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    return    getPct(new    Long(v));    }    	compilable	  [FE]  AssertionFailedError  	82	1	replace
233	[BUG]  [BUGGY]  return  getPct(v,  freqTable.valueOf(v));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  freqTable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  freqTable.valueOf(v));	  return    getPct(v,    long.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
234	[BUG]  [BUGGY]  return  getPct(v,  v);  [CE]  no  suitable  method  found  for  getPct(long,long)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  v);	  return    getPct(v,    long.valueOf(v));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(long,long)	25	None	replace
235	[BUG]  [BUGGY]  return  getPct(v,  long.parseDouble(v));  [CE]  class  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  long.parseDouble(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  long.parseDouble(v));	  return    getPct(v,    long.valueOf(v));    	non-compiled	[CE]  class  expected	25	None	replace
236	[BUG]  [BUGGY]  return  getPct(long.MAX_VALUE);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  [CE]  class  expected  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(long.MAX_VALUE);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(long.MAX_VALUE);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(Long.MAX_VALUE));    	non-compiled	[CE]  class  expected	43	None	replace
237	[BUG]  [BUGGY]  return  getPct(Long.MAX_VALUE,  v);  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));  [CE]  no  suitable  method  found  for  getPct(long,long)  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.MAX_VALUE,  v);  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.MAX_VALUE,  v);  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(Long.MAX_VALUE));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(long,long)	43	None	replace
238	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i)  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i)  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i)	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
239	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  0.0);  [CE]  cannot  find  symbol  This  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  0.0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreq  =  freqTable.getPct(v,  0.0);	  This.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	70	None	replace
240	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Long(v)+    1);    if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
241	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.get(v  -  2);  [CE]  cannot  find  symbol  This  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreq  =  freqTable.get(v  -  2);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreq  =  freqTable.get(v  -  2);	  This.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	63	None	replace
242	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.getPct(v  -  1);  [CE]  cannot  find  symbol  sumFreq  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreq  =  freqTable.getPct(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreq  =  freqTable.getPct(v  -  1);	  this.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	13	None	replace
243	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.getPct(v)+  1;  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreq  =  freqTable.getPct(v)+  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreq  =  freqTable.getPct(v)+  1;	  this.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	13	None	replace
244	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MIN_VALUE,  freqTable.valueOf(v));  [CE]  no  suitable  method  found  for  getPct()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MIN_VALUE,  freqTable.valueOf(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  Integer.MIN_VALUE,  freqTable.valueOf(v));	  this.sumFreqTable.put(v,    getPct(),    Integer.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	75	None	replace
245	[BUG]  [BUGGY]  return  getPct(0,  Math.pow(10,  v));  [CE]  no  suitable  method  found  for  getPct(int,double)  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(0,  Math.pow(10,  v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(0,  Math.pow(10,  v));	  return    getPct(0,    v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,double)	52	None	replace
246	[BUG]  [BUGGY]  return  getPct(0,  sumFreqTable,  v);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(0,  sumFreqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(0,  sumFreqTable,  v);	  return    getPct(0,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	52	None	replace
247	[BUG]  [BUGGY]  This.sumFreqTable  =  freqTable.get(v)+  1;  [CE]  cannot  find  symbol  This  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreqTable  =  freqTable.get(v)+  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreqTable  =  freqTable.get(v)+  1;	  This.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	61	None	replace
248	[BUG]  [BUGGY]  return  getPct(new  Integer(v),  freqTable);  [CE]  no  suitable  constructor  found  for  Integer(long)  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Integer(v),  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Integer(v),  freqTable);	  return    getPct(new    Integer(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(long)	28	None	replace
249	[BUG]  [BUGGY]  return  getPct(new  Integer(v),  v);  [CE]  no  suitable  constructor  found  for  Integer(long)  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Integer(v),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Integer(v),  v);	  return    getPct(new    Integer(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(long)	28	None	replace
250	[BUG]  [BUGGY]  this.result  =  freqTable.getPct(v  -  1);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result  =  freqTable.getPct(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result  =  freqTable.getPct(v  -  1);	  this.result    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
251	[BUG]  [BUGGY]  return  getPct(new  double(v));  [CE]  '['  expected  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  double(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  double(v));	  return    getPct(new    long(v));    	non-compiled	[CE]  '['  expected	53	None	replace
252	[BUG]  [BUGGY]  return  getPct(new  int(v));  [CE]  '['  expected  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  int(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  int(v));	  return    getPct(new    long(v));    	non-compiled	[CE]  '['  expected	53	None	replace
253	[BUG]  [BUGGY]  return  getFreqTable().getPct(v,  v);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getFreqTable().getPct(v,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getFreqTable().getPct(v,  v);	  return    getFreqTable().getPct(v);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
254	[BUG]  [BUGGY]  return  getFreqTable().getPct(v,  freqTable);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getFreqTable().getPct(v,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getFreqTable().getPct(v,  freqTable);	  return    getFreqTable().getPct(v);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
255	[BUG]  [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  freqTable);  [CE]  no  suitable  method  found  for  getPct(long,long,TreeMap<Comparable<?>,Long>)  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  Long.MAX_VALUE,  freqTable);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(long,long,TreeMap<Comparable<?>,Long>)	71	None	replace
256	[BUG]  [BUGGY]  return  this.sumFreqTable.get(v,  getPct(new  Long(v));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  this.sumFreqTable.get(v,  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  this.sumFreqTable.get(v,  getPct(new  Long(v));	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  ')'  expected	11	None	replace
257	[BUG]  [BUGGY]  return  getPct(v,  freqTable.doubleValue());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  freqTable.doubleValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  freqTable.doubleValue());	  return    getPct(v.doubleValue());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
258	[BUG]  [BUGGY]  int  v  =  this.freqTable.size()  -  2;  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  int  v  =  this.freqTable.size()  -  2;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	int  v  =  this.freqTable.size()  -  2;	  int    v    =    this.freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	66	None	replace
259	[BUG]  [BUGGY]  this.serializeFreqTable.put(v,  getPct(v),  false);  [CE]  cannot  find  symbol  serializeFreqTable  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serializeFreqTable.put(v,  getPct(v),  false);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serializeFreqTable.put(v,  getPct(v),  false);	  this.serializeFreqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  serializeFreqTable	76	None	replace
260	[BUG]  [BUGGY]  this.serializePct.put(v,  getPct(v));  [CE]  cannot  find  symbol  serializePct  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serializePct.put(v,  getPct(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serializePct.put(v,  getPct(v));	  this.serializeFreqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  serializePct	76	None	replace
261	[BUG]  [BUGGY]  this.freqTable  =  freqTable.get(v  -  1);  [CE]  cannot  assign  a  value  to  final  variable  freqTable  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable  =  freqTable.get(v  -  1);	  this.freqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  freqTable	33	None	replace
262	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap().get(v);  [CE]  cannot  assign  a  value  to  final  variable  freqTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable  =  new  TreeMap().get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable  =  new  TreeMap().get(v);	  this.freqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  freqTable	33	None	replace
263	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  freqTable,  v);	  return    getPct(Long.parseLong(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	72	None	replace
264	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  sumFreqTable,  v);	  return    getPct(Long.parseLong(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	72	None	replace
265	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  v,  null);  [CE]  no  suitable  method  found  for  getPct()  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  v,  null);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  v,  null);	  this.sumFreqTable.put(v,    getPct(),    null);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	74	None	replace
266	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  null,  freqTable);  [CE]  no  suitable  method  found  for  getPct()  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  null,  freqTable);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  null,  freqTable);	  this.sumFreqTable.put(v,    getPct(),    null);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	74	None	replace
267	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	return  getPct(new  Long(v)+  2);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	65	1	replace
268	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  2);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v)+  2);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	65	1	replace
269	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)-  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	return  getPct(new  Long(v)-  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	65	1	replace
270	[BUG]  [BUGGY]  return  getPct(new  Long(v)-  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)-  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v)-  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	65	1	replace
271	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  sumFreqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  freqTable,  sumFreqTable);	  return    getPct(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	40	None	replace
272	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  sumFreqTable,  freqTable);	  return    getPct(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	40	None	replace
273	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MAX_VALUE,  freqTable);  [CE]  no  suitable  method  found  for  getPct()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  Integer.MAX_VALUE,  freqTable);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  Integer.MAX_VALUE,  freqTable);	  this.sumFreqTable.put(v,    getPct(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	73	None	replace
274	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  }  [CE]  class  expected  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  }	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(long.MAX_VALUE));    	non-compiled	[CE]  class  expected	45	None	replace
275	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class  expected  [FE]                StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(long.MAX_VALUE));    	non-compiled	[CE]  class  expected	45	None	replace
276	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  }  [CE]  class  expected  [FE]                  StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  }	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(long.MAX_VALUE));    	non-compiled	[CE]  class  expected	45	None	replace
277	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  0,  sumFreqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  0,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  0,  sumFreqTable);	  return    getPct(Long.parseLong(v),    0);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	41	None	replace
278	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  0,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  0,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v),  0,  freqTable);	  return    getPct(Long.parseLong(v),    0);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	41	None	replace
279	[BUG]  [BUGGY]  this.serialVersionUID  =  freqTable.get(v  +  1);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID  =  freqTable.get(v  +  1);	  this.serialVersionUID    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	2	None	replace
280	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    getPct(new    Long(v));    	non-compiled	[CE]  missing  return  statement	8	None	replace
281	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
282	[BUG]  [BUGGY]  this.sumFreqTable  =  freqTable.get(v)+  1;  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable  =  freqTable.get(v)+  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable  =  freqTable.get(v)+  1;	  this.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	32	None	replace
283	[BUG]  [BUGGY]  return  getPct(v  +  freqTable.valueOf(v));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  +  freqTable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v  +  freqTable.valueOf(v));	  return    getPct(v    +    long.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
284	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
285	[BUG]  [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v  +  1);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID  =  freqTable.getPct(v  +  1);	  this.serialVersionUID    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	14	None	replace
286	[BUG]  [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v,  v);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID  =  freqTable.getPct(v,  v);	  this.serialVersionUID    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	14	None	replace
287	[BUG]  [BUGGY]  return  getPct(new  Long(v),  0,  freqTable);  [CE]  no  suitable  method  found  for  getPct(Long,int,TreeMap<Comparable<?>,Long>)  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  0,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  0,  freqTable);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Long,int,TreeMap<Comparable<?>,Long>)	29	None	replace
288	[BUG]  [BUGGY]  return  getPct(new  Long(v),  0,  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  0,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  0,  sumFreqTable);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	29	None	replace
289	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  1,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  1,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v)+  1,  freqTable);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	80	None	replace
290	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  2);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v)+  2);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	80	None	replace
291	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  getPct(Long.MAX_VALUE);  }  [CE]  missing  return  statement  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  getPct(Long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  getPct(Long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	42	None	replace
292	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  getPct(Long.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  getPct(Long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  getPct(Long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
293	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  getPct(Integer.MAX_VALUE);  }  [CE]  missing  return  statement  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  getPct(Integer.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  getPct(Integer.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	42	None	replace
294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v  -  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	return  getPct(new  Double(v  -  1));	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	31	1	replace
295	[BUG]  [BUGGY]  return  getPct(new  Double(v  -  1));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v  -  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Double(v  -  1));	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	31	1	replace
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	return  getPct(new  Double(v)+  1);	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	31	1	replace
297	[BUG]  [BUGGY]  return  getPct(new  Double(v)+  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Double(v)+  1);	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	31	1	replace
298	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  1.0);  [CE]  cannot  find  symbol  sumFreqTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  1.0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  1.0);	  this.sumFreqTable.put(v,    0.0);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	62	None	replace
299	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  missing  return  statement	10	None	replace
300	[BUG]  [BUGGY]  result  =  getPct(Long.MAX_VALUE);  sumFreqTable.put(v,  result);  [CE]  cannot  find  symbol  result  [FE]                StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  result  =  getPct(Long.MAX_VALUE);  sumFreqTable.put(v,  result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	result  =  getPct(Long.MAX_VALUE);  sumFreqTable.put(v,  result);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    sumFreqTable.put(v,    result);    	non-compiled	[CE]  cannot  find  symbol  result	46	None	replace
301	[BUG]  [BUGGY]  result  =  getPct(Long.MAX_VALUE);  sumFreqTable.put(v,  v);  [CE]  cannot  find  symbol  result  [FE]                  StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  result  =  getPct(Long.MAX_VALUE);  sumFreqTable.put(v,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	result  =  getPct(Long.MAX_VALUE);  sumFreqTable.put(v,  v);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    sumFreqTable.put(v,    result);    	non-compiled	[CE]  cannot  find  symbol  result	46	None	replace
302	[BUG]  [BUGGY]  double  v  =  this.sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  this.sumFreqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  this.sumFreqTable.size();	  double    v    =    sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	18	None	replace
303	[BUG]  [BUGGY]  return  getPct(long.MAX_VALUE);  [CE]  class  expected  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  class  expected	84	None	replace
304	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  1);  [CE]  cannot  find  symbol  sumFreqTable  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  1);	  this.sumFreqTable.put(v,    0);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	7	None	replace
305	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  0)  {  return  getPct(new  Double(v));  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  0)  {  return  getPct(new  Double(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    if(v  <  0)  {  return  getPct(new  Double(v));  }	  	non-compiled	[CE]  unreachable  statement	30	None	add
306	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0.0)  {  return  getPct(new  Double(v));  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0.0)  {  return  getPct(new  Double(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    if(v  <  =  0.0)  {  return  getPct(new  Double(v));  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
307	[BUG]  [BUGGY]  long  v  =  this.sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  this.sumFreqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  this.sumFreqTable.size();	  long    v    =    sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	17	None	replace
308	[BUG]  [BUGGY]  long  v  =  freqTable.get(v);  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  freqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  freqTable.get(v);	  long    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	21	None	replace
309	[BUG]  [BUGGY]  if(v  <  =  0)  {  sumFreq  =  getPct(long.MAX_VALUE);  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  sumFreq  =  getPct(long.MAX_VALUE);  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  sumFreq  =  getPct(long.MAX_VALUE);  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
310	[BUG]  [BUGGY]  this.result  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result  =  freqTable.get(v  +  1);	  this.result    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  result	34	None	replace
311	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  freqTable);  [CE]  long  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  freqTable);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  getPct(v),  freqTable);	  this.serialVersionUID.put(v,    getPct(v));    	non-compiled	[CE]  long  cannot  be  dereferenced	49	None	replace
312	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  null);  [CE]  long  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  null);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  getPct(v),  null);	  this.serialVersionUID.put(v,    getPct(v));    	non-compiled	[CE]  long  cannot  be  dereferenced	49	None	replace
313	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct()  -  1L);  [CE]  no  suitable  method  found  for  getPct()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct()  -  1L);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct()  -  1L);	  this.sumFreqTable.put(v,    getPct()    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	86	None	replace
314	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  0)  {  if(v  >  0)  {  return  getPct(v);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  if(v  <  0)  {  if(v  >  0)  {  return  getPct(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    if(v  <  0)  {  if(v  >  0)  {  return  getPct(v);  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
315	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  if(v  >  0)  {  return  getPct(v);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  if(v  >  0)  {  return  getPct(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    if(v  <  =  0)  {  if(v  >  0)  {  return  getPct(v);  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
316	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  0)  {  if(v  >  0.0)  {  return  getPct(v);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  if(v  <  0)  {  if(v  >  0.0)  {  return  getPct(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    if(v  <  0)  {  if(v  >  0.0)  {  return  getPct(v);  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
317	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	54	1	replace
318	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	54	1	replace
319	[BUG]  [BUGGY]  if(v  <  =  0)  {  sumFreqTable.put(v,  sumFreq);  }  else  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  sumFreqTable.put(v,  sumFreq);  }  else  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  sumFreqTable.put(v,  sumFreq);  }  else  {  sumFreqTable.put(v,  sumFreq	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
320	[BUG]  [BUGGY]  if(v  <  =  0)  {  sumFreqTable.add(new  Long(v));  }  else  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  sumFreqTable.add(new  Long(v));  }  else  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  sumFreqTable.add(new  Long(v));  }  else  {  sumFreqTable.put(v,  sumFreq	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
321	[BUG]  [BUGGY]  if(v  <  =  0)  {  sumFreqTable.clear();  }  else  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  sumFreqTable.clear();  }  else  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  sumFreqTable.clear();  }  else  {  sumFreqTable.put(v,  sumFreq	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
322	[BUG]  [BUGGY]  this.result.put(v,  getPct(long));  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result.put(v,  getPct(long));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result.put(v,  getPct(long));	  this.result.put(v,    getPct(v));    	non-compiled	[CE]  '.class'  expected	48	None	replace
323	[BUG]  [BUGGY]  this.maxFreq  =  freqTable.getPct(v  -  1);  [CE]  cannot  find  symbol  maxFreq  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.maxFreq  =  freqTable.getPct(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.maxFreq  =  freqTable.getPct(v  -  1);	  this.maxFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	15	None	replace
324	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  v);  [CE]  no  suitable  method  found  for  put(long,double,long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.freqTable.put(v,  getPct(v),  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.freqTable.put(v,  getPct(v),  v);	  this.freqTable.put(v,    getPct(v));    	non-compiled	[CE]  no  suitable  method  found  for  put(long,double,long)	47	None	replace
325	[BUG]  [BUGGY]  if(v  <  =  0)  {  sumFreqTable.add(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  sumFreqTable.add(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  sumFreqTable.add(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
326	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i).doubleValu  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i).doubleValu  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i).doubleValu	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
327	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i).longValu  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i).longValu  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i).longValu	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
328	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  freqTable.size()  -  1);  [CE]  cannot  find  symbol  sumFreqTable  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  freqTable.size()  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  freqTable.size()  -  1);	  this.sumFreqTable.put(v,    freqTable.getPct(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	19	None	replace
329	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
330	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
331	[BUG]  [BUGGY]  return  getPct(new  Long(v),  v  =  getPct(new  Long(v));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    long    v    =    getPct(new    Long(v));    	non-compiled	[CE]  ')'  expected	12	None	replace
332	[BUG]  [BUGGY]  this.maxFreq  =  freqTable.getPct(v  +  1);  [CE]  cannot  find  symbol  maxFreq  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.maxFreq  =  freqTable.getPct(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.maxFreq  =  freqTable.getPct(v  +  1);	  this.maxFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	15	None	replace
333	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  new  Double(v));  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  new  Double(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  new  Double(v));	  this.serialVersionUID.put(v,    v);    	non-compiled	[CE]  long  cannot  be  dereferenced	5	None	replace
334	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
335	[BUG]  [BUGGY]  if(v  <  =  0.0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0.0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0.0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
336	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
337	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(v);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(v);  }	  return    getPct(Long.MAX_VALUE);    return    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
338	[BUG]  [BUGGY]  if(v  <  =  0.0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(v);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0.0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0.0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(v);  }	  return    getPct(Long.MAX_VALUE);    return    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
339	[BUG]  [BUGGY]  v  =  freqTable.doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  v  =  freqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	v  =  freqTable.doubleValue();	  int    v    =    freq.doubleValue();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
340	[BUG]  [BUGGY]  int  result  =  getPct(Integer.MAX_VALUE);  sumFreqTable.put(v,  result);  [CE]  possible  loss  of  precision  [FE]                StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  int  result  =  getPct(Integer.MAX_VALUE);  sumFreqTable.put(v,  result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	int  result  =  getPct(Integer.MAX_VALUE);  sumFreqTable.put(v,  result);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    sumFreqTable.put(v,    result);    	non-compiled	[CE]  possible  loss  of  precision	46	None	replace
341	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.getPct(v,  v);  [CE]  cannot  find  symbol  sumFreq  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreq  =  freqTable.getPct(v,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreq  =  freqTable.getPct(v,  v);	  this.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	13	None	replace
342	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  return  getPct(Integer.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  return  getPct(Integer.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  return  getPct(Integer.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
343	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct()  *  1);  [CE]  no  suitable  method  found  for  getPct()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct()  *  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct()  *  1);	  this.sumFreqTable.put(v,    getPct()    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	86	None	replace
344	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.add(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
345	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  this.sumFreq);  [CE]  cannot  find  symbol  This  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  this.sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreq  =  freqTable.getPct(v,  this.sumFreq);	  This.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	70	None	replace
346	[BUG]  [BUGGY]  this.resultTable.put(v,  getPct(new  Long(v));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.resultTable.put(v,  getPct(new  Long(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.resultTable.put(v,  getPct(new  Long(v));	  this.resultTable.put(v,    getPct(v));    	non-compiled	[CE]  ')'  expected	59	None	replace
347	[BUG]  [BUGGY]  this.serializePctTable.put(v,  getPct(v));  [CE]  cannot  find  symbol  serializePctTable  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serializePctTable.put(v,  getPct(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serializePctTable.put(v,  getPct(v));	  this.serializeFreqTable.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  serializePctTable	76	None	replace
348	[BUG]  [BUGGY]  int  result  =  getPct(Integer.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  int  result  =  getPct(Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	int  result  =  getPct(Integer.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  possible  loss  of  precision	44	None	replace
349	[BUG]  [BUGGY]  long  result  =  getPct(Long.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  result  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  result  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  possible  loss  of  precision	44	None	replace
350	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  [CE]  class  expected  [FE]              StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(long.MAX_VALUE));    	non-compiled	[CE]  class  expected	45	None	replace
351	[BUG]  [BUGGY]  return  this.sumFreqTable.get(v,  getPct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]                StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  this.sumFreqTable.get(v,  getPct(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  this.sumFreqTable.get(v,  getPct(v));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(long.MAX_VALUE));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	45	None	replace
352	[BUG]  [BUGGY]  long  v  =  freqTable.size()  -  2;  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  long  v  =  freqTable.size()  -  2;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	long  v  =  freqTable.size()  -  2;	  long    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	21	None	replace
353	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
354	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.add(freqTable.get(i));  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
355	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq);  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
356	[BUG]  [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]        StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  Long.MAX_VALUE,  sumFreqTable);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	71	None	replace
357	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.get(v)-  1;  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreq  =  freqTable.get(v)-  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreq  =  freqTable.get(v)-  1;	  this.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	1	None	replace
358	[BUG]  [BUGGY]  double  v  =  this.sumFreqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  this.sumFreqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  this.sumFreqTable.doubleValue();	  double    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	36	None	replace
359	[BUG]  [BUGGY]  return  getPct(new  long(v),  v);  [CE]  '['  expected  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  long(v),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  long(v),  v);	  return    getPct(new    long(v));    	non-compiled	[CE]  '['  expected	53	None	replace
360	[BUG]  [BUGGY]  return  getPct(v,  v  *  long.valueOf(v));  [CE]  class  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v,  v  *  long.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v,  v  *  long.valueOf(v));	  return    getPct(v,    long.valueOf(v));    	non-compiled	[CE]  class  expected	25	None	replace
361	[BUG]  [BUGGY]  return  getPct(v);  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));  [CE]  cannot  find  symbol  sumFreqTable  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v);  this.sumFreqTable.put(v,  getPct(Long.MAX_VALUE));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(Long.MAX_VALUE));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	43	None	replace
362	[BUG]  [BUGGY]  return  getPct(v);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  [CE]  class  expected  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v);  this.sumFreqTable.put(v,  getPct(long.MAX_VALUE));	  return    getPct(Long.MAX_VALUE);    this.sumFreqTable.put(v,    getPct(Long.MAX_VALUE));    	non-compiled	[CE]  class  expected	43	None	replace
363	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0.0)  {  return  getPct(new  Long(v)+  1);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0.0)  {  return  getPct(new  Long(v)+  1);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Long(v)+    1);    if(v  <  =  0.0)  {  return  getPct(new  Long(v)+  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
364	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  else  {  sumFreqTable.add(getPct(v));  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  else  {  sumFreqTable.add(getPct(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(new    Long(v)+    1);    if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  else  {  sumFreqTable.add(getPct(v));  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
365	[BUG]  [BUGGY]  this.result  =  freqTable.getPct(v,  v);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result  =  freqTable.getPct(v,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result  =  freqTable.getPct(v,  v);	  this.result    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
366	[BUG]  [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  this.freqTable);  [CE]  long  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.serialVersionUID.put(v,  getPct(v),  this.freqTable);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.serialVersionUID.put(v,  getPct(v),  this.freqTable);	  this.serialVersionUID.put(v,    getPct(v));    	non-compiled	[CE]  long  cannot  be  dereferenced	49	None	replace
367	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.clear();  }  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.clear();    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
368	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  1,  sumFreqTable,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  1,  sumFreqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(Long.parseLong(v)+  1,  sumFreqTable,  v);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	80	None	replace
369	[BUG]  [BUGGY]  if(v  <  =  0  ||  freqTable.size()  >  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sum  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0  ||  freqTable.size()  >  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sum  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0  ||  freqTable.size()  >  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sum	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
370	[BUG]  [BUGGY]  if(v  <  =  0  ||  freqTable.size()  ==  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sum  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0  ||  freqTable.size()  ==  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sum  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0  ||  freqTable.size()  ==  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sum	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
371	[BUG]  [BUGGY]  if(v  <  =  0  ||  freqTable.size()  >  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0  ||  freqTable.size()  >  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0  ||  freqTable.size()  >  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
372	[BUG]  [BUGGY]  This.sumFreqTable  =  freqTable.get(v  -  2);  [CE]  cannot  find  symbol  This  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  This.sumFreqTable  =  freqTable.get(v  -  2);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	This.sumFreqTable  =  freqTable.get(v  -  2);	  This.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	61	None	replace
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v  +  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	add	return  getPct(new  Double(v  +  1));	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	31	1	replace
374	[BUG]  [BUGGY]  return  getPct(new  Double(v  +  1));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v  +  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Double(v  +  1));	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	31	1	replace
375	[BUG]  [BUGGY]  return  getPct(new  Double(v),  v);  [CE]  no  suitable  method  found  for  getPct(Double,long)  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Double(v),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Double(v),  v);	  return    getPct(new    Double(v));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Double,long)	31	None	replace
376	[BUG]  [BUGGY]  double  v  =  freqTable.size()  -  sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(long)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  double  v  =  freqTable.size()  -  sumFreqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	double  v  =  freqTable.size()  -  sumFreqTable.size();	  double    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(long)	22	None	replace
377	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
378	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  +  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  +  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  sumFreqTable.put(v,  sumFreq  +	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    sumFreqTable.put(v,    sumFreq    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
379	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(),  v,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getPct()  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(),  v,  Integer.MAX_VALUE);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable.put(v,  getPct(),  v,  Integer.MAX_VALUE);	  this.sumFreqTable.put(v,    getPct(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	73	None	replace
380	[BUG]  [BUGGY]  return  getPct(0,  v  -  1);  [CE]  no  suitable  method  found  for  getPct(int,long)  [FE]          StackOverflowError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(0,  v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(0,  v  -  1);	  return    getPct(0,    v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,long)	52	None	replace
381	[BUG]  [BUGGY]  this.sumFreqTable  =  freqTable.get(v  -  2);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.sumFreqTable  =  freqTable.get(v  -  2);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.sumFreqTable  =  freqTable.get(v  -  2);	  this.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	32	None	replace
382	[BUG]  [BUGGY]  if(v  <  =  0.0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0.0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0.0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    return    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
383	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  v;  ++i)  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  v;  ++i)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  i  =  0;  i  <  v;  ++i)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    return    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
384	[BUG]  [BUGGY]  return  getPct(v  -  freqTable.getValue(v));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v  -  freqTable.getValue(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(v  -  freqTable.getValue(v));	  return    getPct(v    -    long.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
385	[BUG]  [BUGGY]  this.result.put(v,  getPct(v  -  1));  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result.put(v,  getPct(v  -  1));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result.put(v,  getPct(v  -  1));	  this.result.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  result	48	None	replace
386	[BUG]  [BUGGY]  this.result.put(v,  getPct(v  +  1));  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  this.result.put(v,  getPct(v  +  1));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	this.result.put(v,  getPct(v  +  1));	  this.result.put(v,    getPct(v));    	non-compiled	[CE]  cannot  find  symbol  result	48	None	replace
387	[BUG]  [BUGGY]  return  getPct(v);  this.sumFreq  =  sumFreqTable.getPct(v);  [CE]  cannot  find  symbol  sumFreq  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  this.sumFreq  =  sumFreqTable.getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    this.sumFreq  =  sumFreqTable.getPct(v);	  	non-compiled	[CE]  cannot  find  symbol  sumFreq	50	None	add
388	[BUG]  [BUGGY]  return  getPct(v);  if(v  >  0)  {  if(v  <  =  0)  {  return  getPct(v);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  if(v  >  0)  {  if(v  <  =  0)  {  return  getPct(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    if(v  >  0)  {  if(v  <  =  0)  {  return  getPct(v);  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
389	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  return  getPct(v);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  return  getPct(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return    getPct(v);    if(v  <  =  0)  {  return  getPct(v);  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
390	[BUG]  [BUGGY]  return  getPct(new  Long(v),  sumFreq,  0);  [CE]  cannot  find  symbol  sumFreq  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(long  v)  {      [BUGGY]  return  getPct(new  Long(v),  sumFreq,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	342	342	1	replace	return  getPct(new  Long(v),  sumFreq,  0);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	29	None	replace
