bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[]  {  v,  0,  v  }  );	  return    getPct(new    int[]    {    v,    0    }    );    	compilable	  [FE]  ClassCastException  	34	2	replace
2	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0,  v  }  );  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  0,  v  }  );	  return    getPct(new    int[]    {    v,    0    }    );    	compilable	  [FE]  ClassCastException  	34	2	replace
3	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  1  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[]  {  v,  1  }  );	  return    getPct(new    int[]    {    v,    0    }    );    	compilable	  [FE]  ClassCastException  	34	2	replace
4	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  1  }  );  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  1  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  1  }  );	  return    getPct(new    int[]    {    v,    0    }    );    	compilable	  [FE]  ClassCastException  	34	2	replace
5	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  1,  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[]  {  v,  1,  0  }  );	  return    getPct(new    int[]    {    v,    0    }    );    	compilable	  [FE]  ClassCastException  	34	2	replace
6	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  1,  0  }  );  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  1,  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  1,  0  }  );	  return    getPct(new    int[]    {    v,    0    }    );    	compilable	  [FE]  ClassCastException  	34	2	replace
7	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  2  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[]  {  v,  2  }  );	  return    getPct(new    int[]    {    v,    0    }    );    	compilable	  [FE]  ClassCastException  	34	2	replace
8	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  2  }  );  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  2  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  2  }  );	  return    getPct(new    int[]    {    v,    0    }    );    	compilable	  [FE]  ClassCastException  	34	2	replace
9	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
11	[BUG]  [BUGGY]  double  v  =  freqTable.size()  -  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  freqTable.size()  -  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  freqTable.size()  -  1;	  double    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	6	None	replace
12	[BUG]  [BUGGY]  return  getPct(new  Double(v));  getPct(new  Double(v));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v));  getPct(new  Double(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Double(v));    getPct(new  Double(v));	  	non-compiled	[CE]  unreachable  statement	43	None	add
13	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
14	[BUG]  [BUGGY]  return  getPct(new  Double(v));  return  getPct(new  Double(v));  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v));  return  getPct(new  Double(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Double(v));    return  getPct(new  Double(v));	  	non-compiled	[CE]  unreachable  statement	43	None	add
15	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
16	[BUG]  [BUGGY]  return  getPct(new  Double(v));  int  v  =  getPct(new  Double(v));  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v));  int  v  =  getPct(new  Double(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Double(v));    int  v  =  getPct(new  Double(v));	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	43	None	add
17	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  getPct(new  Long(v));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreqTable.put(v,  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreqTable.put(v,  getPct(new  Long(v));	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  ')'  expected	24	None	replace
18	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
19	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  sumFreqTable.put(v,  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
20	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
21	[BUG]  [BUGGY]  Integer  v  =  sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Integer  v  =  sumFreqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Integer  v  =  sumFreqTable.size();	  long    v    =    sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	20	None	replace
22	[BUG]  [BUGGY]  return  getPct(freqTable.valueOf(v));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(freqTable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(freqTable.valueOf(v));	  return    getPct(sumFreqTable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
23	[BUG]  [BUGGY]  return  getPct(FrequencyTable.valueOf(v));  [CE]  cannot  find  symbol  FrequencyTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(FrequencyTable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(FrequencyTable.valueOf(v));	  return    getPct(sumFreqTable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  FrequencyTable	11	None	replace
24	[BUG]  [BUGGY]  return  getPct(result.valueOf(v));  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(result.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(result.valueOf(v));	  return    getPct(sumFreqTable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  result	11	None	replace
25	[BUG]  [BUGGY]  return  getPct(this.freqTable.valueOf(v));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(this.freqTable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(this.freqTable.valueOf(v));	  return    getPct(sumFreqTable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
26	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  0);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  sumFreqTable,  0);	  return    getPct(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	62	None	replace
27	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  sumFreq);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  freqTable,  sumFreq);	  return    getPct(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	62	None	replace
28	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  v);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  sumFreqTable,  v);	  return    getPct(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	62	None	replace
29	[BUG]  [BUGGY]  long  result  =  getPct(Integer.valueOf(v));  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  result  =  getPct(Integer.valueOf(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  result  =  getPct(Integer.valueOf(v));	  int    result    =    getPct(Integer.valueOf(v));    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
30	[BUG]  [BUGGY]  double  result  =  getPct(Integer.valueOf(v));  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  result  =  getPct(Integer.valueOf(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  result  =  getPct(Integer.valueOf(v));	  int    result    =    getPct(Integer.valueOf(v));    	non-compiled	[CE]  missing  return  statement	2	None	replace
31	[BUG]  [BUGGY]  float  result  =  getPct(Integer.valueOf(v));  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  float  result  =  getPct(Integer.valueOf(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	float  result  =  getPct(Integer.valueOf(v));	  int    result    =    getPct(Integer.valueOf(v));    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
32	[BUG]  [BUGGY]  short  result  =  getPct(Integer.valueOf(v));  [CE]  possible  loss  of  precision  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  short  result  =  getPct(Integer.valueOf(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	short  result  =  getPct(Integer.valueOf(v));	  int    result    =    getPct(Integer.valueOf(v));    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
33	[BUG]  [BUGGY]  getPct(new  int[]  {  v  }  );  [CE]  missing  return  statement  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  getPct(new  int[]  {  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	getPct(new  int[]  {  v  }  );	  return    getPct(new    int[]    {    v    }    );    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  missing  return  statement	35	None	replace
34	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    int[]    {    v    }    );    getPct(new    int[]    {    v    }    );    	compilable	  [FE]  IllegalArgumentException  	35	2	replace
35	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    int[]    {    v    }    );    getPct(new    int[]    {    v    }    );    	compilable	  [FE]  IllegalArgumentException  	35	2	replace
36	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  [CE]  missing  return  statement  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  missing  return  statement	35	None	replace
37	[BUG]  [BUGGY]  int  v  =  freqTable.get(variable);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.get(variable);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.get(variable);	  int    v    =    this.sumFreqTable.get(variable);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	55	None	replace
38	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.get(result);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.get(result);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreqTable.get(result);	  int    v    =    this.sumFreqTable.get(variable);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	55	None	replace
39	[BUG]  [BUGGY]  int  v  =  freqTable.get(this.sumFreqTable);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.get(this.sumFreqTable);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.get(this.sumFreqTable);	  int    v    =    this.sumFreqTable.get(this.sumFreqTable);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	56	None	replace
40	[BUG]  [BUGGY]  long  v  =  this.sumFreqTable.get(this.sumFreqTable);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  this.sumFreqTable.get(this.sumFreqTable);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  this.sumFreqTable.get(this.sumFreqTable);	  int    v    =    this.sumFreqTable.get(this.sumFreqTable);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	56	None	replace
41	[BUG]  [BUGGY]  double  v  =  this.sumFreqTable.get(this.sumFreqTable);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  this.sumFreqTable.get(this.sumFreqTable);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  this.sumFreqTable.get(this.sumFreqTable);	  int    v    =    this.sumFreqTable.get(this.sumFreqTable);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	56	None	replace
42	[BUG]  [BUGGY]  this.maxFreq  =  sumFreqTable.get(v);  [CE]  cannot  find  symbol  maxFreq  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.maxFreq  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.maxFreq  =  sumFreqTable.get(v);	  this.maxFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	28	None	replace
43	[BUG]  [BUGGY]  this.maxFreq  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  maxFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.maxFreq  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.maxFreq  =  freqTable.get(v  -  1);	  this.maxFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	28	None	replace
44	[BUG]  [BUGGY]  this.maxFreq  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  maxFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.maxFreq  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.maxFreq  =  freqTable.get(v  +  1);	  this.maxFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	28	None	replace
45	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable.size()  -  1);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable.size()  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreqTable.get(this.sumFreqTable.size()  -  1);	  int    v    =    this.sumFreqTable.get(this.sumFreqTable.size());    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	54	None	replace
46	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable.size()  -  2);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable.size()  -  2);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreqTable.get(this.sumFreqTable.size()  -  2);	  int    v    =    this.sumFreqTable.get(this.sumFreqTable.size());    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	54	None	replace
47	[BUG]  [BUGGY]  int  v  =  freqTable.get(this.sumFreqTable.size());  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.get(this.sumFreqTable.size());  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.get(this.sumFreqTable.size());	  int    v    =    this.sumFreqTable.get(this.sumFreqTable.size());    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	54	None	replace
48	[BUG]  [BUGGY]  double  v  =  this.sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  this.sumFreqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  this.sumFreqTable.size();	  int    v    =    this.sumFreqTable.size()    +    1;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	79	None	replace
49	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  v);  [CE]  no  suitable  method  found  for  getPct(int[],int)  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  v);	  return    getPct(new    int[]    {    v    }    );    if(v    <    0)    {    return    getPct(new    int[]    {    v    }    );    }    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int[],int)	72	None	replace
50	[BUG]  [BUGGY]  return  getPct(new  int[v]);  getPct(new  int[v]);  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v]);  getPct(new  int[v]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[v]);    getPct(new  int[v]);	  	non-compiled	[CE]  unreachable  statement	97	None	add
51	[BUG]  [BUGGY]  return  getPct(new  int[v]);  if(v  <  =  0)  {  return  getPct(new  int[v]);  }  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v]);  if(v  <  =  0)  {  return  getPct(new  int[v]);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[v]);    if(v  <  =  0)  {  return  getPct(new  int[v]);  }	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
52	[BUG]  [BUGGY]  return  getPct(new  int[v]);  if(v  <  =  0)  {  return  getPct(new  int[v]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v]);  if(v  <  =  0)  {  return  getPct(new  int[v]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[v]);    if(v  <  =  0)  {  return  getPct(new  int[v]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
53	[BUG]  [BUGGY]  return  getPct(new  int[v]);  this.sumFreqTable.put(v,  getPct(new  int[v]);  [CE]  ')'  expected  [FE]          ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v]);  this.sumFreqTable.put(v,  getPct(new  int[v]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[v]);    this.sumFreqTable.put(v,  getPct(new  int[v]);	  	non-compiled	[CE]  ')'  expected	97	None	add
54	[BUG]  [BUGGY]  return  getPct(new  int[v]);  this.sumFreqTable.put(v,  getPct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]            ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v]);  this.sumFreqTable.put(v,  getPct(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[v]);    this.sumFreqTable.put(v,  getPct(v));	  	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	97	None	add
55	[BUG]  [BUGGY]  this.result  =  sumFreqTable.get(v);  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.result  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.result  =  sumFreqTable.get(v);	  this.result    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  result	29	None	replace
56	[BUG]  [BUGGY]  this.result  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.result  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.result  =  freqTable.get(v  -  1);	  this.result    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  result	29	None	replace
57	[BUG]  [BUGGY]  this.result  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.result  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.result  =  freqTable.get(v  +  1);	  this.result    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  result	29	None	replace
58	[BUG]  [BUGGY]  return  getFreqTable().getPct(new  int[]  {  v,  v  }  );  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getFreqTable().getPct(new  int[]  {  v,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getFreqTable().getPct(new  int[]  {  v,  v  }  );	  return    getFreqTable().getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
59	[BUG]  [BUGGY]  return  freqTable.getPct(new  int[]  {  v  }  );  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  freqTable.getPct(new  int[]  {  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  freqTable.getPct(new  int[]  {  v  }  );	  return    getFreqTable().getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
60	[BUG]  [BUGGY]  return  getFreqTable().getPct(new  int[]  {  v  },  freqTable);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getFreqTable().getPct(new  int[]  {  v  },  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getFreqTable().getPct(new  int[]  {  v  },  freqTable);	  return    getFreqTable().getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
61	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.getVariance()  *  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.getVariance()  *  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreqTable.getVariance()  *  1;	  int    v    =    this.sumFreqTable.getVariance()    +    1;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	70	None	replace
62	[BUG]  [BUGGY]  double  v  =  this.sumFreqTable.getVariance()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  this.sumFreqTable.getVariance()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  this.sumFreqTable.getVariance()  +  1;	  int    v    =    this.sumFreqTable.getVariance()    +    1;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	70	None	replace
63	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    if(v    <    =    0)    {    return    getPct(new    int[]    {    v    }    );    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
64	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  getPct(new  int[]  {  v,  0  }  );  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  getPct(new  int[]  {  v,  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    0    }    );    getPct(new  int[]  {  v,  0  }  );	  	non-compiled	[CE]  unreachable  statement	33	None	add
65	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  int[]  v  =  getPct(new  int[]  {  v,  0  }  );  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  int[]  v  =  getPct(new  int[]  {  v,  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    0    }    );    int[]  v  =  getPct(new  int[]  {  v,  0  }  );	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	33	None	add
66	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  v  =  getPct(new  int[]  {  v,  0  }  );  [CE]  possible  loss  of  precision  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  v  =  getPct(new  int[]  {  v,  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    0    }    );    v  =  getPct(new  int[]  {  v,  0  }  );	  	non-compiled	[CE]  possible  loss  of  precision	33	None	add
67	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  int[]  v  =  getPct(new  int[]  {  v,  0,  0  }  );  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]          ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  int[]  v  =  getPct(new  int[]  {  v,  0,  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    0    }    );    int[]  v  =  getPct(new  int[]  {  v,  0,  0  }  );	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	33	None	add
68	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  v  =  getPct(new  int[]  {  v,  0,  0  }  );  [CE]  possible  loss  of  precision  [FE]            ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  v  =  getPct(new  int[]  {  v,  0,  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    0    }    );    v  =  getPct(new  int[]  {  v,  0,  0  }  );	  	non-compiled	[CE]  possible  loss  of  precision	33	None	add
69	[BUG]  [BUGGY]  double  v  =  freqTable.get(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  freqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  freqTable.get(v);	  double    v    =    sumFreqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	46	None	replace
70	[BUG]  [BUGGY]  Double  v  =  freqTable.get(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Double  v  =  freqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Double  v  =  freqTable.get(v);	  double    v    =    sumFreqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	46	None	replace
71	[BUG]  [BUGGY]  return  getPct(0,  v,  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(0,  v,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(0,  v,  sumFreqTable);	  return    getPct(0,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	50	None	replace
72	[BUG]  [BUGGY]  return  getPct(0,  sumFreqTable,  v);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(0,  sumFreqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(0,  sumFreqTable,  v);	  return    getPct(0,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	50	None	replace
73	[BUG]  [BUGGY]  return  getPct(0,  v,  sumFreqTable.length);  [CE]  cannot  find  symbol  sumFreqTable  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(0,  v,  sumFreqTable.length);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(0,  v,  sumFreqTable.length);	  return    getPct(0,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	50	None	replace
74	[BUG]  [BUGGY]  return  getPct(0,  0,  v);  [CE]  no  suitable  method  found  for  getPct(int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(0,  0,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(0,  0,  v);	  return    getPct(0,    v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,int,int)	50	None	replace
75	[BUG]  [BUGGY]  long  v  =  this.sumFreqTable.size()  -  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  this.sumFreqTable.size()  -  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  this.sumFreqTable.size()  -  1;	  long    v    =    this.sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	68	None	replace
76	[BUG]  [BUGGY]  long  v  =  this.sumFreqTable.size()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  this.sumFreqTable.size()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  this.sumFreqTable.size()  +  1;	  long    v    =    this.sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	68	None	replace
77	[BUG]  [BUGGY]  this.sumFreqTable  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreqTable  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreqTable  =  freqTable.get(v  -  1);	  this.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	51	None	replace
78	[BUG]  [BUGGY]  this.sumFreqTable  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  sumFreqTable  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreqTable  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreqTable  =  freqTable.get(v  +  1);	  this.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	51	None	replace
79	[BUG]  [BUGGY]  this.sumFreqTable  =  freqTable.get(v  -  2);  [CE]  cannot  find  symbol  sumFreqTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreqTable  =  freqTable.get(v  -  2);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreqTable  =  freqTable.get(v  -  2);	  this.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	51	None	replace
80	[BUG]  [BUGGY]  int  v  =  sumFreqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  sumFreqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  sumFreqTable.doubleValue();	  int    v    =    freqTable.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	8	None	replace
81	[BUG]  [BUGGY]  double  v  =  freqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  freqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  freqTable.doubleValue();	  int    v    =    freqTable.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	8	None	replace
82	[BUG]  [BUGGY]  long  v  =  freqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  freqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  freqTable.doubleValue();	  int    v    =    freqTable.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	8	None	replace
83	[BUG]  [BUGGY]  v  =  sumFreqTable.doubleValue();  [CE]  cannot  find  symbol  sumFreqTable  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  v  =  sumFreqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	v  =  sumFreqTable.doubleValue();	  int    v    =    freqTable.doubleValue();    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	8	None	replace
84	[BUG]  [BUGGY]  int[]  v  =  getPct(new  int[]  {  v  }  );  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int[]  v  =  getPct(new  int[]  {  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int[]  v  =  getPct(new  int[]  {  v  }  );	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getPct(new    int[]    {    v    }    );    return    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	37	None	replace
85	[BUG]  [BUGGY]  int  v  =  getPct(new  int[]  {  v  }  );  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  getPct(new  int[]  {  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  getPct(new  int[]  {  v  }  );	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getPct(new    int[]    {    v    }    );    return    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	37	None	replace
86	[BUG]  [BUGGY]  this.maxFreq  =  sumFreqTable.getPct(v);  [CE]  cannot  find  symbol  maxFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.maxFreq  =  sumFreqTable.getPct(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.maxFreq  =  sumFreqTable.getPct(v);	  this.maxFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	19	None	replace
87	[BUG]  [BUGGY]  this.maxFreq  =  freqTable.getPct(v  -  1);  [CE]  cannot  find  symbol  maxFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.maxFreq  =  freqTable.getPct(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.maxFreq  =  freqTable.getPct(v  -  1);	  this.maxFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	19	None	replace
88	[BUG]  [BUGGY]  this.maxFreq  =  maxFreqTable.getPct(v);  [CE]  cannot  find  symbol  maxFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.maxFreq  =  maxFreqTable.getPct(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.maxFreq  =  maxFreqTable.getPct(v);	  this.maxFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	19	None	replace
89	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  0);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  sumFreq,  0);	  return    getPct(Long.parseLong(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	63	None	replace
90	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  v);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  sumFreq,  v);	  return    getPct(Long.parseLong(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	63	None	replace
91	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  0.0);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  0.0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  sumFreq,  0.0);	  return    getPct(Long.parseLong(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	63	None	replace
92	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1));  getPct(new  Long(v  -  1));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1));  getPct(new  Long(v  -  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v    -    1));    getPct(new  Long(v  -  1));	  	non-compiled	[CE]  unreachable  statement	99	None	add
93	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  getPct(new  Long(v  -  1));  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  getPct(new  Long(v  -  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v    -    1));    int  v  =  getPct(new  Long(v  -  1));	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	99	None	add
94	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  sumFreqTable.get(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  sumFreqTable.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v    -    1));    int  v  =  sumFreqTable.get(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	99	None	add
95	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  sumFreqTable.size();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v    -    1));    int  v  =  sumFreqTable.size();	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	99	None	add
96	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  sumFreqTable.getVariance(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  sumFreqTable.getVariance(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v    -    1));    int  v  =  sumFreqTable.getVariance(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	99	None	add
97	[BUG]  [BUGGY]  int  result  =  getPct(Long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  result  =  getPct(Long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  result  =  getPct(Long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    if(result    ==    0)    {    return    result;    }    	non-compiled	[CE]  possible  loss  of  precision	81	None	replace
98	[BUG]  [BUGGY]  int  result  =  getPct(Long.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  result  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  result  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    if(result    ==    0)    {    return    result;    }    	non-compiled	[CE]  possible  loss  of  precision	81	None	replace
99	[BUG]  [BUGGY]  int  result  =  getPct(Integer.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  result  =  getPct(Integer.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  result  =  getPct(Integer.MAX_VALUE);  if(result  ==  0)  {  return  result;  }	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    if(result    ==    0)    {    return    result;    }    	non-compiled	[CE]  possible  loss  of  precision	81	None	replace
100	[BUG]  [BUGGY]  null  v  =  getPct(new  Long(v));  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  null  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	null  v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    long    v    =    getPct(new    Long(v));    	non-compiled	[CE]  not  a  statement	87	None	replace
101	[BUG]  [BUGGY]  int  v  =  getPct(new  Long(v));  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    long    v    =    getPct(new    Long(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	87	None	replace
102	[BUG]  [BUGGY]  long  v  =  getPct(new  Long(v));  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    long    v    =    getPct(new    Long(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	87	None	replace
103	[BUG]  [BUGGY]  getPct(Long.MAX_VALUE);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	57	None	replace
104	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  },  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  },  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  v  },  sumFreqTable);	  return    getPct(new    int[]    {    v,    v    }    );    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	31	None	replace
105	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  0,  0,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[]  {  0,  0,  v  }  );	  return    getPct(new    int[]    {    v,    v    }    );    	compilable	  [FE]  ClassCastException  	31	2	replace
106	[BUG]  [BUGGY]  return  getPct(new  int[]  {  0,  0,  v  }  );  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  0,  0,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  0,  0,  v  }  );	  return    getPct(new    int[]    {    v,    v    }    );    	compilable	  [FE]  ClassCastException  	31	2	replace
107	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  },  freqTable);  [CE]  no  suitable  method  found  for  getPct(int[],TreeMap<Comparable<?>,Long>)  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  },  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  v  },  freqTable);	  return    getPct(new    int[]    {    v,    v    }    );    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int[],TreeMap<Comparable<?>,Long>)	31	None	replace
108	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  sumFreqTable.put(v,  new  Integer(v));  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  sumFreqTable.put(v,  new  Integer(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  sumFreqTable.put(v,  new  Integer(v));  }	  return    getPct(new    int[]    {    v    }    );    if(v    <    =    0)    {    return    getPct(new    int[]    {    v    }    );    }    else    {    sumFreqTable.put(v,    new    Integer(v));    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
109	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  sumFreqTable.put(v,  new  Integer(v));  }  [CE]  cannot  find  symbol  sumFreqTable  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  sumFreqTable.put(v,  new  Integer(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  sumFreqTable.put(v,  new  Integer(v));  }	  return    getPct(new    int[]    {    v    }    );    if(v    <    =    0)    {    return    getPct(new    int[]    {    v    }    );    }    else    {    sumFreqTable.put(v,    new    Integer(v));    }    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	102	None	replace
110	[BUG]  [BUGGY]  this.sumFreqTable.put(v,  new  Integer(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreqTable.put(v,  new  Integer(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreqTable.put(v,  new  Integer(v));	  return    getPct(new    int[]    {    v    }    );    if(v    <    =    0)    {    return    getPct(new    int[]    {    v    }    );    }    else    {    sumFreqTable.put(v,    new    Integer(v));    }    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	102	None	replace
111	[BUG]  [BUGGY]  int  v  =  sumFreqTable.getVariance();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  sumFreqTable.getVariance();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  sumFreqTable.getVariance();	  int    v    =    freqTable.getVariance();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	14	None	replace
112	[BUG]  [BUGGY]  long  v  =  freqTable.getVariance();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  freqTable.getVariance();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  freqTable.getVariance();	  int    v    =    freqTable.getVariance();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	14	None	replace
113	[BUG]  [BUGGY]  double  v  =  freqTable.getVariance();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  freqTable.getVariance();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  freqTable.getVariance();	  int    v    =    freqTable.getVariance();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	14	None	replace
114	[BUG]  [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(v);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(v);  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    sumFreqTable.get(v);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
115	[BUG]  [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(v);  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(v);  }  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(v);  }  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    sumFreqTable.get(v);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
116	[BUG]  [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  [CE]  cannot  find  symbol  sumFreqTable  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    sumFreqTable.get(v);    }    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	104	None	replace
117	[BUG]  [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(0);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(0);  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    sumFreqTable.get(v);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
118	[BUG]  [BUGGY]  return  getPct(getFreqTable().valueOf(v),  v);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(getFreqTable().valueOf(v),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(getFreqTable().valueOf(v),  v);	  return    getPct(getFreqTable().valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
119	[BUG]  [BUGGY]  return  getPct(getFreqTable(),  freqTable.valueOf(v));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(getFreqTable(),  freqTable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(getFreqTable(),  freqTable.valueOf(v));	  return    getPct(getFreqTable().valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
120	[BUG]  [BUGGY]  return  getPct(getFreqTable().doubleValue(v));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(getFreqTable().doubleValue(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(getFreqTable().doubleValue(v));	  return    getPct(getFreqTable().valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
121	[BUG]  [BUGGY]  return  getPct(new  Integer(v));  getPct(new  Integer(v));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v));  getPct(new  Integer(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Integer(v));    getPct(new  Integer(v));	  	non-compiled	[CE]  unreachable  statement	40	None	add
122	[BUG]  [BUGGY]  return  getPct(new  Integer(v));  Integer  v  =  getPct(new  Integer(v));  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v));  Integer  v  =  getPct(new  Integer(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Integer(v));    Integer  v  =  getPct(new  Integer(v));	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	40	None	add
123	[BUG]  [BUGGY]  return  getPct(new  Integer(v));  int  v  =  getPct(new  Integer(v));  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v));  int  v  =  getPct(new  Integer(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Integer(v));    int  v  =  getPct(new  Integer(v));	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	40	None	add
124	[BUG]  [BUGGY]  return  getPct(new  Integer(v));  int  v  =  sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v));  int  v  =  sumFreqTable.size();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Integer(v));    int  v  =  sumFreqTable.size();	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	40	None	add
125	[BUG]  [BUGGY]  return  getPct(new  Integer(v));  int  v  =  sumFreqTable.getVariance(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v));  int  v  =  sumFreqTable.getVariance(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Integer(v));    int  v  =  sumFreqTable.getVariance(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	40	None	add
126	[BUG]  [BUGGY]  int  v  =  getSumFreqTable().getVisibleNumber(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  getSumFreqTable().getVisibleNumber(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  getSumFreqTable().getVisibleNumber(v);	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisibleNumber(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	61	None	replace
127	[BUG]  [BUGGY]  long  v  =  getSumFreqTable().getVisibleNumber(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  getSumFreqTable().getVisibleNumber(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  getSumFreqTable().getVisibleNumber(v);	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisibleNumber(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	61	None	replace
128	[BUG]  [BUGGY]  null  v  =  getSumFreqTable().getVisibleNumber(v);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  null  v  =  getSumFreqTable().getVisibleNumber(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	null  v  =  getSumFreqTable().getVisibleNumber(v);	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisibleNumber(v);    	non-compiled	[CE]  not  a  statement	61	None	replace
129	[BUG]  [BUGGY]  v  =  getSumFreqTable().getVisibleNumber(v);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  v  =  getSumFreqTable().getVisibleNumber(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	v  =  getSumFreqTable().getVisibleNumber(v);	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisibleNumber(v);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
130	[BUG]  [BUGGY]  long  v  =  freqTable.get(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  freqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  freqTable.get(v);	  long    v    =    sumFreqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	69	None	replace
131	[BUG]  [BUGGY]  Integer  v  =  sumFreqTable.get(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Integer  v  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Integer  v  =  sumFreqTable.get(v);	  long    v    =    sumFreqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	69	None	replace
132	[BUG]  [BUGGY]  return  getPct(long.parseLong(v),  sumFreq,  v);  [CE]  class  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(long.parseLong(v),  sumFreq,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(long.parseLong(v),  sumFreq,  v);	  return    getPct(Long.parseLong(v),    v);    	non-compiled	[CE]  class  expected	83	None	replace
133	[BUG]  [BUGGY]  return  getPct(Long.parseLong(sumFreq,  v),  v);  [CE]  cannot  find  symbol  sumFreq  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(sumFreq,  v),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(sumFreq,  v),  v);	  return    getPct(Long.parseLong(v),    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	83	None	replace
134	[BUG]  [BUGGY]  double  result  =  getPct(Long.valueOf(v));  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  result  =  getPct(Long.valueOf(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  result  =  getPct(Long.valueOf(v));	  int    result    =    getPct(Long.valueOf(v));    	non-compiled	[CE]  missing  return  statement	1	None	replace
135	[BUG]  [BUGGY]  [FE]  NegativeArraySizeException  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v  -  1]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[v  -  1]);	  return    getPct(new    int[v]);    	compilable	  [FE]  NegativeArraySizeException  	98	2	replace
136	[BUG]  [BUGGY]  return  getPct(new  int[v  -  1]);  [FE]  NegativeArraySizeException  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v  -  1]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[v  -  1]);	  return    getPct(new    int[v]);    	compilable	  [FE]  NegativeArraySizeException  	98	2	replace
137	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[0]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[0]);	  return    getPct(new    int[v]);    	compilable	  [FE]  ClassCastException  	98	2	replace
138	[BUG]  [BUGGY]  return  getPct(new  int[0]);  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[0]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[0]);	  return    getPct(new    int[v]);    	compilable	  [FE]  ClassCastException  	98	2	replace
139	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[1]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[1]);	  return    getPct(new    int[v]);    	compilable	  [FE]  ClassCastException  	98	2	replace
140	[BUG]  [BUGGY]  return  getPct(new  int[1]);  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[1]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[1]);	  return    getPct(new    int[v]);    	compilable	  [FE]  ClassCastException  	98	2	replace
141	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    int[]    {    v    }    ;    return    getPct(new    int[]    {    v    }    );    	compilable	  [FE]  ClassCastException  	75	2	replace
142	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    int[]    {    v    }    ;    return    getPct(new    int[]    {    v    }    );    	compilable	  [FE]  ClassCastException  	75	2	replace
143	[BUG]  [BUGGY]  if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  }  [CE]  missing  return  statement  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    int[]    {    v    }    ;    return    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  missing  return  statement	75	None	replace
144	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  This  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreq  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreq  =  freqTable.get(v  -  1);	  This.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	93	None	replace
145	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  This  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreq  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreq  =  freqTable.get(v  +  1);	  This.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	93	None	replace
146	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.get(v  -  2);  [CE]  cannot  find  symbol  This  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreq  =  freqTable.get(v  -  2);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreq  =  freqTable.get(v  -  2);	  This.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	93	None	replace
147	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1),  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1),  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v  -  1),  sumFreqTable);	  return    getPct(new    Long(v    -    1));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	100	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v  -  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Integer(v  -  1));	  return    getPct(new    Long(v    -    1));    	compilable	  [FE]  AssertionFailedError  	100	1	replace
149	[BUG]  [BUGGY]  return  getPct(new  Integer(v  -  1));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v  -  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Integer(v  -  1));	  return    getPct(new    Long(v    -    1));    	compilable	  [FE]  AssertionFailedError  	100	1	replace
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  /  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Long(v  /  1));	  return    getPct(new    Long(v    -    1));    	compilable	  [FE]  AssertionFailedError  	100	1	replace
151	[BUG]  [BUGGY]  return  getPct(new  Long(v  /  1));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  /  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v  /  1));	  return    getPct(new    Long(v    -    1));    	compilable	  [FE]  AssertionFailedError  	100	1	replace
152	[BUG]  [BUGGY]  return  getPct(v.valueOf(v));  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v.valueOf(v));	  return    getPct(n.valueOf(v));    	non-compiled	[CE]  int  cannot  be  dereferenced	95	None	replace
153	[BUG]  [BUGGY]  return  getPct(sumFreq.valueOf(v));  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(sumFreq.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(sumFreq.valueOf(v));	  return    getPct(n.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	95	None	replace
154	[BUG]  [BUGGY]  int[]  v  =  getSumFreqTable().getPct(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int[]  v  =  getSumFreqTable().getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int[]  v  =  getSumFreqTable().getPct(v);	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getSumFreqTable().getPct(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	39	None	replace
155	[BUG]  [BUGGY]  v  =  getSumFreqTable().getPct(v);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  v  =  getSumFreqTable().getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	v  =  getSumFreqTable().getPct(v);	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getSumFreqTable().getPct(v);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
156	[BUG]  [BUGGY]  return  getPct(new  int[]  {  0  }  );  int[]  v  =  getSumFreqTable().getPct(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  0  }  );  int[]  v  =  getSumFreqTable().getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  0  }  );  int[]  v  =  getSumFreqTable().getPct(v);	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getSumFreqTable().getPct(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	39	None	replace
157	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.getPct(v  -  1);  [CE]  cannot  find  symbol  This  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreq  =  freqTable.getPct(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreq  =  freqTable.getPct(v  -  1);	  This.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	71	None	replace
158	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  0);  [CE]  cannot  find  symbol  This  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreq  =  freqTable.getPct(v,  0);	  This.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	71	None	replace
159	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.getPct(v  +  1);  [CE]  cannot  find  symbol  This  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreq  =  freqTable.getPct(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreq  =  freqTable.getPct(v  +  1);	  This.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	71	None	replace
160	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  getPct(new  int[]  {  v,  v  }  );  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  getPct(new  int[]  {  v,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    getPct(new  int[]  {  v,  v  }  );	  	non-compiled	[CE]  unreachable  statement	30	None	add
161	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  v  =  getPct(new  int[]  {  v,  v  }  );  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  v  =  getPct(new  int[]  {  v,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    int[]  v  =  getPct(new  int[]  {  v,  v  }  );	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	30	None	add
162	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  v  =  getPct(new  int[]  {  v,  v  }  );  return  getPct(new  int[]  {  v,  v  }  );  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  v  =  getPct(new  int[]  {  v,  v  }  );  return  getPct(new  int[]  {  v,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    int[]  v  =  getPct(new  int[]  {  v,  v  }  );  return  getPct(new  int[]  {  v,  v  }  );	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	30	None	add
163	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  v  =  new  int[size()  ];  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]          ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  v  =  new  int[size()  ];  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    int[]  v  =  new  int[size()  ];	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	30	None	add
164	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  v  =  getPct(new  int[]  {  0,  v  }  );  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]            ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  v  =  getPct(new  int[]  {  0,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    int[]  v  =  getPct(new  int[]  {  0,  v  }  );	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	30	None	add
165	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(v  -  1);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	49	2	replace
166	[BUG]  [BUGGY]  return  getPct(v  -  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v  -  1);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	49	2	replace
167	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(v  +  1);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	49	2	replace
168	[BUG]  [BUGGY]  return  getPct(v  +  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v  +  1);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	49	2	replace
169	[BUG]  [BUGGY]  return  getPct(v,  0);  [CE]  no  suitable  method  found  for  getPct(int,int)  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v,  0);	  return    getPct(v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,int)	49	None	replace
170	[BUG]  [BUGGY]  this.serialVersionUID  =  sumFreqTable.get(v);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.serialVersionUID  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.serialVersionUID  =  sumFreqTable.get(v);	  this.serialVersionUID    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	53	None	replace
171	[BUG]  [BUGGY]  this.serialVersionUID  =  freqTable.get(v  -  1);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.serialVersionUID  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.serialVersionUID  =  freqTable.get(v  -  1);	  this.serialVersionUID    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	53	None	replace
172	[BUG]  [BUGGY]  this.serialVersionUID  =  freqTable.get(v  +  1);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.serialVersionUID  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.serialVersionUID  =  freqTable.get(v  +  1);	  this.serialVersionUID    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	53	None	replace
173	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  sumFreqTable.length  }  );  [CE]  ')'  expected  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  sumFreqTable.length  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  sumFreqTable.length  }  );	  return    getPct(new    int[]    {    v    },    v    }    );    	non-compiled	[CE]  ')'  expected	88	None	replace
174	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  0,  v  }  );  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  0,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  0,  v  }  );	  return    getPct(new    int[]    {    v    },    v    }    );    	non-compiled	[CE]  ')'  expected	88	None	replace
175	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  0  }  );  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  0  }  );	  return    getPct(new    int[]    {    v    },    v    }    );    	non-compiled	[CE]  ')'  expected	88	None	replace
176	[BUG]  [BUGGY]  int  v  =  freqTable.get(this.sumFreqTable.length);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.get(this.sumFreqTable.length);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.get(this.sumFreqTable.length);	  int    v    =    this.sumFreqTable.get(this.sumFreqTable.length);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	107	None	replace
177	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable.length  -  1);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable.length  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreqTable.get(this.sumFreqTable.length  -  1);	  int    v    =    this.sumFreqTable.get(this.sumFreqTable.length);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	107	None	replace
178	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable.length,  v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable.length,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreqTable.get(this.sumFreqTable.length,  v);	  int    v    =    this.sumFreqTable.get(this.sumFreqTable.length);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	107	None	replace
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Long(v)/  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  AssertionFailedError  	77	1	replace
180	[BUG]  [BUGGY]  return  getPct(new  Long(v)/  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v)/  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  AssertionFailedError  	77	1	replace
181	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Integer(v)+  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	77	2	replace
182	[BUG]  [BUGGY]  return  getPct(new  Integer(v)+  1);  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Integer(v)+  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	77	2	replace
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)+  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Long(v)+  2);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  AssertionFailedError  	77	1	replace
184	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  2);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)+  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v)+  2);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  AssertionFailedError  	77	1	replace
185	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreq  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreq  =  freqTable.get(v  -  1);	  this.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	27	None	replace
186	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  sumFreq  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreq  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreq  =  freqTable.get(v  +  1);	  this.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	27	None	replace
187	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.get(v  -  2);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreq  =  freqTable.get(v  -  2);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreq  =  freqTable.get(v  -  2);	  this.sumFreq    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	27	None	replace
188	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  freqTable  }  );  [CE]  incompatible  types  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  freqTable  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  freqTable  }  );	  return    getPct(new    int[]    {    v,    sumFreq    }    );    	non-compiled	[CE]  incompatible  types	32	None	replace
189	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  0,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[]  {  0,  v  }  );	  return    getPct(new    int[]    {    v,    sumFreq    }    );    	compilable	  [FE]  ClassCastException  	32	2	replace
190	[BUG]  [BUGGY]  return  getPct(new  int[]  {  0,  v  }  );  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  0,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  0,  v  }  );	  return    getPct(new    int[]    {    v,    sumFreq    }    );    	compilable	  [FE]  ClassCastException  	32	2	replace
191	[BUG]  [BUGGY]  return  getPct(new  Double(v),  0);  [CE]  no  suitable  method  found  for  getPct(Double,int)  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v),  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Double(v),  0);	  return    getPct(new    Double(v));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Double,int)	44	None	replace
192	[BUG]  [BUGGY]  return  getPct(new  Double(v),  0.0);  [CE]  no  suitable  method  found  for  getPct(Double,double)  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v),  0.0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Double(v),  0.0);	  return    getPct(new    Double(v));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Double,double)	44	None	replace
193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v  -  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Double(v  -  1));	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	44	1	replace
194	[BUG]  [BUGGY]  return  getPct(new  Double(v  -  1));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v  -  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Double(v  -  1));	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	44	1	replace
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Float(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Float(v));	  return    getPct(new    Long(v));    return    getPct(new    Long(v));    	compilable	  [FE]  AssertionFailedError  	86	1	replace
196	[BUG]  [BUGGY]  return  getPct(new  Float(v));  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Float(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Float(v));	  return    getPct(new    Long(v));    return    getPct(new    Long(v));    	compilable	  [FE]  AssertionFailedError  	86	1	replace
197	[BUG]  [BUGGY]  return  getPct(sumFreqTable.parseLong(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(sumFreqTable.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(sumFreqTable.parseLong(v));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	64	None	replace
198	[BUG]  [BUGGY]  return  getPct(v.parseLong(v));  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v.parseLong(v));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  int  cannot  be  dereferenced	64	None	replace
199	[BUG]  [BUGGY]  return  getPct(sumFreqTable.parseInt(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(sumFreqTable.parseInt(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(sumFreqTable.parseInt(v));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	64	None	replace
200	[BUG]  [BUGGY]  return  getPct(sumFreq.parseLong(v));  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(sumFreq.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(sumFreq.parseLong(v));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	64	None	replace
201	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v,  v));  [CE]  no  suitable  method  found  for  parseLong(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v,  v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v,  v));	  return    getPct(Long.parseLong(sumFreq,    v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int,int)	65	None	replace
202	[BUG]  [BUGGY]  return  getPct(Long.parseLong(result,  v));  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(result,  v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(result,  v));	  return    getPct(Long.parseLong(sumFreq,    v));    	non-compiled	[CE]  cannot  find  symbol  result	65	None	replace
203	[BUG]  [BUGGY]  return  getPct(Long.parseLong(freqTable,  v));  [CE]  no  suitable  method  found  for  parseLong(TreeMap<Comparable<?>,Long>,int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(freqTable,  v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(freqTable,  v));	  return    getPct(Long.parseLong(sumFreq,    v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(TreeMap<Comparable<?>,Long>,int)	65	None	replace
204	[BUG]  [BUGGY]  return  getPct(Long.parseLong(variable,  v));  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(variable,  v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(variable,  v));	  return    getPct(Long.parseLong(sumFreq,    v));    	non-compiled	[CE]  cannot  find  symbol  	65	None	replace
205	[BUG]  [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v,  Long.MAX_VALUE,  sumFreqTable);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	84	None	replace
206	[BUG]  [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v,  Long.MAX_VALUE,  sumFreq);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	84	None	replace
207	[BUG]  [BUGGY]  return  getPct(v,  v,  Long.MAX_VALUE);  [CE]  no  suitable  method  found  for  getPct(int,int,long)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v,  v,  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v,  v,  Long.MAX_VALUE);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,int,long)	84	None	replace
208	[BUG]  [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  v);  [CE]  no  suitable  method  found  for  getPct(int,long,int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v,  Long.MAX_VALUE,  v);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,long,int)	84	None	replace
209	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  freqTable);  [CE]  no  suitable  method  found  for  getPct(int[],TreeMap<Comparable<?>,Long>)  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  freqTable);	  return    getPct(new    int[]    {    v    },    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int[],TreeMap<Comparable<?>,Long>)	106	None	replace
210	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  this.freqTable);  [CE]  no  suitable  method  found  for  getPct(int[],TreeMap<Comparable<?>,Long>)  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  this.freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  this.freqTable);	  return    getPct(new    int[]    {    v    },    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int[],TreeMap<Comparable<?>,Long>)	106	None	replace
211	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  this.result);  [CE]  cannot  find  symbol  result  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  this.result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  this.result);	  return    getPct(new    int[]    {    v    },    sumFreqTable);    	non-compiled	[CE]  cannot  find  symbol  result	106	None	replace
212	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  FREQUENCE);  [CE]  cannot  find  symbol  FREQUENCE  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  FREQUENCE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  FREQUENCE);	  return    getPct(new    int[]    {    v    },    sumFreqTable);    	non-compiled	[CE]  cannot  find  symbol  FREQUENCE	106	None	replace
213	[BUG]  [BUGGY]  long  v  =  this.sumFreqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  this.sumFreqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  this.sumFreqTable.doubleValue();	  long    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	9	None	replace
214	[BUG]  [BUGGY]  return  getPct(v);  getPct(v);  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    getPct(v);	  	non-compiled	[CE]  unreachable  statement	48	None	add
215	[BUG]  [BUGGY]  return  getPct(v);  int  v  =  getPct(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  int  v  =  getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    int  v  =  getPct(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	48	None	add
216	[BUG]  [BUGGY]  return  getPct(v);  double  v  =  getPct(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  double  v  =  getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    double  v  =  getPct(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	48	None	add
217	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  return  getPct(v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  return  getPct(v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    if(v  <  =  0)  {  return  getPct(v);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
218	[BUG]  [BUGGY]  return  getPct(v);  return  getPct(v);  [CE]  unreachable  statement  [FE]            StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  return  getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    return  getPct(v);	  	non-compiled	[CE]  unreachable  statement	48	None	add
219	[BUG]  [BUGGY]  This.sumFreqTable  =  freqTable.get(v  -  1);  [CE]  cannot  find  symbol  This  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreqTable  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreqTable  =  freqTable.get(v  -  1);	  This.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	92	None	replace
220	[BUG]  [BUGGY]  This.sumFreqTable  =  freqTable.get(v  +  1);  [CE]  cannot  find  symbol  This  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreqTable  =  freqTable.get(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreqTable  =  freqTable.get(v  +  1);	  This.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	92	None	replace
221	[BUG]  [BUGGY]  This.sumFreqTable  =  freqTable.get(v  -  2);  [CE]  cannot  find  symbol  This  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreqTable  =  freqTable.get(v  -  2);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreqTable  =  freqTable.get(v  -  2);	  This.sumFreqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  This	92	None	replace
222	[BUG]  [BUGGY]  null  result  =  getPct(Long.MAX_VALUE);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  null  result  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	null  result  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	59	None	replace
223	[BUG]  [BUGGY]  int  result  =  getPct(Integer.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  result  =  getPct(Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  result  =  getPct(Integer.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  possible  loss  of  precision	59	None	replace
224	[BUG]  [BUGGY]  result  =  getPct(Long.MAX_VALUE);  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  result  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	result  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  result	59	None	replace
225	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  getPct(new  Long(v)+  1);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  getPct(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v)+    1);    getPct(new  Long(v)+  1);	  	non-compiled	[CE]  unreachable  statement	76	None	add
226	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  return  getPct(new  Long(v)+  1);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  return  getPct(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v)+    1);    return  getPct(new  Long(v)+  1);	  	non-compiled	[CE]  unreachable  statement	76	None	add
227	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  int  v  =  getPct(new  Long(v)+  1);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  int  v  =  getPct(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v)+    1);    int  v  =  getPct(new  Long(v)+  1);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	76	None	add
228	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  int  v  =  sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  int  v  =  sumFreqTable.size();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v)+    1);    int  v  =  sumFreqTable.size();	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	76	None	add
229	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  int  v  =  sumFreqTable.get(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  int  v  =  sumFreqTable.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v)+    1);    int  v  =  sumFreqTable.get(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	76	None	add
230	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  {  v  }  ;  }  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  {  v  }  ;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  {  v  }  ;  }	  return    getPct(new    int[]    {    v    }    );    int[]    {    v    }    ;    	non-compiled	[CE]  not  a  statement	74	None	replace
231	[BUG]  [BUGGY]  this.freqTable  =  sumFreqTable.get(v);  [CE]  cannot  assign  a  value  to  final  variable  freqTable  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.freqTable  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.freqTable  =  sumFreqTable.get(v);	  this.freqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  freqTable	52	None	replace
232	[BUG]  [BUGGY]  this.maxTable  =  sumFreqTable.get(v);  [CE]  cannot  find  symbol  maxTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.maxTable  =  sumFreqTable.get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.maxTable  =  sumFreqTable.get(v);	  this.freqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  find  symbol  maxTable	52	None	replace
233	[BUG]  [BUGGY]  double  v  =  this.sumFreqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  this.sumFreqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  this.sumFreqTable.doubleValue();	  int    v    =    this.sumFreqTable.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	10	None	replace
234	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.doubleValue()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.doubleValue()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreqTable.doubleValue()  +  1;	  int    v    =    this.sumFreqTable.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	10	None	replace
235	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.getPct(v  -  1);  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreq  =  freqTable.getPct(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreq  =  freqTable.getPct(v  -  1);	  this.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	17	None	replace
236	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.getPct(v  +  1);  [CE]  cannot  find  symbol  sumFreq  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreq  =  freqTable.getPct(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreq  =  freqTable.getPct(v  +  1);	  this.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	17	None	replace
237	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.getPct(v,  0);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreq  =  freqTable.getPct(v,  0);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreq  =  freqTable.getPct(v,  0);	  this.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	17	None	replace
238	[BUG]  [BUGGY]  this.serialVersionUID  =  sumFreqTable.getPct(v);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.serialVersionUID  =  sumFreqTable.getPct(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.serialVersionUID  =  sumFreqTable.getPct(v);	  this.serialVersionUID    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	18	None	replace
239	[BUG]  [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v  +  1);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.serialVersionUID  =  freqTable.getPct(v  +  1);	  this.serialVersionUID    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	18	None	replace
240	[BUG]  [BUGGY]  return  getPct(new  Long(v),  0,  v);  [CE]  no  suitable  method  found  for  getPct(Long,int,int)  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v),  0,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v),  0,  v);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Long,int,int)	42	None	replace
241	[BUG]  [BUGGY]  return  getPct(new  Long(v),  0,  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v),  0,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v),  0,  sumFreqTable);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	42	None	replace
242	[BUG]  [BUGGY]  return  getPct(new  Long(v),  sumFreq,  0);  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v),  sumFreq,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v),  sumFreq,  0);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	42	None	replace
243	[BUG]  [BUGGY]  return  getPct(new  Long(v),  0,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v),  0,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v),  0,  sumFreq);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	42	None	replace
244	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreq,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  sumFreq,  freqTable);	  return    getPct(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	82	None	replace
245	[BUG]  [BUGGY]  return  getPct(Long.parseLong(sumFreq,  v),  freqTable);  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(sumFreq,  v),  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(sumFreq,  v),  freqTable);	  return    getPct(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	82	None	replace
246	[BUG]  [BUGGY]  return  getPct(Short.parseLong(v),  freqTable);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Short.parseLong(v),  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Short.parseLong(v),  freqTable);	  return    getPct(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
247	[BUG]  [BUGGY]  return  getPct(Long.parseLong(sumFreq),  v);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(sumFreq),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(sumFreq),  v);	  return    getPct(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	82	None	replace
248	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
249	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
250	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
251	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
252	[BUG]  [BUGGY]  return  getPct(this.result.valueOf(v));  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(this.result.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(this.result.valueOf(v));	  return    getPct(this.sumFreqTable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  result	12	None	replace
253	[BUG]  [BUGGY]  return  getPct(this.serialVersionUID.valueOf(v));  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(this.serialVersionUID.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(this.serialVersionUID.valueOf(v));	  return    getPct(this.sumFreqTable.valueOf(v));    	non-compiled	[CE]  long  cannot  be  dereferenced	12	None	replace
254	[BUG]  [BUGGY]  int  v  =  freqTable.get(sumFreq);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.get(sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.get(sumFreq);	  int    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	45	None	replace
255	[BUG]  [BUGGY]  int  v  =  freqTable.get(this.sumFreq);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.get(this.sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.get(this.sumFreq);	  int    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	45	None	replace
256	[BUG]  [BUGGY]  int  v  =  getSumFreqTable().getVisiblePct(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  getSumFreqTable().getVisiblePct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  getSumFreqTable().getVisiblePct(v);	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisiblePct(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	60	None	replace
257	[BUG]  [BUGGY]  long  v  =  getSumFreqTable().getVisiblePct(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  getSumFreqTable().getVisiblePct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  getSumFreqTable().getVisiblePct(v);	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisiblePct(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	60	None	replace
258	[BUG]  [BUGGY]  v  =  getSumFreqTable().getVisiblePct(v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  v  =  getSumFreqTable().getVisiblePct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	v  =  getSumFreqTable().getVisiblePct(v);	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisiblePct(v);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
259	[BUG]  [BUGGY]  null  v  =  getSumFreqTable().getVisiblePct(v);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  null  v  =  getSumFreqTable().getVisiblePct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	null  v  =  getSumFreqTable().getVisiblePct(v);	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisiblePct(v);    	non-compiled	[CE]  not  a  statement	60	None	replace
260	[BUG]  [BUGGY]  long  v  =  freqTable.size()  -  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  freqTable.size()  -  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  freqTable.size()  -  1;	  long    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	4	None	replace
261	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
262	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    getPct(new    Long(v));    	non-compiled	[CE]  missing  return  statement	22	None	replace
263	[BUG]  [BUGGY]  double  v  =  this.sumFreqTable.getVariance(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  this.sumFreqTable.getVariance(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  this.sumFreqTable.getVariance(v);	  double    v    =    this.sumFreqTable.getVariance();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	16	None	replace
264	[BUG]  [BUGGY]  Integer  v  =  freqTable.get(sumFreq);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Integer  v  =  freqTable.get(sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Integer  v  =  freqTable.get(sumFreq);	  Integer    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	47	None	replace
265	[BUG]  [BUGGY]  Integer  v  =  freqTable.get(this.sumFreq);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Integer  v  =  freqTable.get(this.sumFreq);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Integer  v  =  freqTable.get(this.sumFreq);	  Integer    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	47	None	replace
266	[BUG]  [BUGGY]  int[]  v  =  new  int[size()  ];  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int[]  v  =  new  int[size()  ];  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int[]  v  =  new  int[size()  ];	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    new    int[size()    ];    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	38	None	replace
267	[BUG]  [BUGGY]  getPct(new  int[]  {  v  }  );  int[]  v  =  new  int[size()  ];  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  getPct(new  int[]  {  v  }  );  int[]  v  =  new  int[size()  ];  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	getPct(new  int[]  {  v  }  );  int[]  v  =  new  int[size()  ];	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    new    int[size()    ];    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	38	None	replace
268	[BUG]  [BUGGY]  v  =  getPct(new  Long(v));  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    int    v    =    getPct(new    Long(v));    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
269	[BUG]  [BUGGY]  double  v  =  getPct(new  Long(v));  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    int    v    =    getPct(new    Long(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	25	None	replace
270	[BUG]  [BUGGY]  Double  v  =  freqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Double  v  =  freqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Double  v  =  freqTable.size();	  double    v    =    sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	21	None	replace
271	[BUG]  [BUGGY]  if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getPct(new  int[]  {  v  }  );  }  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	36	None	replace
272	[BUG]  [BUGGY]  double  v  =  sumFreq.doubleValue()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  sumFreq.doubleValue()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  sumFreq.doubleValue()  +  1;	  double    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	7	None	replace
273	[BUG]  [BUGGY]  double  v  =  sumFreqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  sumFreqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  sumFreqTable.doubleValue();	  double    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	7	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(0));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Integer(0));	  return    getPct(new    Integer(v));    	compilable	  [FE]  AssertionFailedError  	41	1	replace
275	[BUG]  [BUGGY]  return  getPct(new  Integer(0));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(0));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Integer(0));	  return    getPct(new    Integer(v));    	compilable	  [FE]  AssertionFailedError  	41	1	replace
276	[BUG]  [BUGGY]  return  getPct(new  Integer(v),  0);  [CE]  no  suitable  method  found  for  getPct(Integer,int)  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v),  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Integer(v),  0);	  return    getPct(new    Integer(v));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Integer,int)	41	None	replace
277	[BUG]  [BUGGY]  int  v  =  this.freqTable.size()  -  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.freqTable.size()  -  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.freqTable.size()  -  1;	  int    v    =    this.freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	90	None	replace
278	[BUG]  [BUGGY]  int  v  =  this.freqTable.size()  -  2;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.freqTable.size()  -  2;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.freqTable.size()  -  2;	  int    v    =    this.freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	90	None	replace
279	[BUG]  [BUGGY]  double  v  =  this.sumFreq.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  this.sumFreq.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  this.sumFreq.doubleValue();	  int    v    =    this.sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	85	None	replace
280	[BUG]  [BUGGY]  long  v  =  this.sumFreq.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  this.sumFreq.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  this.sumFreq.doubleValue();	  int    v    =    this.sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	85	None	replace
281	[BUG]  [BUGGY]  int  v  =  getPct(Integer.MAX_VALUE);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  getPct(Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  getPct(Integer.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    int    v    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	58	None	replace
282	[BUG]  [BUGGY]  int  v  =  getPct(Long.MAX_VALUE);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    int    v    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	58	None	replace
283	[BUG]  [BUGGY]  long  v  =  getPct(Long.MAX_VALUE);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    int    v    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	58	None	replace
284	[BUG]  [BUGGY]  v  =  getPct(Long.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  v  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	v  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    int    v    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  possible  loss  of  precision	58	None	replace
285	[BUG]  [BUGGY]  return  getPct(v.doubleValue());  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v.doubleValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v.doubleValue());	  return    getPct(v.valueOf(long));    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
286	[BUG]  [BUGGY]  return  getPct(v.intValue());  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v.intValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v.intValue());	  return    getPct(v.valueOf(long));    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
287	[BUG]  [BUGGY]  return  getPct(v.longValue());  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v.longValue());	  return    getPct(v.valueOf(long));    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
288	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(Long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
289	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  return  getPct(long.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  return  getPct(long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  return  getPct(long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
290	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  return  getPct(Integer.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  return  getPct(Integer.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  return  getPct(Integer.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
291	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MIN_VALUE);  }  else  {  return  getPct(Integer.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MIN_VALUE);  }  else  {  return  getPct(Integer.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(Integer.MIN_VALUE);  }  else  {  return  getPct(Integer.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    if(v    <    =    0)    {    return    getPct(Long.MAX_VALUE);    }    else    {    return    getPct(Long.MAX_VALUE);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
292	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)/  1);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v)/  1);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	105	None	replace
293	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  1,  v);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  1,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v)+  1,  v);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	105	None	replace
294	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  1,  sumFreqTable,  v);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  1,  sumFreqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v)+  1,  sumFreqTable,  v);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	105	None	replace
295	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  1,  sumFreqTable);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  1,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v)+  1,  sumFreqTable);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	105	None	replace
296	[BUG]  [BUGGY]  int  v  =  this.freqTable.size()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.freqTable.size()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.freqTable.size()  +  1;	  int    v    =    this.freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	90	None	replace
297	[BUG]  [BUGGY]  this.maxFreq  =  freqTable.getPct(v  +  1);  [CE]  cannot  find  symbol  maxFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.maxFreq  =  freqTable.getPct(v  +  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.maxFreq  =  freqTable.getPct(v  +  1);	  this.maxFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	19	None	replace
298	[BUG]  [BUGGY]  return  getPct(new  Double(v),  v);  [CE]  no  suitable  method  found  for  getPct(Double,int)  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Double(v),  v);	  return    getPct(new    Double(v));    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Double,int)	44	None	replace
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Double(v)+  1);	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	44	1	replace
300	[BUG]  [BUGGY]  return  getPct(new  Double(v)+  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Double(v)+  1);	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	44	1	replace
301	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  freq  }  );  [CE]  cannot  find  symbol  freq  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  freq  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  freq  }  );	  return    getPct(new    int[]    {    v,    sumFreq    }    );    	non-compiled	[CE]  cannot  find  symbol  freq	32	None	replace
302	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  value  }  );  [CE]  cannot  find  symbol  value  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  value  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  value  }  );	  return    getPct(new    int[]    {    v,    sumFreq    }    );    	non-compiled	[CE]  cannot  find  symbol  value	32	None	replace
303	[BUG]  [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v  -  1);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.serialVersionUID  =  freqTable.getPct(v  -  1);	  this.serialVersionUID    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	18	None	replace
304	[BUG]  [BUGGY]  double  v  =  freqTable.size()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  freqTable.size()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  freqTable.size()  +  1;	  double    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	6	None	replace
305	[BUG]  [BUGGY]  double  v  =  freqTable.size()  -  2;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  freqTable.size()  -  2;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  freqTable.size()  -  2;	  double    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	6	None	replace
306	[BUG]  [BUGGY]  long  result  =  getPct(Long.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  result  =  getPct(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  result  =  getPct(Long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  possible  loss  of  precision	59	None	replace
307	[BUG]  [BUGGY]  long  result  =  getPct(long.MAX_VALUE);  [CE]  class  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  result  =  getPct(long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  result  =  getPct(long.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  class  expected	59	None	replace
308	[BUG]  [BUGGY]  int  v  =  this.serialVersionUID.size();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.serialVersionUID.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.serialVersionUID.size();	  int    v    =    this.sumFreqTable.size()    -    2;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	67	None	replace
309	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  {  v  }  ;  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  {  v  }  ;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  {  v  }  ;  }	  return    getPct(new    int[]    {    v    }    );    int[]    {    v    }    ;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
310	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable,  v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.get(this.sumFreqTable,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreqTable.get(this.sumFreqTable,  v);	  int    v    =    this.sumFreqTable.get(this.sumFreqTable);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	56	None	replace
311	[BUG]  [BUGGY]  return  getFreqTable().getPct(new  int[]  {  v  },  v  }  );  [CE]  ')'  expected  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getFreqTable().getPct(new  int[]  {  v  },  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getFreqTable().getPct(new  int[]  {  v  },  v  }  );	  return    getPct(new    int[]    {    v    },    v    }    );    	non-compiled	[CE]  ')'  expected	88	None	replace
312	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  v  +  1  }  );  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  v  +  1  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  v  +  1  }  );	  return    getPct(new    int[]    {    v    },    v    }    );    	non-compiled	[CE]  ')'  expected	88	None	replace
313	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  v  ==  0);  [CE]  no  suitable  method  found  for  getPct(int[],boolean)  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  v  ==  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  v  ==  0);	  return    getPct(new    int[]    {    v    },    v    }    );    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int[],boolean)	88	None	replace
314	[BUG]  [BUGGY]  int  v  =  this.freqTable.getVariance();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.freqTable.getVariance();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.freqTable.getVariance();	  int    v    =    freqTable.getVariance();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	14	None	replace
315	[BUG]  [BUGGY]  return  getPct(Long.MAX_VALUE,  sumFreqTable.getVisibleNumber(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.MAX_VALUE,  sumFreqTable.getVisibleNumber(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.MAX_VALUE,  sumFreqTable.getVisibleNumber(v));	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisibleNumber(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	61	None	replace
316	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    int[]    {    v    }    ;    return    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
317	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  missing  return  statement	23	None	replace
318	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(Integer.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    return    getPct(Long.MAX_VALUE);    	compilable	  [FE]  StackOverflowError  	80	2	replace
319	[BUG]  [BUGGY]  return  getPct(Integer.MAX_VALUE);  [FE]  StackOverflowError  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Integer.MAX_VALUE);	  return    getPct(Long.MAX_VALUE);    return    getPct(Long.MAX_VALUE);    	compilable	  [FE]  StackOverflowError  	80	2	replace
320	[BUG]  [BUGGY]  return  getPct(Long.MAX_VALUE,  v);  [CE]  no  suitable  method  found  for  getPct(long,int)  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.MAX_VALUE,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.MAX_VALUE,  v);	  return    getPct(Long.MAX_VALUE);    return    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(long,int)	80	None	replace
321	[BUG]  [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  v);  [CE]  cannot  find  symbol  This  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  This.sumFreq  =  freqTable.getPct(v,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	This.sumFreq  =  freqTable.getPct(v,  v);	  This.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  This	71	None	replace
322	[BUG]  [BUGGY]  return  getPct(v.valueOf(null));  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v.valueOf(null));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v.valueOf(null));	  return    getPct(v.valueOf(long));    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
323	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  3);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  3);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v)+  3);	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	105	None	replace
324	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)+  3)+  1;  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)+  3)+  1;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v)+  3)+  1;	  return    getPct(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	105	None	replace
325	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  getPct(Long.MAX_VALUE);  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  getPct(Long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  getPct(Long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	57	None	replace
326	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  getPct(Integer.MAX_VALUE);  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  getPct(Integer.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(Integer.MAX_VALUE);  }  else  {  getPct(Integer.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	57	None	replace
327	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  getPct(long.MAX_VALUE);  }  [CE]  class  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  getPct(long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(long.MAX_VALUE);  }  else  {  getPct(long.MAX_VALUE);  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  class  expected	57	None	replace
328	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Integer(v));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Integer(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Integer(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
329	[BUG]  [BUGGY]  return  getPct(new  int[v]);  return  getPct(new  int[v]);  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v]);  return  getPct(new  int[v]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[v]);    return  getPct(new  int[v]);	  	non-compiled	[CE]  unreachable  statement	97	None	add
330	[BUG]  [BUGGY]  return  getPct(new  int[v]);  int[v]  =  getPct(new  int[v]);  [CE]  ']'  expected  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v]);  int[v]  =  getPct(new  int[v]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[v]);    int[v]  =  getPct(new  int[v]);	  	non-compiled	[CE]  ']'  expected	97	None	add
331	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  if(v  <  0)  {  return  getPct(new  int[]  {  v,  v  }  );  }  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  if(v  <  0)  {  return  getPct(new  int[]  {  v,  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    if(v  <  0)  {  return  getPct(new  int[]  {  v,  v  }  );  }	  	non-compiled	[CE]  unreachable  statement	30	None	add
332	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  if(v  <  0)  {  return  getPct(new  int[]  {  v,  v  }  );  }  else  {  return  getPct(new  int[]  {  v,  v  }  );  }  [CE]  unreachable  statement  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  if(v  <  0)  {  return  getPct(new  int[]  {  v,  v  }  );  }  else  {  return  getPct(new  int[]  {  v,  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    if(v  <  0)  {  return  getPct(new  int[]  {  v,  v  }  );  }  else  {  return  getPct(new  int[]  {  v,  v  }  );  }	  	non-compiled	[CE]  unreachable  statement	30	None	add
333	[BUG]  [BUGGY]  double  v  =  freq.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  freq.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  freq.doubleValue();	  double    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	7	None	replace
334	[BUG]  [BUGGY]  return  getPct(Long.parseLong(value,  v));  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(value,  v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(value,  v));	  return    getPct(Long.parseLong(sumFreq,    v));    	non-compiled	[CE]  cannot  find  symbol  value	65	None	replace
335	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  v);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  freqTable,  v);	  return    getPct(Long.parseLong(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	83	None	replace
336	[BUG]  [BUGGY]  return  getPct(new  int[]  {  0,  v  }  );  int[]  v  =  getSumFreqTable().getPct(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  0,  v  }  );  int[]  v  =  getSumFreqTable().getPct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  0,  v  }  );  int[]  v  =  getSumFreqTable().getPct(v);	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getSumFreqTable().getPct(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	39	None	replace
337	[BUG]  [BUGGY]  return  getPct(new  Long(v),  sumFreqTable,  0);  [CE]  cannot  find  symbol  sumFreqTable  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v),  sumFreqTable,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v),  sumFreqTable,  0);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	42	None	replace
338	[BUG]  [BUGGY]  return  getPct(new  Integer(v));  int  v  =  sumFreqTable.get(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v));  int  v  =  sumFreqTable.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Integer(v));    int  v  =  sumFreqTable.get(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	40	None	add
339	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(long.MAX_VALUE);  result  =  getPct(long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [CE]  class  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(long.MAX_VALUE);  result  =  getPct(long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(long.MAX_VALUE);  result  =  getPct(long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    if(result    ==    0)    {    return    result;    }    	non-compiled	[CE]  class  expected	81	None	replace
340	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(Integer.MAX_VALUE);  result  =  getPct(Integer.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(Integer.MAX_VALUE);  result  =  getPct(Integer.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(Integer.MAX_VALUE);  result  =  getPct(Integer.MAX_VALUE);  if(result  ==  0)  {  return  result;  }	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    if(result    ==    0)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
341	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  sumFreqTable,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  sumFreqTable,  freqTable);	  return    getPct(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	82	None	replace
342	[BUG]  [BUGGY]  Integer  v  =  freqTable.get(pct);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Integer  v  =  freqTable.get(pct);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Integer  v  =  freqTable.get(pct);	  Integer    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	47	None	replace
343	[BUG]  [BUGGY]  Integer  v  =  freqTable.get(result);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Integer  v  =  freqTable.get(result);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Integer  v  =  freqTable.get(result);	  Integer    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	47	None	replace
344	[BUG]  [BUGGY]  Integer  v  =  freqTable.get(value);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Integer  v  =  freqTable.get(value);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Integer  v  =  freqTable.get(value);	  Integer    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	47	None	replace
345	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  0);  [CE]  ')'  expected  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  v  }  0);	  return    getPct(new    int[]    {    v,    v    }    );    	non-compiled	[CE]  ')'  expected	31	None	replace
346	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    if(v    <    =    0)    {    return    getPct(new    int[]    {    v    }    );    }    else    {    sumFreqTable.put(v,    new    Integer(v));    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
347	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    if(v    <    =    0)    {    return    getPct(new    int[]    {    v    }    );    }    else    {    sumFreqTable.put(v,    new    Integer(v));    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
348	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  sumFreqTable.put(v,  new  Integer(v));  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  sumFreqTable.put(v,  new  Integer(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  sumFreqTable.put(v,  new  Integer(v));  }	  return    getPct(new    int[]    {    v    }    );    if(v    <    =    0)    {    return    getPct(new    int[]    {    v    }    );    }    else    {    sumFreqTable.put(v,    new    Integer(v));    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
349	[BUG]  [BUGGY]  return  getPct(0,  v  -  1);  [CE]  no  suitable  method  found  for  getPct(int,int)  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(0,  v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(0,  v  -  1);	  return    getPct(0,    v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,int)	50	None	replace
350	[BUG]  [BUGGY]  return  getPct(Long.MAX_VALUE,  sumFreqTable.getVisiblePct(v);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.MAX_VALUE,  sumFreqTable.getVisiblePct(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.MAX_VALUE,  sumFreqTable.getVisiblePct(v);	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisiblePct(v);    	non-compiled	[CE]  ')'  expected	60	None	replace
351	[BUG]  [BUGGY]  return  getPct(v,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getPct(int,int)  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v,  Integer.MAX_VALUE);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,int)	84	None	replace
352	[BUG]  [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  if(v  <  =  0)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    sumFreqTable.get(v);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
353	[BUG]  [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    sumFreqTable.get(v);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
354	[BUG]  [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(sumFreqTable!=  null)  {  return  getPct(new  Long(v));  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    sumFreqTable.get(v);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
355	[BUG]  [BUGGY]  long  v  =  freqTable.size()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  long  v  =  freqTable.size()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	long  v  =  freqTable.size()  +  1;	  long    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	4	None	replace
356	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  getPct(new  int[]  {  v  }  );  }  [CE]  missing  return  statement  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  missing  return  statement	35	None	replace
357	[BUG]  [BUGGY]  return  getPct(value.valueOf(v));  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(value.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(value.valueOf(v));	  return    getPct(n.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  value	95	None	replace
358	[BUG]  [BUGGY]  return  getPct(variable.valueOf(v));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(variable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(variable.valueOf(v));	  return    getPct(n.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  	95	None	replace
359	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    return    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    return    getPct(new    Long(v));    	compilable	  [FE]  AssertionFailedError  	86	1	replace
361	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    return    getPct(new    Long(v));    	compilable	  [FE]  AssertionFailedError  	86	1	replace
362	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  if(v  <  0)  {  return  getPct(new  int[]  {  v,  0  }  );  }  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  if(v  <  0)  {  return  getPct(new  int[]  {  v,  0  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    0    }    );    if(v  <  0)  {  return  getPct(new  int[]  {  v,  0  }  );  }	  	non-compiled	[CE]  unreachable  statement	33	None	add
363	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  int[]  {  v,  0  }  );  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  int[]  {  v,  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    0    }    );    int[]  {  v,  0  }  );	  	non-compiled	[CE]  not  a  statement	33	None	add
364	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  int[]  {  v,  0  }  );  return  getPct(new  int[]  {  v,  0  }  );  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  int[]  {  v,  0  }  );  return  getPct(new  int[]  {  v,  0  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    0    }    );    int[]  {  v,  0  }  );  return  getPct(new  int[]  {  v,  0  }  );	  	non-compiled	[CE]  not  a  statement	33	None	add
365	[BUG]  [BUGGY]  this.sumFreq  =  freqTable.getPct(v,  v);  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.sumFreq  =  freqTable.getPct(v,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.sumFreq  =  freqTable.getPct(v,  v);	  this.sumFreq    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	17	None	replace
366	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v  +  1]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  int[v  +  1]);	  return    getPct(new    int[v]);    	compilable	  [FE]  ClassCastException  	98	2	replace
367	[BUG]  [BUGGY]  return  getPct(new  int[v  +  1]);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v  +  1]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[v  +  1]);	  return    getPct(new    int[v]);    	compilable	  [FE]  ClassCastException  	98	2	replace
368	[BUG]  [BUGGY]  int  v  =  freqTable.get(result);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.get(result);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.get(result);	  int    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	45	None	replace
369	[BUG]  [BUGGY]  int  v  =  freqTable.get(pct);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.get(pct);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.get(pct);	  int    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	45	None	replace
370	[BUG]  [BUGGY]  this.freqTable  =  freqTable.get(v  -  1);  [CE]  cannot  assign  a  value  to  final  variable  freqTable  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.freqTable  =  freqTable.get(v  -  1);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.freqTable  =  freqTable.get(v  -  1);	  this.freqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  freqTable	52	None	replace
371	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap().get(v);  [CE]  cannot  assign  a  value  to  final  variable  freqTable  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.freqTable  =  new  TreeMap().get(v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.freqTable  =  new  TreeMap().get(v);	  this.freqTable    =    freqTable.get(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  freqTable	52	None	replace
372	[BUG]  [BUGGY]  int  v  =  this.sumFreq.doubleValue()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreq.doubleValue()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreq.doubleValue()  +  1;	  int    v    =    this.sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	85	None	replace
373	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  FREQUEQ_TABLE);  [CE]  cannot  find  symbol  FREQUEQ_TABLE  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  FREQUEQ_TABLE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  FREQUEQ_TABLE);	  return    getPct(new    int[]    {    v    },    sumFreqTable);    	non-compiled	[CE]  cannot  find  symbol  FREQUEQ_TABLE	106	None	replace
374	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  NUMBER_FREQUENCE);  [CE]  cannot  find  symbol  NUMBER_FREQUENCE  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  NUMBER_FREQUENCE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  NUMBER_FREQUENCE);	  return    getPct(new    int[]    {    v    },    sumFreqTable);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_FREQUENCE	106	None	replace
375	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  sumFreqTable);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v),  freqTable,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v),  freqTable,  sumFreqTable);	  return    getPct(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	62	None	replace
376	[BUG]  [BUGGY]  getPct(new  Long(v));  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	getPct(new  Long(v));	  return    getPct(new    Long(v));    getPct(new    Long(v));    	non-compiled	[CE]  missing  return  statement	22	None	replace
377	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getPct(new  int[]  {  v  }  );  }  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	36	None	replace
378	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  ')'  expected	24	None	replace
379	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  this.sumFreqTable.put(v,  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
380	[BUG]  [BUGGY]  t  v  =  freqTable.size();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  t  v  =  freqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	t  v  =  freqTable.size();	  int    v    =    freqTable.size()    -    2;    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
381	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  sumFreq.get(v);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1));  int  v  =  sumFreq.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v    -    1));    int  v  =  sumFreq.get(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	99	None	add
382	[BUG]  [BUGGY]  return  getPct(v.parseLong(long));  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v.parseLong(long));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v.parseLong(long));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  '.class'  expected	64	None	replace
383	[BUG]  [BUGGY]  return  getPct(getFreqTable().parseLong(v));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(getFreqTable().parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(getFreqTable().parseLong(v));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
384	[BUG]  [BUGGY]  return  getPct(short.parseLong(v));  [CE]  class  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(short.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(short.parseLong(v));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  class  expected	64	None	replace
385	[BUG]  [BUGGY]  return  getPct(variables.parseLong(v));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(variables.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(variables.parseLong(v));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol  	64	None	replace
386	[BUG]  [BUGGY]  Integer  v  =  getPct(new  Long(v));  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Integer  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Integer  v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    int    v    =    getPct(new    Long(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	25	None	replace
387	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getPct(new    int[]    {    v    }    );    return    getPct(new    int[]    {    v    }    );    	compilable	  [FE]  ClassCastException  	37	2	replace
388	[BUG]  [BUGGY]  if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  }  else  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getPct(new    int[]    {    v    }    );    return    getPct(new    int[]    {    v    }    );    	compilable	  [FE]  ClassCastException  	37	2	replace
389	[BUG]  [BUGGY]  if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  new  int[size()  ];  }  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  new  int[size()  ];  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  ==  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  new  int[size()  ];  }	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    new    int[size()    ];    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	38	None	replace
390	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  0)  {  sumFreqTable.add(getPct(v));  }  else  {  sumFreqTable.add(getPct(v));  }  [CE]  cannot  find  symbol  sumFreqTable  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  if(v  <  0)  {  sumFreqTable.add(getPct(v));  }  else  {  sumFreqTable.add(getPct(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    if(v  <  0)  {  sumFreqTable.add(getPct(v));  }  else  {  sumFreqTable.add(getPct(v));  }	  	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	48	None	add
391	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  sumFreqTable.add(getPct(v));  }  else  {  sumFreqTable.add(getPct(v));  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  sumFreqTable.add(getPct(v));  }  else  {  sumFreqTable.add(getPct(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    if(v  <  =  0)  {  sumFreqTable.add(getPct(v));  }  else  {  sumFreqTable.add(getPct(v));  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
392	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  0)  {  sumFreqTable.add(getPct(v));  }  else  {  sumFreqTable.add(getSumFreqTable());  }  [CE]  cannot  find  symbol  sumFreqTable  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  if(v  <  0)  {  sumFreqTable.add(getPct(v));  }  else  {  sumFreqTable.add(getSumFreqTable());  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    if(v  <  0)  {  sumFreqTable.add(getPct(v));  }  else  {  sumFreqTable.add(getSumFreqTable());  }	  	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	48	None	add
393	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  long  v  =  getPct(new  Long(v)+  1);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  long  v  =  getPct(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v)+    1);    long  v  =  getPct(new  Long(v)+  1);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	76	None	add
394	[BUG]  [BUGGY]  int  v  =  freqTable.getVariance()  +  1;  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.getVariance()  +  1;  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.getVariance()  +  1;	  int    v    =    this.sumFreqTable.getVariance()    +    1;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	70	None	replace
395	[BUG]  [BUGGY]  return  getPct(new  int[v]);  int[v]  =  sumFreqTable.get(v);  [CE]  ']'  expected  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v]);  int[v]  =  sumFreqTable.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[v]);    int[v]  =  sumFreqTable.get(v);	  	non-compiled	[CE]  ']'  expected	97	None	add
396	[BUG]  [BUGGY]  return  getPct(new  int[v]);  int[v]  =  sumFreqTable.getPct(new  int[v]);  [CE]  ']'  expected  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[v]);  int[v]  =  sumFreqTable.getPct(new  int[v]);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[v]);    int[v]  =  sumFreqTable.getPct(new  int[v]);	  	non-compiled	[CE]  ']'  expected	97	None	add
397	[BUG]  [BUGGY]  return  getPct(new  Long(v),  v  =  getPct(new  Long(v));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v),  v  =  getPct(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v),  v  =  getPct(new  Long(v));	  return    getPct(new    Long(v));    int    v    =    getPct(new    Long(v));    	non-compiled	[CE]  ')'  expected	25	None	replace
398	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  v  },  sumFreqTable);  [CE]  ')'  expected  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  v  },  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  v  },  sumFreqTable);	  return    getPct(new    int[]    {    v    },    v    }    );    	non-compiled	[CE]  ')'  expected	88	None	replace
399	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	26	2	replace
400	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	26	2	replace
401	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Integer(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Integer(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Integer(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
402	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
403	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  throw  new  IllegalStateException( " ");  }	  return    getPct(Long.MAX_VALUE);    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
404	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getPct(new  int[]  {  v  }  );  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getPct(new    int[]    {    v    }    );    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
405	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  NUMBER_TOP);  [CE]  cannot  find  symbol  NUMBER_TOP  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  NUMBER_TOP);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  NUMBER_TOP);	  return    getPct(new    int[]    {    v    },    sumFreqTable);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_TOP	106	None	replace
406	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  return  getPct(new  int[]  {  v,  v  }  );  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  return  getPct(new  int[]  {  v,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    return  getPct(new  int[]  {  v,  v  }  );	  	non-compiled	[CE]  unreachable  statement	30	None	add
407	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  {  v,  v  }  );  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  {  v,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    int[]  {  v,  v  }  );	  	non-compiled	[CE]  not  a  statement	30	None	add
408	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v,  v  }  );  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v,  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    if(v  <  =  0)  {  return  getPct(new  int[]  {  v,  v  }  );  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
409	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  {  v,  v  }  );  return  getPct(new  int[]  {  v,  v  }  );  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v  }  );  int[]  {  v,  v  }  );  return  getPct(new  int[]  {  v,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    v    }    );    int[]  {  v,  v  }  );  return  getPct(new  int[]  {  v,  v  }  );	  	non-compiled	[CE]  not  a  statement	30	None	add
410	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v  -  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(v  -  2);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	49	2	replace
411	[BUG]  [BUGGY]  return  getPct(v  -  2);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v  -  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v  -  2);	  return    getPct(v);    	compilable	  [FE]  StackOverflowError  	49	2	replace
412	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(v);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  }  else  {  return  getPct(v);  }	  return    getPct(Long.MAX_VALUE);    return    getPct(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
413	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v,  0  }  );  }  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v,  0  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    int[]    {    v,    0    }    );    if(v  <  =  0)  {  return  getPct(new  int[]  {  v,  0  }  );  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
414	[BUG]  [BUGGY]  Long  result  =  getPct(Integer.valueOf(v));  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Long  result  =  getPct(Integer.valueOf(v));  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Long  result  =  getPct(Integer.valueOf(v));	  int    result    =    getPct(Integer.valueOf(v));    	non-compiled	[CE]  incompatible  types	2	None	replace
415	[BUG]  [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v)+  1);  if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v)+    1);    if(v  <  =  0)  {  return  getPct(new  Long(v)+  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
416	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1));  return  getPct(new  Long(v  -  1));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1));  return  getPct(new  Long(v  -  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v    -    1));    return  getPct(new  Long(v  -  1));	  	non-compiled	[CE]  unreachable  statement	99	None	add
417	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1));  if(v  <  =  0)  {  return  getPct(new  Long(v  -  1));  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1));  if(v  <  =  0)  {  return  getPct(new  Long(v  -  1));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v    -    1));    if(v  <  =  0)  {  return  getPct(new  Long(v  -  1));  }	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
418	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1));  if(v  <  =  0)  {  return  getPct(new  Long(v  -  1));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1));  if(v  <  =  0)  {  return  getPct(new  Long(v  -  1));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Long(v    -    1));    if(v  <  =  0)  {  return  getPct(new  Long(v  -  1));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
419	[BUG]  [BUGGY]  return  getPct(getFreqTable().doubleValue());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(getFreqTable().doubleValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(getFreqTable().doubleValue());	  return    getPct(getFreqTable().valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
420	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  null  }  );  [CE]  incompatible  types  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  null  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  null  }  );	  return    getPct(new    int[]    {    v,    sumFreq    }    );    	non-compiled	[CE]  incompatible  types	32	None	replace
421	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  v!=  );  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  v!=  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  v!=  );	  return    getPct(new    int[]    {    v,    sumFreq    }    );    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
422	[BUG]  [BUGGY]  return  getPct(new  Long(v),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v),  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v),  sumFreq);	  return    getPct(new    Long(v),    0);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	42	None	replace
423	[BUG]  [BUGGY]  return  getPct(0,  v  +  1);  [CE]  no  suitable  method  found  for  getPct(int,int)  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(0,  v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(0,  v  +  1);	  return    getPct(0,    v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,int)	50	None	replace
424	[BUG]  [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  new  int[size()  ];  }  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  new  int[size()  ];  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  new  int[size()  ];  }	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    new    int[size()    ];    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	38	None	replace
425	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getSumFreqTable().getPct(v);  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getSumFreqTable().getPct(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  int[]  v  =  getSumFreqTable().getPct(v);  }	  return    getPct(new    int[]    {    v    }    );    int[]    v    =    getSumFreqTable().getPct(v);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
426	[BUG]  [BUGGY]  short  v  =  this.sumFreqTable.getVariance();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  short  v  =  this.sumFreqTable.getVariance();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	short  v  =  this.sumFreqTable.getVariance();	  long    v    =    this.sumFreqTable.getVariance();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	15	None	replace
427	[BUG]  [BUGGY]  return  getPct(v.parseInt(v));  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v.parseInt(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v.parseInt(v));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  int  cannot  be  dereferenced	64	None	replace
428	[BUG]  [BUGGY]  return  getPct(variable.parseLong(v));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(variable.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(variable.parseLong(v));	  return    getPct(long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol  	64	None	replace
429	[BUG]  [BUGGY]  return  getPct(V.valueOf(v));  [CE]  cannot  find  symbol  V  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(V.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(V.valueOf(v));	  return    getPct(n.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  V	95	None	replace
430	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  return  getPct(v);  }  else  {  sumFreqTable.put(v,  freqTable.get(v));  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  if(v  <  =  0)  {  return  getPct(v);  }  else  {  sumFreqTable.put(v,  freqTable.get(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    if(v  <  =  0)  {  return  getPct(v);  }  else  {  sumFreqTable.put(v,  freqTable.get(v));  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
431	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  =  0.0)  {  return  getPct(v);  }  else  {  sumFreqTable.put(v,  freqTable.get(v));  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  if(v  <  =  0.0)  {  return  getPct(v);  }  else  {  sumFreqTable.put(v,  freqTable.get(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    if(v  <  =  0.0)  {  return  getPct(v);  }  else  {  sumFreqTable.put(v,  freqTable.get(v));  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
432	[BUG]  [BUGGY]  return  getPct(v);  if(v  <  0)  {  return  getPct(v);  }  else  {  sumFreqTable.put(v,  freqTable.get(v));  }  [CE]  cannot  find  symbol  sumFreqTable  [FE]        StackOverflowError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v);  if(v  <  0)  {  return  getPct(v);  }  else  {  sumFreqTable.put(v,  freqTable.get(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(v);    if(v  <  0)  {  return  getPct(v);  }  else  {  sumFreqTable.put(v,  freqTable.get(v));  }	  	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	48	None	add
433	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.get(variable).doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.get(variable).doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  this.sumFreqTable.get(variable).doubleValue();	  int    v    =    this.sumFreqTable.get(variable);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	55	None	replace
434	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v,  0  },  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]    ClassCastException    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v,  0  },  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v,  0  },  sumFreqTable);	  return    getPct(new    int[]    {    v,    0    }    );    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	34	None	replace
435	[BUG]  [BUGGY]  return  getPct(new  Integer(v));  return  getPct(new  Integer(v));  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Integer(v));  return  getPct(new  Integer(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Integer(v));    return  getPct(new  Integer(v));	  	non-compiled	[CE]  unreachable  statement	40	None	add
436	[BUG]  [BUGGY]  double  v  =  this.freqTable.doubleValue();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  this.freqTable.doubleValue();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  this.freqTable.doubleValue();	  double    v    =    sumFreq.doubleValue();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	7	None	replace
437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v  +  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Double(v  +  1));	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	44	1	replace
438	[BUG]  [BUGGY]  return  getPct(new  Double(v  +  1));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v  +  1));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Double(v  +  1));	  return    getPct(new    Double(v));    	compilable	  [FE]  AssertionFailedError  	44	1	replace
439	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	add	return  getPct(new  Long(v  -  1)+  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  AssertionFailedError  	77	1	replace
440	[BUG]  [BUGGY]  return  getPct(new  Long(v  -  1)+  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Long(v  -  1)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  Long(v  -  1)+  1);	  return    getPct(new    Long(v)+    1);    	compilable	  [FE]  AssertionFailedError  	77	1	replace
441	[BUG]  [BUGGY]  return  getPct(TreeMap.valueOf(v));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(TreeMap.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(TreeMap.valueOf(v));	  return    getPct(sumFreqTable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
442	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  result  =  getPct(Long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  result  =  getPct(Long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(Long.MAX_VALUE);  result  =  getPct(Long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    if(result    ==    0)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
443	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  result  =  getPct(Integer.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  result  =  getPct(Integer.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(Integer.MAX_VALUE);  result  =  getPct(Integer.MAX_VALUE);  if(result  ==  0)  {  return  result;  }	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    if(result    ==    0)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
444	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  result  =  getPct(long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  result  =  getPct(long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(long.MAX_VALUE);  result  =  getPct(long.MAX_VALUE);  if(result  ==  0)  {  return  result;  }	  return    getPct(Long.MAX_VALUE);    long    result    =    getPct(Long.MAX_VALUE);    if(result    ==    0)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
445	[BUG]  [BUGGY]  return  getPct(Long.parseLong(pct,  v));  [CE]  cannot  find  symbol  pct  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(pct,  v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(pct,  v));	  return    getPct(Long.parseLong(sumFreq,    v));    	non-compiled	[CE]  cannot  find  symbol  pct	65	None	replace
446	[BUG]  [BUGGY]  return  getPct(Long.parseLong(v)/  2,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(v)/  2,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(v)/  2,  freqTable);	  return    getPct(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	82	None	replace
447	[BUG]  [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(sumFreqTable!=  null)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(sumFreqTable!=  null)  {  return  getPct(new  int[]  {  v  }  );  if(v  <  =  0)  {  return  getPct(new  int[]  {  v  }  );  }	  return    getPct(new    int[]    {    v    }    );    if(v    <    =    0)    {    return    getPct(new    int[]    {    v    }    );    }    else    {    sumFreqTable.put(v,    new    Integer(v));    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
448	[BUG]  [BUGGY]  Integer  v  =  freqTable.get(columnIndex);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  Integer  v  =  freqTable.get(columnIndex);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	Integer  v  =  freqTable.get(columnIndex);	  Integer    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	47	None	replace
449	[BUG]  [BUGGY]  return  getPct(new  int[]  {  v  },  sumFreqTable,  v  }  );  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  int[]  {  v  },  sumFreqTable,  v  }  );  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(new  int[]  {  v  },  sumFreqTable,  v  }  );	  return    getPct(new    int[]    {    v    }    );    int[]    {    v    }    ;    	non-compiled	[CE]  ')'  expected	74	None	replace
450	[BUG]  [BUGGY]  return  getPct(Long.parseLong(sumFreqTable),  v);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.parseLong(sumFreqTable),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.parseLong(sumFreqTable),  v);	  return    getPct(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	62	None	replace
451	[BUG]  [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v,  v);  [CE]  cannot  assign  a  value  to  final  variable  serialVersionUID  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  this.serialVersionUID  =  freqTable.getPct(v,  v);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	this.serialVersionUID  =  freqTable.getPct(v,  v);	  this.serialVersionUID    =    freqTable.getPct(v);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  serialVersionUID	18	None	replace
452	[BUG]  [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  freqTable);  [CE]  no  suitable  method  found  for  getPct(int,long,TreeMap<Comparable<?>,Long>)  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(v,  Long.MAX_VALUE,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(v,  Long.MAX_VALUE,  freqTable);	  return    getPct(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(int,long,TreeMap<Comparable<?>,Long>)	84	None	replace
453	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Long(v));  }  else  {  throw  new  IllegalStateException( " ");  }	  return    getPct(new    Long(v));    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
454	[BUG]  [BUGGY]  if(v  <  =  0.0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0.0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0.0)  {  return  getPct(new  Long(v));  }  else  {  this.sumFreqTable.put(v,  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    this.sumFreqTable.put(v,    getPct(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
455	[BUG]  [BUGGY]  int  v  =  freqTable.get(columnIndex);  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  int  v  =  freqTable.get(columnIndex);  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	int  v  =  freqTable.get(columnIndex);	  int    v    =    freqTable.get(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	45	None	replace
456	[BUG]  [BUGGY]  return  getPct(Long.MAX_VALUE,  sumFreqTable.getVisiblePct(v));  [CE]  cannot  find  symbol  sumFreqTable  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(Long.MAX_VALUE,  sumFreqTable.getVisiblePct(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return  getPct(Long.MAX_VALUE,  sumFreqTable.getVisiblePct(v));	  return    getPct(Long.MAX_VALUE);    int    v    =    getSumFreqTable().getVisiblePct(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	60	None	replace
457	[BUG]  [BUGGY]  double  v  =  this.freqTable.size();  [CE]  variable  v  is  already  defined  in  method  getPct(int)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  double  v  =  this.freqTable.size();  [BUGGY]      return  getPct(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	double  v  =  this.freqTable.size();	  double    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getPct(int)	6	None	replace
458	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  v  =  0;  v  <  freqTable.size();  ++v)  {  return  sumFreqTable.get(v);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  v  =  0;  v  <  freqTable.size();  ++v)  {  return  sumFreqTable.get(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  v  =  0;  v  <  freqTable.size();  ++v)  {  return  sumFreqTable.get(v);  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
459	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(v);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  sumFreqTable.get(v);  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
460	[BUG]  [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  sumFreqTable.put(v,  sumFreqTable.get(v));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  return  getPct(new  Double(v));  if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  sumFreqTable.put(v,  sumFreqTable.get(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	return    getPct(new    Double(v));    if(v  <  =  0)  {  return  getPct(new  Double(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  sumFreqTable.put(v,  sumFreqTable.get(v));  }	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
461	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Integer(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(int  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getPct(new  Integer(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  int  v  [VARIABLES]  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  int  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	331	331	1	replace	if(v  <  =  0)  {  return  getPct(new  Integer(v));  }  else  {  for(int  v  =  0;  v  <  =  0;  v++)  {  return  getPct(new  Long(v));  }	  return    getPct(new    Long(v));    if(v    <    =    0)    {    return    getPct(new    Long(v));    }    else    {    for(int    v    =    0;    v    <    =    0;    v++)    {    return    getPct(new    Long(v));    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
